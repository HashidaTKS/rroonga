h1. リリース手順

h2. news.rdocに前回リリースからの変更点のまとめ

news.rdocに前回のリリース時から現在までの変更点をnews.rdocにまとめるため、下記コマンドを実行してgitのコミットログを表示する。

<pre>
$ git log -p --reverse （リリースバージョン)..
</pre>

ログを"Author:"で検索しながら、ユーザにとって知る必要があるもの（ユーザに見える情報）のコミットログのみを抜き出す。
その動詞を過去形にする。
それらログをそれぞれを次のようにまとめる。
機能などに新しく追加されたものに関してはImprovement,
動作の変更などはChanges,
バグの修正など前バージョンまでにあった問題を修正したものはFixesに記述する。
また、コミットログの行末に[人名]がある場合はその人名をThanks以下に書く。
この作業をリリース予定日よりも前に行った場合は、news.rdocの先頭にコミットIDをメモしておく。
news.rdocの1リリース分のテンプレートは下のようになる。

<pre>
== （リリースするバージョン）: リリース日（yyyy-mm-dd）

=== Improvements

* 

=== Changes

* 

=== Fixes

* 

=== Thanks

* 

</pre>

h2. 日本語訳の作成

下記コマンドを実行してja.poを更新する。

<pre>
$ rake reference:po:ja:update
</pre>

その後、ja.poを開いて、各msgidに対応するmsgstrにコミットコメントの和訳を作成する。

h2. バージョンとリリース日の更新

下記コマンドを入力して、プロジェクトページ（html/index.html、html/index.html.ja）のrroongaの項にある最新バージョンとリリース日をそれぞれ次回リリースに合わせたものに更新する。

<pre>
$ rake release:info:update OLD_VERSION=（現在のバージョン） OLD_RELEASE_DATE=（前回リリース日） RELEASE_DATE=（今回のリリース日）
</pre>

h2. gemパッケージの作成

下記コマンドを打ってアップロード用のgemパッケージをビルドする。

<pre>
$ ruby1.8 -S rake build
</pre>

rroongaの場合、ruby1.9.1ではパースできないオブジェクトがあるためruby1.8で作成する。
TODO: YARDを直して1.9.1でやりたい

h2. gemパッケージの動作確認

そのgemパッケージの動作を確認するため、下記コマンドを打ってローカル環境にインストールする。

<pre>
$ gem1.9.1 install pkg/rroonga-（バージョン番号）.gem --user-install
</pre>

インストールが成功すると/home/(ユーザ名)/.gem/ruby/1.9.1/gems/rroonga-（バージョン番号）/にインストールされる。
このディレクトリに移動して、テストを実行し動作を確認する。

<pre>
$ NO_MAKE=yes ruby1.9.1 test/run-test.rb
</pre>

h2. リリースバージョンのタグを作成

下記コマンドを入力して、今回リリースするバージョンのタグを打ってgit pushする。

<pre>
$ rake tag
$ git push --tags
</pre>

TODO: （rake releaseについての記述はいるのか相談）下はいらないなら節ごと削除。というかrake releaseはなんのためにあるのか？いらないならdesc消すとか？
h3. タグ付けの際に間違ってrake releaseをした場合

タグの頭にvがついてしまうので、

<pre>
$ git tag -d v（バージョン番号）
$ git push origin :refs/tags/v（バージョン番号）
</pre>

してタグを一度消してから上記作業をする。

h2. rubygems.orgにパッケージをアップロード

下記コマンドを実行してパッケージをアップロードする。

<pre>
$ ruby1.8 -S rake gemcutter:release
</pre>

h2. rubyforgeにパッケージをアップロード

下記コマンドを実行してアップロードする。

<pre>
$ ruby1.8 -S rake publish
$ ruby1.8 -S rake html:publish
</pre>

TODO: （いるかどうか相談）ここに書くというより最初の設定での話なのでいらない気がする
h3. 一度もrubyforgeにアップロードしてない場合

<pre>
$ rubyforge --setup
</pre>

をしてユーザの設定をする。

h2. メーリングリストにリリースの周知

メーリングリストにリリースした旨を書いたメールを流す。

TODO: （書く）メールアドレス
TODO: （相談）メールテンプレ（定型文として使いまわせるならその部分があった方がわかりやすい）
TODO: （どうだったか聞く）英語版？

h2. rubyforgeのニュースを更新

rubyforgeの最新ニュースを更新する。
TODO: （聞く）やったことがないので具体的なやり方を聞く

h2. 次回リリース時のバージョン番号の決定

ext/groonga/rb-grn.hにある、RB_GRN_MAJOR_VERSION,RB_GRN_MINOR_VERSION,RB_GRN_MICRO_VERSIONの値を次回リリース時のバージョンの値に変更する。

TODO: （聞く）具体的にどうバージョン番号を決める？
