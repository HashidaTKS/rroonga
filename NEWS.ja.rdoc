= お知らせ

== 1.1.0: 2011-02-09

=== 改良

* groonga 1.1.0対応。
* Groonga::Plugin.registerを追加。

== 1.0.9: 2011-01-29

=== 改良

* Windows上でのgem作成に対応。
  [ongaeshiさんがパッチ提供]
* Groonga::Schemaでテーブル・カラムを削除した時に作成したディレクトリを
  削除するようにした。
* Groonga::Context#create_databaseを追加。
* Groonga::Context#open_databaseを追加。
* Groonga::Column#indexesを追加。
* Groonga::Table#select内でのインデックスカラムにマッチする記法をサポート。
    table.select do |record|
      record.match("query") do |match_record|
        (match_record.index("Terms.title") * 1000) |
          (match_record.index("Terms.description") * 100)
          match_record.content
      end
    end
* Groonga::Table#select内での前方一致検索に対応。
    table.select do |record|
      record.name.prefix_search("groo")
    end
* Groonga::Table#select内での後方一致検索に対応。
    table.select do |record|
      record.name.suffix_search("nga")
    end
* :default_tokenizerのスキーマダンプに対応。
* :key_normalizeのスキーマダンプに対応。
* Groonga::Table#have_column?が擬似カラムに対応。
* Groonga::Record#have_column?が擬似カラムに対応。

=== 変更

* Groonga::OperatoionをGroonga::Operatorに変更。
  （しばらくはGroonga::Operationも使えるが、非推奨。）

=== 修正

* 複数のGroonga::Contextを利用した場合に
  Groonga::Table#selectでクラッシュする問題を修正。
* 例外発生時にクラッシュする問題を修正。

=== 感謝

* ongaeshioさん

== 1.0.8: 2010-12-25

=== 改良

* Groonga::Schemaのn-gramトークナイザー検出処理を改良。

=== 修正

* selectでmatch_targetを利用した場合に生きているオブジェクトもGC
  される問題を修正。

== 1.0.7: 2010-12-19

=== 修正

* Ruby 1.8でRubyGemsでインストールされたpkg-configを使えるようにした。
  [@kamipoさんが報告]
* Groonga::Table#columnsのメモリリークを修正。

=== 感謝

* @kamipoさん

== 1.0.5: 2010-11-29

=== 改良

* Groonga::Schemaでgroongaの組み込み型をshort_textなどのように
  「小文字 + アンダースコア」でも指定できるようにした。

=== 修正

* GC時にクラッシュするバグを修正。 [Ryo Onodera]

== 1.0.4: 2010-11-29

=== 改良

* groonga 1.0.4対応。
  * Groonga::UnsupportedCommandVersionを追加。
* Groonga::Record#support_sub_records?を追加。
* Groonga::Record#eql?とGroonga::Record#hashを追加。
  （同じテーブルの同じレコードIDのオブジェクトを同一のHashキーとして扱う。）
* pkg-config gemを利用するようにした。
* Groonga::Table#select内でrecord_idメソッドを持っているメソッドはレコード
  として扱うようにした。
* Groonga::Record#record_idを追加。
* Groonga::Table#support_key?を追加。
* Groonga::Record#support_key?を追加。
* Groonga::Record#support_key?を追加。
* Groonga::Column#reference_key?を追加。
* Groonga::Column#index_column?を追加。
* Groonga::Schema#dumpを追加。
* Groonga::Schemaが複数のカラムのインデックス作成に対応。
* Groonga::Schemaで定義したオブジェクトに対応するファイル名に
  わかりやすいファイル名を利用するようにした。
* Groonga::Schemaで参照カラムを定義時に参照先のテーブル名を省略可能になった。
* Groonga::Schema.remove_columnを追加。
* Groonga::Schemaでcreated_atカラムとupdated_atカラムを作るための
  timestamps便利メソッドを追加。
* Groonga::Context#support_zlib?を追加。
* Groonga::Context#support_lzo?を追加。
* Groonga::Database#touchを追加。
* Groonga::Table#exist?を追加。
* Groonga::Record#valid?を追加。
* Groonga::Column#vector?を追加。
* Groonga::Column#scalar?を追加。
* Groonga::Record#vector_column?を追加。
* Groonga::Record#scalar_column?を追加。
* レコードIDが必要なところにrecord_raw_idを持つオブジェクトなら
  Groonga::Record以外も渡せるようにした。
* Groonga::Record#record_raw_idを追加。
* ベクタの参照カラムの値にArray以外でもto_aryを持つオブジェクトを
  設定できるようにした。

== 変更

* Groonga::PatriciaTrie#open_cursorでは:order_byのデフォルト値として:key
  を使うようにした。
* 非推奨扱いのGroonga::TableKeySupport#findを削除。
* Groonga::Hash#createとGroonga::PatriciaTrie#createでキーの型を省略した
  場合はShortTextを使用するようにした。
* Groonga::Schema#loadをGroonga::Schema#restoreに改名。
* pkg-config 1.0.7対応。
* Groonga::Column#index?を追加。Groonga::Column#index_column?は非推奨。
* Groonga::Column#reference?を追加。Groonga::Column#reference_column?は非推奨。

=== 修正

* keyにインデックスを張れない問題を修正。
* GC時にクラッシュする問題を修正。

== 1.0.1: 2010-09-12

=== 修正

* テーブル作成時に誤ったフラグを指定していた問題を修正。
  [小野マトペさんが報告]

=== 感謝

* 小野マトペさん

== 1.0.0: 2010-08-29

* groonga 1.0.0対応。
  * Groonga::CASErrorを追加。
  * Groonga::Table#open_cursorに:order_byオプションを追加。
  * 前方一致検索がマッチしたレコードを順に取り出すカーソルを作る
    Groonga::PatriciaTrie#open_prefix_cursorを追加。
  * ローマ字・ひらがなでカタカナのキーを検索するカーソルを作る
    Groonga::PatriciaTrie#open_rk_cursorを追加。
  * 値の近い順にレコードを取り出すカーソルを作る
    Groonga::PatriciaTrie#open_near_cursorを追加。
* インデックスのソースに_keyを指定できるようになった。

== 0.9.5: 2010-07-29

* groonga 0.7.4対応。
* Groonga::Table#selectの改良:
  * 重み付きマッチ対応:

    sourceカラムとtitleカラムにマッチするが、
    titleカラムの方がスコアが大きくなる例:
      table.select do |record|
        (record.title * 10 | record.source) =~ "query"
      end
  * 配列で複数条件のand表現に対応:

    以下は同じ条件になる:
      table.select do |record|
        conditions = []
        conditions << record.title =~ "query"
        conditions << record.updated_at > Time.parse("2010-07-29T21:14:29+09:00")
        conditions
      end

      table.select do |record|
        (record.title =~ "query") &
          (record.updated_at > Time.parse("2010-07-29T21:14:29+09:00"))
      end
* 利用しているgroongaのバージョン取得対応: Groonga::VERSION
* Groonga::Table#support_sub_records?追加
* ページネーション対応: Groonga::Table#paginate, Groonga::Pagination

== 0.9.4: 2010-04-22

* リリースミス修正。

== 0.9.3: 2010-04-22

* リリースミス修正。

== 0.9.2: 2010-04-22

* groonga 0.1.9対応。
* たくさん。

== 0.9.1: 2010-02-09

* groonga 0.1.6対応

== 0.9.0: 2010-02-09

* groonga 0.1.5対応
* APIの追加
  * Groonga::Object#context
  * Groonga::Record#n_sub_records
  * Groonga::Context#send
  * Groonga::Context#receive
  * Groonga::PatriciaTrie#prefix_search [Tasuku SUENAGA]
  * Groonga::Object#path [Ryo Onodera]
  * Groonga::Object#lock [Tasuku SUENAGA]
  * Groonga::Object#unlock [Tasuku SUENAGA]
  * Groonga::Object#locked? [Tasuku SUENAGA]
  * Groonga::Object#temporary?
  * Groonga::Object#persistent?
  * Groonga::ObjectClosed
  * Groonga::Context.[]
  * Groonga::Table#column_value
  * Groonga::Table#set_column_value
* APIの変更
  * Groonga::Table#select, Groonga::Column#select
    * Groonga::Expressionも受け付けるようになった
    * grn式のシンタックスを指定する:syntaxオプションの追加
  * Groonga::Table#open_cursor
    * 開始位置を指定する:offsetオプションの追加
    * 最大レコード数を指定する:limitオプションの追加
  * Groonga::Expression.parseの引数を変更
    * (nil (default) -> :column) -> (nil (default) -> :query)
    * :column -> 廃止
    * :table -> :query
    * :table_query -> :query
    * :expression -> :script
    * :language -> :script
  * Groonga::Table#define_column, Groonga::Table#define_index_column
    * 永続テーブルをデフォルトにした
  * Groonga::Table#[]をGroonga::Table#valueに変更
  * Groonga::Table#[]=をGroonga::Table#set_valueに変更
  * Groonga::Table#findをGroonga::Table#[]に変更
  * Groonga::Table#findは非推奨
  * Groonga::Table#[]=を削除
  * Groonga::TableKeySupport#[]=はGroonga::TableKeySupport#addの別名
  * Groonga::Recordで存在しないカラムにアクセスしたときの例外を
    Groonga::InvalidArgumentからGroonga::NoSuchColumnに変更
* バグ修正
  * スキーマにコンテキストが伝搬されない問題の修正 [dara]
  * Groonga::PatriciaTrie#tag_keysが最後のテキストを返さない問題の修正
    [Ryo Onodera]
* extconf.rbにデバッグモードでビルドする--with-debugオプションを追加
* Ruby 1.9.1でextconf.rbが失敗する問題の修正

=== 感謝

* dara
* Ryo Onodera
* Tasuku SUENAGA

== 0.0.7: 2009-10-02

* groonga 0.1.4対応
* APIの追加
  * Groonga::PatriciaTrie#scan
  * Groonga::PatriciaTrie#tag_keys
  * Groonga::Expression#snippet
  * Groonga::Object#append
  * Groonga::Object#prepend

== 0.0.6: 2009-07-31

* groonga 0.1.1対応
* ドキュメントの修正 [id:mat_aki]
* Groonga::Table#selectでのg式対応
* APIの追加
  * Groonga::Table#union!
  * Groonga::Table#intersect!
  * Groonga::Table#differene!
  * Groonga::Table#merge!
* tar.gzも提供 [id:m_seki]
* メモリリークの修正

== 0.0.3: 2009-07-18

* [#26145] Groonga::TableKeySupport#has_key?の追加 [Tasuku SUENAGA]
* [#26146] カラム名が存在しない場合はGroonga::Record#[]が例外
  をあげるように変更 [Tasuku SUENAGA]
* 32ビット環境をサポート [niku]
* N-gramインデックスサーチのテストを追加 [dara]
* APIの追加
  * Groonga::Record#incemrent!
  * Groonga::Record#decemrent!
  * Groonga::Record#lock
  * Groonga::Table#lock
  * Groonga::Schema: スキーマ定義用DSL
  * Groonga::Expression

== 0.0.2: 2009-06-04

* groonga 0.0.8対応 [mori]
* 性能向上: キー、値、ドメイン、レンジをキャッシュ
* API改良
* ドキュメントの追加
* Ruby 1.9対応
* バグ修正:
  * インストール処理の修正 [Tasuku SUENAGA]
  * メモリリーク修正

== 0.0.1: 2009-04-30

* 最初のリリース！
