# ja.po for rroonga Reference.
# Copyright (C) 2011 Kouhei Sutou
# This file is distributed under the same license as the rroonga package.
# Kouhei Sutou <kou@clear-code.com>, 2011.
msgid ""
msgstr ""
"Project-Id-Version: rroonga 2.1.0\n"
"POT-Creation-Date: 2011-11-20 22:17+0900\n"
"PO-Revision-Date: 2013-07-29 23:01+0900\n"
"Last-Translator: Kouhei Sutou <kou@clear-code.com>\n"
"Language-Team: Japanese\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"

#: ../../README.textile:1
msgid "h1. README"
msgstr "h1. はじめに"

#: ../../README.textile:3
msgid "h2. Name"
msgstr "h2. 名前"

#: ../../README.textile:5
msgid "rroonga"
msgstr ""

#: ../../README.textile:7
msgid "h2. Description"
msgstr "h2. 説明"

#: ../../README.textile:9
msgid ""
"Ruby bindings for groonga that provide full text search and\n"
"column store features."
msgstr "全文検索機能とカラムストア機能を提供するgroongaのRubyバインディングです。"

#: ../../README.textile:12
msgid ""
"rroonga is an extension library to use groonga's DB-API\n"
"layer. rroonga provides Rubyish readable and writable API\n"
"not C like API. You can use groonga's fast and highly\n"
"functional features from Ruby with Rubyish form."
msgstr "groongaのいわゆるDB-API層をRubyから使うための拡張ライブラリです。groongaのAPIをそのままRubyレベルに提供するのではなく、Rubyらしく読み書きしやすいAPIとして提供します。高速・高機能なgroongaをRubyらしい書き方で利用できます。"

#: ../../README.textile:17
msgid "See the following URL about groonga."
msgstr "groongaに関する情報は以下のURLを参照して下さい。"

#: ../../README.textile:19
msgid "* \"The groonga official site\":http://groonga.org/"
msgstr "* \"groonga公式サイト\":http://groonga.org/"

#: ../../README.textile:21
msgid "h2. Authors"
msgstr "h2. 作者"

#: ../../README.textile:23
msgid ""
"* Kouhei Sutou <kou@clear-code.com>\n"
"* Tasuku SUENAGA <a@razil.jp>\n"
"* Daijiro MORI <morita@razil.jp>\n"
"* Yuto HAYAMIZU <y.hayamizu@gmail.com>\n"
"* SHIDARA Yoji <dara@shidara.net>\n"
"* yoshihara haruka <yoshihara@clear-code.com>"
msgstr ""
"* Kouhei Sutou <kou@clear-code.com>\n"
"* Tasuku SUENAGA <a@razil.jp>\n"
"* Daijiro MORI <morita@razil.jp>\n"
"* Yuto HAYAMIZU <y.hayamizu@gmail.com>\n"
"* SHIDARA Yoji <dara@shidara.net>\n"
"* yoshihara haruka <yoshihara@clear-code.com>"

#: ../../README.textile:30
msgid "h2. License"
msgstr "h2. ライセンス"

#: ../../README.textile:32
msgid "LGPL 2.1. See license/LGPL for details."
msgstr "LGPL 2.1です。詳しくはlicense/LGPLをご覧ください。"

#: ../../README.textile:34
msgid ""
"(Kouhei Sutou has a right to change the license including\n"
"contributed patches.)"
msgstr "（コントリビュートされたパッチなども含み、Kouhei Sutouがライセンスを変更する権利を持ちます。）"

#: ../../README.textile:37
msgid "h2. Dependencies"
msgstr "h2. 依存ソフトウェア"

#: ../../README.textile:39
msgid ""
"* Ruby >= 1.8 (including 1.9.2)\n"
"* groonga >= 1.2.0"
msgstr ""
"* Ruby >= 1.8 （1.9.2対応）\n"
"* groonga >= 1.2.0"

#: ../../README.textile:42 ../../doc/text/tutorial.textile:5
msgid "h2. Install"
msgstr "h2. インストール"

#: ../../README.textile:44 ../../doc/text/tutorial.textile:9
msgid ""
"<pre>\n"
"!!!command_line\n"
"% sudo gem install rroonga\n"
"</pre>"
msgstr ""

#: ../../README.textile:49
msgid "h2. Documents"
msgstr "h2. ドキュメント"

#: ../../README.textile:51
msgid ""
"* \"Reference manual in English\":http://ranguba.org/rroonga/en/\n"
"* \"Reference manual in Japanese\":http://ranguba.org/rroonga/ja/"
msgstr ""
"* \"リファレンスマニュアル（英語）\":http://ranguba.org/rroonga/en/\n"
"* \"リファレンスマニュアル（日本語）\":http://ranguba.org/rroonga/ja/"

#: ../../README.textile:54
msgid "h2. Mailing list"
msgstr "h2. メーリングリスト"

#: ../../README.textile:56
msgid ""
"* English: \"groonga-users-en\":http://rubyforge.org/mailman/listinfo/groonga-users-en\n"
"* Japanese: \"groonga-dev\":http://lists.sourceforge.jp/mailman/listinfo/groonga-dev"
msgstr ""
"* 英語: \"groonga-users-en\":http://rubyforge.org/mailman/listinfo/groonga-users-en\n"
"* 日本語: \"groonga-dev\":http://lists.sourceforge.jp/mailman/listinfo/groonga-dev"

#: ../../README.textile:59
msgid "h2. Thanks"
msgstr "h2. 感謝"

#: ../../README.textile:61
msgid ""
"* Daijiro MORI: sent patches to support the latest groonga.\n"
"* Tasuku SUENAGA: sent bug reports.\n"
"* niku: sent bug reports.\n"
"* dara:\n"
"** wrote tests.\n"
"** fixed bugs.\n"
"* id:mat_aki: sent bug reports.\n"
"* @yune_kotomi: sent a bug report.\n"
"* m_seki: sent bug reports.\n"
"* ono matope: sent bug reports.\n"
"* @kamipo: send a bug report.\n"
"* ongaeshi: sent a patch to build gem on Windows.\n"
"* mallowlabs: send a patch."
msgstr ""
"* 森さん: 最新groonga対応パッチをくれました。\n"
"* グニャラくん: バグレポートをしてくれました。\n"
"* にくさん: バグレポートをしてくれました。\n"
"* daraさん:\n"
"** テストを書いてくれました。\n"
"** バグを直してくれました。\n"
"* id:mat_akiさん: バグレポートをしてくれました。\n"
"* @yune_kotomiさん: バグレポートをしてくれました。\n"
"* 咳さん: バグレポートをしてくれました。\n"
"* 小野マトペさん: バグレポートをしてくれました。\n"
"* @kamipoさん: バグレポートをしてくれました。\n"
"* ongaeshiさん: Windows上でgemをビルドするためのパッチをくれました。\n"
"* mallowlabsさん: パッチを送ってくれました。"

#: ../../doc/text/news.textile:1
msgid "h1. NEWS"
msgstr "h1. お知らせ"

#: ../../doc/text/news.textile:3
msgid "h2(#3-0-5). 3.0.5: 2013-07-29"
msgstr ""

#: ../../doc/text/news.textile:5 ../../doc/text/news.textile:40
#: ../../doc/text/news.textile:63 ../../doc/text/news.textile:84
#: ../../doc/text/news.textile:105 ../../doc/text/news.textile:123
#: ../../doc/text/news.textile:158 ../../doc/text/news.textile:165
#: ../../doc/text/news.textile:244 ../../doc/text/news.textile:250
#: ../../doc/text/news.textile:270 ../../doc/text/news.textile:293
#: ../../doc/text/news.textile:327 ../../doc/text/news.textile:350
#: ../../doc/text/news.textile:361 ../../doc/text/news.textile:380
#: ../../doc/text/news.textile:399 ../../doc/text/news.textile:433
#: ../../doc/text/news.textile:443 ../../doc/text/news.textile:453
#: ../../doc/text/news.textile:469 ../../doc/text/news.textile:485
#: ../../doc/text/news.textile:503 ../../doc/text/news.textile:527
#: ../../doc/text/news.textile:556 ../../doc/text/news.textile:574
#: ../../doc/text/news.textile:581 ../../doc/text/news.textile:628
#: ../../doc/text/news.textile:649 ../../doc/text/news.textile:660
msgid "h3. Improvements"
msgstr "h3. 改善"

#: ../../doc/text/news.textile:7
msgid ""
"* [dumper] supported dumping of DoubleArrayTrie.\n"
"* Supported Int8/UInt8/Int16/UInt16 to Ruby conversion.\n"
"  [groonga-dev,01524][Reported by Masaharu YOSHIOKA]\n"
"* Added memory pool mechanism to reduce GC easily.\n"
"  {Groonga::Context#push_memory_pool} and {Groonga::Context#pop_memory_pool}\n"
"  are added.\n"
"  You can close temporary table objects automatically:\n"
"  <pre>\n"
"  context.push_memory_pool do\n"
"    # create tempoeray table objects by select, group, sort and so on...\n"
"  end\n"
"  # createed tempoeray table objects are closed automatically\n"
"  </pre>\n"
"* Supported max int32 over Fixnum\n"
"  [Reported by xtuaok]"
msgstr ""
"* [dumper] ダブル配列トライのダンプに対応。\n"
"* Int8/UInt8/Int16/UInt16型の値をRubyのオブジェクトへ変換できるようにした。\n"
"  [groonga-dev,01524][吉岡 真治さんが報告]\n"
"* GCを簡単に減らすためのメモリープールという仕組みを追加した。\n"
"  {Groonga::Context#push_memory_pool}と{Groonga::Context#pop_memory_pool}\n"
"  が追加されています。以下のようにすれば一時テーブルを自動的に閉じることができます。\n"
"  <pre>\n"
"  context.push_memory_pool do\n"
"    # select、group、sortなどで一時テーブルを作成\n"
"  end\n"
"  # 作成された一時テーブルは自動的に閉じられている\n"
"  </pre>\n"
"* 32bit整数を超えるFixnumに対応。\n"
"  [xtuaokさんが報告]"

#: ../../doc/text/news.textile:23 ../../doc/text/news.textile:34
#: ../../doc/text/news.textile:56 ../../doc/text/news.textile:77
#: ../../doc/text/news.textile:95 ../../doc/text/news.textile:141
#: ../../doc/text/news.textile:152 ../../doc/text/news.textile:287
#: ../../doc/text/news.textile:311 ../../doc/text/news.textile:321
#: ../../doc/text/news.textile:340 ../../doc/text/news.textile:355
#: ../../doc/text/news.textile:366 ../../doc/text/news.textile:421
#: ../../doc/text/news.textile:427 ../../doc/text/news.textile:447
#: ../../doc/text/news.textile:461 ../../doc/text/news.textile:478
#: ../../doc/text/news.textile:489 ../../doc/text/news.textile:496
#: ../../doc/text/news.textile:515 ../../doc/text/news.textile:616
#: ../../doc/text/news.textile:632 ../../doc/text/news.textile:638
#: ../../doc/text/news.textile:654 ../../doc/text/news.textile:711
#: ../../doc/text/news.textile:718
msgid "h3. Fixes"
msgstr "h3. 修正"

#: ../../doc/text/news.textile:25
msgid "* [dumper] fixed a bug that no column table isn't dumped."
msgstr "* [dumper] カラムのないテーブルがダンプされない問題を修正。"

#: ../../doc/text/news.textile:27 ../../doc/text/news.textile:99
#: ../../doc/text/news.textile:117 ../../doc/text/news.textile:237
#: ../../doc/text/news.textile:315 ../../doc/text/news.textile:344
#: ../../doc/text/news.textile:373 ../../doc/text/news.textile:393
#: ../../doc/text/news.textile:521 ../../doc/text/news.textile:549
#: ../../doc/text/news.textile:622 ../../doc/text/news.textile:643
#: ../../doc/text/news.textile:722 ../../doc/text/news.textile:836
msgid "h3. Thanks"
msgstr "h3. 感謝"

#: ../../doc/text/news.textile:29
msgid ""
"* Masaharu YOSHIOKA\n"
"* xtuaok"
msgstr ""
"* 吉岡 真治さん\n"
"* xtuaokさん"

#: ../../doc/text/news.textile:32
msgid "h2(#3-0-4). 3.0.4: 2013-07-04"
msgstr ""

#: ../../doc/text/news.textile:36
msgid "* Fixed a rroogna 3.0.3 gem package for Windows."
msgstr "* Windows用のrroogna 3.0.3 gemパッケージを修正。"

#: ../../doc/text/news.textile:38
msgid "h2(#3-0-3). 3.0.3: 2013-07-04"
msgstr ""

#: ../../doc/text/news.textile:42
msgid ""
"* Required groonga >= 3.0.5.\n"
"* Added an error check for creating a result table of {Groonga::Table#select}.\n"
"* Added {Groonga::Operator::AND_NOT}.\n"
"* Deprecated {Groonga::Operator::BUT} because groonga deprecated it.\n"
"  Use {Groonga::Operator::AND_NOT} instead.\n"
"* Added {Groonga::Array#unblock}.\n"
"* Added @:max_n_sub_records@ option to {Groonga::Table#group}.\n"
"* Added {Groonga::Table#each_sub_record}.\n"
"* Supported groonga to Ruby conversion for vector value.\n"
"* Added @:reference => true@ option to {Groonga::Expression#define_variable}\n"
"  that defines reference type variable.\n"
"* Added {Groonga::Record#sub_records} that returns sub records for the record.\n"
"  Sub records is a {Groonga::SubRecords} instance."
msgstr ""
"* groonga >= 3.0.5を必須とした。\n"
"* {Groonga::Table#select}の結果テーブル作成時のエラーチェックを追加。\n"
"* {Groonga::Operator::AND_NOT}を追加。\n"
"* {Groonga::Operator::BUT}を非推奨にした。これはgroongaが非推奨にしたためである。\n"
"  代わりに{Groonga::Operator::AND_NOT}を使うこと。\n"
"* {Groonga::Array#unblock}を追加。\n"
"* {Groonga::Table#group}に @:max_n_sub_records@ オプションを追加。\n"
"* {Groonga::Table#each_sub_record}を追加。\n"
"* groongaからベクターの値を読み込めるようにした。\n"
"* {Groonga::Expression#define_variable}に @:reference => true@ オプションを追加。\n"
"  これは、参照型の変数を定義するためのものである。\n"
"* レコードのサブレコードを返す{Groonga::Record#sub_records}を追加。\n"
"  サブレコードは{Groonga::SubRecords}のインスタンスである。"

#: ../../doc/text/news.textile:58
msgid ""
"* Fixed {Groonga::Expression#[]} return type. It returns {Groonga::Variable}\n"
"  instead of value itself. CAUTION: It is a backward incompatible change."
msgstr "* {Groonga::Expression#[]}の返り値の型を修正。値そのものではなく{Groonga::Variable}を返すようにした。注意: これは後方非互換の変更である。"

#: ../../doc/text/news.textile:61
msgid "h2(#3-0-2). 3.0.2: 2013-05-29"
msgstr ""

#: ../../doc/text/news.textile:65
msgid ""
"* Required groonga >= 3.0.4.\n"
"* Supported set/get a vector of Time.\n"
"* [grndump] Stopped to dump index only tables. They are needless.\n"
"* Added {Groonga::Record#to_json}.\n"
"* Added {Groonga::IndexColumn#add}.\n"
"* Added {Groonga::IndexColumn#delete}.\n"
"* Added {Groonga::IndexColumn#update}.\n"
"* Deprecated {Groonga::IndexColumn#[]=}. Use {Groonga::IndexColumn#add},\n"
"  {Groonga::IndexColumn#delete} or {Groonga::IndexColumn#update} instead.\n"
"* Added {Groonga::Table#have_n_sub_records_space?}.\n"
"* [grndump] Don't dump \"register PLUGIN\" when schema dump is disabled."
msgstr ""
"* groonga >= 3.0.4を必須にした。\n"
"* Timeのベクターを設定・取得できるようにした。\n"
"* [grndump] インデックスのみのテーブルはダンプしないようにした。これはダンプする必要がないためである。\n"
"* {Groonga::Record#to_json}を追加。\n"
"* {Groonga::IndexColumn#add}を追加。\n"
"* {Groonga::IndexColumn#delete}を追加。\n"
"* {Groonga::IndexColumn#update}を追加。\n"
"* {Groonga::IndexColumn#[]=}を非推奨にした。代わりに{Groonga::IndexColumn#add}、{Groonga::IndexColumn#delete}、{Groonga::IndexColumn#update}を使うこと。\n"
"* {Groonga::Table#have_n_sub_records_space?}を追加。\n"
"* [grndump] スキーマのダンプを無効にしているときは\"register PLUGIN\"もダンプしないようにした。"

#: ../../doc/text/news.textile:79
msgid ""
"* [grndump]\n"
"  Fixed a bug that reference tables may be dumpped before referenced tables."
msgstr "* [grndump] 参照されているテーブルよりも前に参照しているテーブルがダンプされることがある問題を修正。"

#: ../../doc/text/news.textile:82
msgid "h2(#3-0-1). 3.0.1: 2013-05-01"
msgstr ""

#: ../../doc/text/news.textile:86
msgid ""
"* Required groonga >= 3.0.3.\n"
"* Supported assigning weight to value. See {Groonga::Table#set_column_value},\n"
"  {Groonga::Record#initialize} and {Groonga::Record#[]=} for details.\n"
"* Renamed to {Groonga::QueryLogger.path} from {Groonga::Logger.query_log_path}.\n"
"* Renamed to {Groonga::QueryLogger.path=} from {Groonga::Logger.query_log_path=}.\n"
"* Renamed to {Groonga::Logger.path} from {Groonga::Logger.log_path}.\n"
"* Renamed to {Groonga::Logger.path=} from {Groonga::Logger.log_path=}.\n"
"* Added missing \"Packnga >= 0.9.7\" requirement. [Reported by takkanm]"
msgstr ""
"* groonga >= 3.0.3を必須にした。\n"
"* 値に重みを指定できるようにした。詳細は{Groonga::Table#set_column_value}、{Groonga::Record#initialize}、{Groonga::Record#[]=}を参照。\n"
"* {Groonga::Logger.query_log_path}を{Groonga::QueryLogger.path}へ改名した。\n"
"* {Groonga::Logger.query_log_path=}を{Groonga::QueryLogger.path=}へ改名した。\n"
"* {Groonga::Logger.log_path}を{Groonga::Logger.path}へ改名した。\n"
"* {Groonga::Logger.log_path=}を{Groonga::Logger.path=}へ改名した。\n"
"* \"Packnga >= 0.9.7\"への依存が抜けていたので追加した。 [takkanmさんが報告]"

#: ../../doc/text/news.textile:97
msgid "* Fixed a memory leak on error."
msgstr "* エラー発生時にメモリリークする問題を修正。"

#: ../../doc/text/news.textile:101
msgid "* takkanm"
msgstr "* @takkanmさん"

#: ../../doc/text/news.textile:103
msgid "h2(#3-0-0). 3.0.0: 2013-03-29"
msgstr ""

#: ../../doc/text/news.textile:107
msgid ""
"* Required groonga >= 3.0.2.\n"
"* Added block support to {Groonga::Context#create_database}. If a\n"
"  block is given, created database is closed on block exit.\n"
"* [experimental] Added {Groonga::Array#push}.\n"
"* [experimental] Added {Groonga::Array#pull}.\n"
"* Added more closed object checks.\n"
"  [GitHub #8][Reported by KITAITI Makoto]\n"
"* Added block support to {Groonga::Context#restore}. If a block is\n"
"  given, command and its response are yielded."
msgstr ""
"* groonga >= 3.0.2を必須にした。\n"
"* {Groonga::Context#create_database}がブロックをサポートした。ブロックを渡すとブロックを抜ける時に作成したデータベースを閉じる。\n"
"* [実験的] {Groonga::Array#push}を追加した。\n"
"* [実験的] {Groonga::Array#pull}を追加した。\n"
"* 閉じたオブジェクトのチェックを増やした。\n"
"  [GitHub #8][KITAITI Makotoさんが報告]\n"
"* {Groonga::Context#restore}がブロックをサポートした。ブロックを渡すと実行したコマンドとそのレスポンスをブロックに渡す。"

#: ../../doc/text/news.textile:119
msgid "* KITAITI Makoto"
msgstr "* KITAITI Makotoさん"

#: ../../doc/text/news.textile:121
msgid "h2(#2-1-3). 2.1.3: 2013-01-29"
msgstr ""

#: ../../doc/text/news.textile:125
msgid ""
"* Removed Groonga::View removed in groonga 2.1.2.\n"
"* [doc] Added tutorial in English.\n"
"** for English:http://ranguba.org/rroonga/en/file.tutorial.html\n"
"** for Japanese:http://ranguba.org/rroonga/ja/file.tutorial.html\n"
"* [context] Added Context#restore. This method restores command dumped\n"
"  by \"grndump\" command. Please see example below:\n"
"<pre>\n"
"!!!ruby\n"
"dumped_commands = File.read(\"dump.grn\")\n"
"context.restore(dumped_commands)\n"
"</pre>\n"
"* Supported new logger API in groonga. Old API isn't used anymore.\n"
"* For installing groonga with this gem:\n"
"** Stopped to install documentation about groonga. See \"Web site\":http://groonga.org/docs/ instead.\n"
"** Stopped to build static library because it isn't used by rroonga."
msgstr ""
"* groonga 2.1.2で削除されたGroonga::Viewの機能を削除。\n"
"* [doc] 英訳したチュートリアルを追加。\n"
"** 英語版:  http://ranguba.org/rroonga/en/file.tutorial.html\n"
"** 日本語版: http://ranguba.org/rroonga/ja/file.tutorial.html\n"
"* [context] Context#restoreを追加。このメソッドはgroongaに搭載されている\"grndump\"コマンドによってダンプされたコマンドをリストアできます。\n"
"例：\n"
"<pre>\n"
"!!!ruby\n"
"dumped_commands = File.read(\"dump.grn\")\n"
"context.restore(dumped_commands)\n"
"</pre>\n"
"* groongaの新しいlogger APIをサポートしました。古いAPIはもう使われていません。\n"
"* このgemと一緒にインストールされるgroongaについて:\n"
"** groongaのドキュメントはインストールしないようにした。ドキュメントは \"Webサイト\":http://groonga.org/ja/docs/ を見てください。\n"
"** rroongaでは使っていないのでスタティックライブラリはビルドしないようにした。"

#: ../../doc/text/news.textile:143
msgid "* [dumper] Reduced needless new lines in dumped commands."
msgstr ""

#: ../../doc/text/news.textile:145
msgid ""
"* For ranguba project:\n"
"** [template] Removed needless block for sponsor by rubyforge.\n"
"** [template] Removed needless piwik tag.\n"
"** [template] Fixed URLs of references in Japanese."
msgstr ""
"* ラングバプロジェクト向け：\n"
"** [template] rubyforgeスポンサーのタグを削除。\n"
"** [template] piwikのタグを削除。\n"
"** [template] 日本語のリファレンスのURLを修正。"

#: ../../doc/text/news.textile:150
msgid "h2(#2-1-2). 2.1.2: 2013-01-04"
msgstr ""

#: ../../doc/text/news.textile:154
msgid "* Fixed GC related crash. Table's domain and range are also marked."
msgstr "* GC関係のバグを削除。"

#: ../../doc/text/news.textile:156
msgid "h2(#2-1-1). 2.1.1: 2012-12-29"
msgstr ""

#: ../../doc/text/news.textile:160
msgid ""
"* Required groonga 2.1.1 because groonga 2.1.0 has a serious bug\n"
"  related to key normalization."
msgstr "* groonga 2.1.0にキーの正規化に関する重大なバグがあったため、groonga 2.1.1を必須とした。"

#: ../../doc/text/news.textile:163
msgid "h2(#2-1-0). 2.1.0: 2012-12-29"
msgstr ""

#: ../../doc/text/news.textile:167
msgid ""
"* Required groonga 2.1.0.\n"
"* Supported mass record deletion with block.\n"
"  [groonga-dev,01138][Suggested by ongaeshi]\n"
"* Added Groonga::Normalizer.normalize (experimental). It normalize string.\n"
"  e.g.)\n"
"    Groonga::Normalizer.normalize(\"AbC\") # => \"abc\"\n"
"  Now, it removes any spaces by default, but it will be customized soon.\n"
"* Supported :normalizer option in DoubleArrayTrie, PatriciaTrie, Hash,\n"
"  Schema when creating tables.\n"
"* [table] Added using normalizer accessor.\n"
"* [table] Used normalizer for checking key normalization is enabled or not.\n"
"* Added groonga-index-dump tool (experimental).\n"
"  This tool dumps infomations for each index from DB.\n"
"  Dumped informations are contained at \"INDEX_NAME.dump\" files in\n"
"  \"TARGET_TABLE_NAME.index_INDEX_COLUMN_NAME\".\n"
"  e.g.)"
msgstr ""
"* groonga 2.1.0対応。\n"
"* ブロックを使ってまとめてレコードを削除できるようになった。\n"
"  [groonga-dev,01138][ongaeshiさんが報告]\n"
"* Groonga::Normalizer.normalizeを追加。（ただし実験的です）このメソッドは文字列を正規化します。\n"
"  例）\n"
"    Groonga::Normalizer.normalize(\"AbC\") # => \"abc\"\n"
"  今はこのメソッドは空白を自動で削除しますが、カスタマイズ可能にする予定です。\n"
"* DoubleArrayTrie, PatriciaTrie, Hash, Schemaを使ってテーブルを作るときに:normalizerオプションを指定可能にした。\n"
"* [table] 使用しているノーマライザーへのアクセサを追加。\n"
"* [table] キーが正規化可能かどうかをノーマライザーを使ってチェックするようにした。\n"
"* groonga-index-dumpコマンドを追加。（ただし実験的です）\n"
"  このツールはDBからインデックスの情報をダンプします。\n"
"  ダンプされた情報は\"インデックス名.dump\"というファイルに保存され、このファイルは\"インデックス対象のテーブル名.index_インデックスカラム名\"というディレクトリに保存されます。\n"
"  例）"

#: ../../doc/text/news.textile:184
msgid ""
"  <pre>\n"
"   $ cat index-dump.sdf\n"
"     table_create --name Video --flags TABLE_HASH_KEY --key_type UInt32\n"
"     table_create --name Tag --flags TABLE_HASH_KEY --key_type ShortText\n"
"     column_create --table Video --name title --flags COLUMN_SCALAR --type ShortText\n"
"     column_create --table Video --name tags --flags COLUMN_VECTOR --type Tag\n"
"     column_create --table Tag --name index_tags --flags COLUMN_INDEX --type Video --source tags\n"
"     load --table Video\n"
"     [\n"
"     {\"_key\":1,\"title\":\"groonga Demo\",\"tags\":[\"IT\",\"Server\",\"groonga\"]},\n"
"     {\"_key\":2,\"title\":\"Ultra Baseball\",\"tags\":[\"Sports\",\"Baseball\"]},\n"
"     ]\n"
"  $ groonga --file index-dump.sdf -n index-dump.db\n"
"  $ groonga-index-dump --output-directory=path/to/index/ index-dump.db\n"
"  $ cd path/to/index/\n"
"  $ ls Tag.index_tags\n"
"    Baseball.dump  IT.dump       Server.dump  Sports.dump  groonga.dump\n"
"  $ cat path/to/index/Tag.index_tags/groonga.dump\n"
"    index: Tag.index_tags	term: <groonga>	domain: Tag	range: Video	have_section: false	have_weight: false	have_position: false\n"
"     weight	position        term_frequency	record\n"
"     0    2     1   Video[ 1 ].tags\n"
"  </pre>"
msgstr ""

#: ../../doc/text/news.textile:207
msgid ""
"* Added flag options to Groonga::IndexColumn#open_cursor.\n"
"  The flag options are :with_section, :with_weight, :with_position.\n"
"  They are enabled by default if each option is specified in creating\n"
"  a index column.\n"
"* [Snippet] Showed the error message when specified context wasn't\n"
"  associated with a database by Groonga::Database#open or #create.\n"
"* [inspect] Supported to display index column related flags for index\n"
"  column only.\n"
"  \"index column related flags\" are WITH_SECTION, WITH_WEIGHT and\n"
"  WITH_POSITION.\n"
"* [inspect] Added default tokenizer and normalizer infomation.\n"
"* Supported Groonga::QueryLogger. This class is used to log query log.\n"
"  Please see its reference for detail."
msgstr ""
"* Groonga::IndexColumn#open_cursorにフラグに関するオプション（:with_section, :with_weight, :with_position）を追加。\n"
"  インデックスカラムを作るときにこれらオプションを指定していると、指定したオプションをデフォルトで使用可能になります。\n"
"* [Snippet] 指定されたGroonga::Contextがデータベースと結びついていないときにエラーメッセージを表示するようにした。\n"
"* [inspect] インデックスカラム関連のフラグ（WITH_SECTION, WITH_WEIGHT, WITH_POSITION）はインデックスカラムを表示するときにのみ表示するようにした。\n"
"* [inspect] デフォルトのトークナイザーとノーマライザーの情報を表示するようにした。\n"
"* Groonga::QueryLoggerをサポートした。このクラスはクエリログのロガーです。詳しくはリファレンスマニュアルをご覧ください。"

#: ../../doc/text/news.textile:221 ../../doc/text/news.textile:263
#: ../../doc/text/news.textile:282 ../../doc/text/news.textile:417
#: ../../doc/text/news.textile:508 ../../doc/text/news.textile:544
#: ../../doc/text/news.textile:611
msgid "h3. Changes"
msgstr "h3. 変更"

#: ../../doc/text/news.textile:223
msgid ""
"* Move groonga-query-log-extract to groonga-query-log.\n"
"  Please install groogna-query-log gem to use this tool.\n"
"  how to install:\n"
"      gem install groonga-query-log\n"
"* Returned Groonga::Array instead of Array by Table#sort.\n"
"  [GitHub: #8][Suggested by Genki Takiuchi]\n"
"  CAUTION: This is backward incompatible change. You need to use\n"
"  record.value to get the original record.\n"
"  The following code shows how to use old style:\n"
"    result_since_2_1_0 = table.sort([\"sort_key\"])\n"
"    result_before_2_1_0 = result_since_2_1_0.collect do |record|\n"
"      record.value\n"
"    end"
msgstr ""
"* groonga-query-log-extractコマンドをgroonga-query-logというgemに移動しました。\n"
"  groonga-query-log-extractコマンドを使うには次のコマンドを実行してgroonga-query-logをインストールしてください。\n"
"  $ gem install groonga-query-log\n"
"* Groonga::Table#sortの返り値をArrayではなくGroonga::Arrayにした。\n"
"  [GitHub: #8][Genki Takiuchiさんが報告]\n"
"  注意: これは後方互換性のない変更です。元のレコードを使うにはrecordの代わりにrecord.valueを使う必要があります。\n"
"  次のコードで以前までと同じ結果を得ることができます:\n"
"    result_since_2_1_0 = table.sort([\"sort_key\"])\n"
"    result_before_2_1_0 = result_since_2_1_0.collect do |record|\n"
"      record.value\n"
"    end"

#: ../../doc/text/news.textile:239
msgid ""
"* ongaeshi\n"
"* Genki Takiuchi"
msgstr ""
"* ongaeshiさん\n"
"* Genki Takiuchiさん"

#: ../../doc/text/news.textile:242
msgid "h2(#2-0-8). 2.0.8: 2012-12-02"
msgstr ""

#: ../../doc/text/news.textile:246
msgid "* Required groonga 2.0.9."
msgstr "* groonga 2.0.9対応。"

#: ../../doc/text/news.textile:248
msgid "h2(#2-0-7). 2.0.7: 2012-11-29"
msgstr ""

#: ../../doc/text/news.textile:252
msgid ""
"* Added Groonga::Posting#record. This method returns the record for\n"
"  the record ID in table.\n"
"* Added Groonga::Posting#term. This method returns the record for the\n"
"  term ID in table.\n"
"* Supported GRN_OBJ_KEY_VAR_SIZE for Groonga::Type#inspect.\n"
"  GRN_OBJ_KEY_CAR_SIZE specifies its column is variable size.\n"
"* [Type] Added reader methods to Groonga::Type (#size and #flags).\n"
"* [Type] Added predicate methods to Groonga::Type.\n"
"  Added methods are #fixed_size?, #variable_size?, #unsigned_integer?,\n"
"  #integer?, #float? and #geo_point?."
msgstr ""
"* レコードIDに対応するレコードを返すGroonga::Posting#recordを追加。\n"
"* 語彙表のIDに対応するレコードを返すGroonga::Posting#termを追加。\n"
"* カラムをinspectしたときに、そのカラムが可変長のサイズであることを示すGRN_OBJ_KEY_VAR_SIZEを出力するようにした。\n"
"* [Type] Groonga::Typeに読み取り用アクセサの#sizeメソッドと#flagsメソッドを追加。\n"
"* [Type] Groonga::Typeに次のメソッドを追加：#fixed_size?, #variable_size?, #unsigned_integer?, #integer?, #float?, #geo_point?"

#: ../../doc/text/news.textile:265
msgid ""
"* Removed query log related codes.\n"
"  This feature moved to groonga-query-log gem and it is relased soon."
msgstr "* クエリログ関連の機能を削除した。クエリログ関連の機能はgroonga-query-logというgemに移動しました。このgemは近日中にリリースする予定です。"

#: ../../doc/text/news.textile:268
msgid "h2(#2-0-6). 2.0.6: 2012-10-25"
msgstr ""

#: ../../doc/text/news.textile:272
msgid ""
"* [dump] Put index columns at the bottom (after loads).\n"
"  It is for using offline index construction.\n"
"* Added term_extract in Table#select by @table.select {|record|\n"
"  record.key.term_extract(text)}@ syntax.\n"
"* Supported :allow_leading_not as a option of #select.\n"
"  You should use this option carefully. It takes a long time to search\n"
"  all records which doesn't include a word. In addition, when the\n"
"  number of records is large, to search them with this option is\n"
"  slowly."
msgstr ""
"* [dump] インデックスカラム作成のコマンドを最後（loadコマンドの後ろ）に出力するようにした。これは静的インデックス作成にするためのものです。\n"
"* 単語抽出機能をサポート。構文は @table.select {|record| record.key.term_extract(text)}@ 。\n"
"* selectメソッドを使うときに:allow_leading_notオプションを使用できるようにした。このオプションで「ある単語が含まれない全てのレコード」を検索すると検索が遅くなります。またレコードが多い時にも時間がかかるので注意して使ってください。"

#: ../../doc/text/news.textile:284
msgid ""
"* Changed option name for debug build in extconf.rb from --with-debug\n"
"  to --enable-debug-log."
msgstr "* extconf.rbでデバッグ用ビルドに使うオプションを--with-debugから--enable-debug-logに変更。"

#: ../../doc/text/news.textile:289
msgid "* Fixed display collapse in the references."
msgstr "* リファレンスの表示崩れを修正。"

#: ../../doc/text/news.textile:291
msgid "h2(#2-0-5). 2.0.5: 2012-09-28"
msgstr ""

#: ../../doc/text/news.textile:295
msgid ""
"* Supported groonga 2.0.7.\n"
"* Removed the workaround to install rroonga with old groonga.\n"
"* Added more error checks.\n"
"* Added Database#tables. [Suggested by @temitan]\n"
"* Supported Enumerator for #each on Database, Table, TableCursor and\n"
"  IndexCursor.\n"
"* Added WGS84GeoPoint and TokyoGeoPoint.\n"
"* [dumper] supported dumping of WGS84GeoPoint and TokyoGeoPoint.\n"
"* [dumper] worked on non UTF-8 extenal output encoding environment.\n"
"* [dumper] sorted table and column names.\n"
"* [dumper] ignored invalid byte.\n"
"* [grndump] showed the warning for invalid character.\n"
"* [grndump] supported database that is created by old groonga.\n"
"* Added Groonga::Context#ruby_encoding.\n"
"* Added many documents in codes but showed no references."
msgstr ""
"* groonga 2.0.7対応。\n"
"* 古いgroongaと一緒に使うときに必要な処理を削除。\n"
"* 様々なエラーチェックを追加。\n"
"* Database#tablesを追加。[@temitanさんが提案]\n"
"* Database, Table, TableCursor, IndexCursorの#eachでブロックが指定されてないときにはEnumeratorを返すようにした。\n"
"* WGS84GeoPointクラスとTokyoGeoPointクラスを追加。\n"
"* [dumper] WGS84GeoPointとTokyoGeoPointのダンプに対応。\n"
"* [dumper] 外部エンコーディングがUTF-8以外の環境でも動作するようにした。\n"
"* [dumper] ダンプ時にテーブルとカラム名でソートするようにした。\n"
"* [dumper] 不正なバイトがあったときに無視するようにした。\n"
"* [grndump] 不正な文字があったときに警告を出すようにした。\n"
"* [grndump] 古いgroongaで作ったデータベースも正しくダンプできるようにした。\n"
"* Groonga::Context#ruby_encodingを追加。\n"
"* コード内に書かれていてリファレンスに表示されていなかったドキュメントをリファレンスに追加。"

#: ../../doc/text/news.textile:313
msgid "* Added missing backslash escape for groonga command."
msgstr "* groongaコマンドにバックスラッシュがあったときにエスケープするように修正した。"

#: ../../doc/text/news.textile:317
msgid "* @temitan"
msgstr "* @temtanさん"

#: ../../doc/text/news.textile:319
msgid "h2(#2-0-4). 2.0.4: 2012-05-02"
msgstr ""

#: ../../doc/text/news.textile:323
msgid "* Fixed a bug that weight of match target is ignored."
msgstr "* マッチカラムの重みが無視される問題を修正。"

#: ../../doc/text/news.textile:325
msgid "h2(#2-0-3). 2.0.3: 2012-05-02"
msgstr ""

#: ../../doc/text/news.textile:329
msgid ""
"* Supported groonga 2.0.2.\n"
"* Groonga::Table#each supports options that are same as\n"
"  Groonga::Table#open_cursor's one.\n"
"* [grndump] added @--order-by=id@ option. With this option, dumped\n"
"  records are sorted by ID instead of key. You can restore records\n"
"  without ID change if you don't delete any records. [#1341]\n"
"* Supported building on Windows with RubyInstaller for Windows with DevKit.\n"
"  [GitHub#6] [Patch by @ongaeshi]\n"
"* Supported similar search by @table.select {|record|\n"
"  record.column.similar_search(text)}@ syntax."
msgstr ""
"* groonga 2.0.2対応。\n"
"* Groonga::Table#eachでGroonga::Table#open_cursorと同じオプションを受け付けるようにした。\n"
"* [grndump] @--order-by=id@ オプションを追加。このオプションを使うと、キーではなくIDでレコードをソートしてダンプします。もし、レコードを削除していない場合はこのオプションを使うことでレコードIDを変更せずにレコードをリストアできます。 [#1341]\n"
"* RubyInstall for WindowsのDevKitを使ったWindows上でのビルドをサポート。\n"
"  [GitHub#6] [@ongaeshiさんがパッチ提供]\n"
"* 類似文書検索をサポート。構文は @table.select {|record| record.column.similar_search(text)}@ 。"

#: ../../doc/text/news.textile:342
msgid "* Fixed a GC related crach bug."
msgstr "* GC関連ででクラッシュするバグを修正。"

#: ../../doc/text/news.textile:346
msgid "* @ongaeshi"
msgstr "* ongaeshiさん"

#: ../../doc/text/news.textile:348
msgid "h2(#2-0-2). 2.0.2: 2012-03-29"
msgstr ""

#: ../../doc/text/news.textile:352
msgid ""
"* Supported groonga 2.0.1.\n"
"* Added \"logos\":http://groonga.rubyforge.org/#logo ."
msgstr ""
"* groonga 2.0.1対応。\n"
"* \"ロゴ\":http://groonga.rubyforge.org/#logo を追加。"

#: ../../doc/text/news.textile:357
msgid "* Fixed a Groonga::Snipet related crach bug caused by GC."
msgstr "* Groonga::Snippetに関連したGCでクラッシュするバグを修正した。"

#: ../../doc/text/news.textile:359
msgid "h2(#2-0-0). 2.0.0: 2012-03-22"
msgstr ""

#: ../../doc/text/news.textile:363
msgid ""
"* Supported groonga 2.0.0.\n"
"* [gem][windows] Removed mswin packages."
msgstr ""
"* groonga 2.0.0対応。\n"
"* [gem][windows] mswin用のパッケージを削除した。"

#: ../../doc/text/news.textile:368
msgid ""
"* [test] Fixed version test failure. [GitHub#4] [Reported by @takkanm]\n"
"* Fixed a Groonga::Expression related crach bug caused by GC.\n"
"* [doc] Fixed broken HTML output. [groonga-dev,00699]\n"
"  [Reported by Hirano]"
msgstr ""
"* [test] バージョンのテストの失敗を修正した。 [GitHub#4] [@takkanmさんが報告]\n"
"* Groonga::Expressionに関連したGCでクラッシュするバグを修正した。\n"
"* [doc] 壊れたHTML出力を修正した。 [groonga-dev,00699] \n"
"  [平野さんが報告]"

#: ../../doc/text/news.textile:375
msgid ""
"* @takkanm\n"
"* Hirano"
msgstr ""
"* @takkanmさん\n"
"* 平野さん"

#: ../../doc/text/news.textile:378
msgid "h2(#1-3-1). 1.3.1: 2012-01-29"
msgstr ""

#: ../../doc/text/news.textile:382
msgid ""
"* Supported groonga 1.3.0.\n"
"* [schema] Supported Int8, Int16, UInt8 and UInt16.\n"
"* [schema] Supported TokyoGeoPoint and WGS84GeoPoint.\n"
"* [schema][dumper] Supported Boolean and more built-in types.\n"
"  [Reported by @mashiro]\n"
"* [schema] Supported type object as column type. [#1002]\n"
"* Added Groonga::VariableSizeColumn#compressed?. [#1004]\n"
"* Added Groonga::Record#score=.\n"
"* Improve performance for encoded string.\n"
"* Added Groonga::Command::Builder.escape_value."
msgstr ""
"* groonga 1.3.0対応。\n"
"* [schema] Int8、Int16、UInt8、UInt16に対応。\n"
"* [schema] TokyoGeoPoint、WGS84GeoPointに対応。\n"
"* [schema][dumper] Booleanや多くの組み込み型に対応。\n"
"  [@mashiroさんが報告]\n"
"* [schema] カラムの型として型オブジェクトを指定できるようになった。 [#1002]\n"
"* Groonga::VariableSizeColumn#compressed?を追加。 [#1004]\n"
"* Groonga::Record#score=を追加。\n"
"* エンコードされた文字列の扱ったときのパフォーマンスを改良。\n"
"* Groonga::Command::Builder.escape_valueを追加。"

#: ../../doc/text/news.textile:395
msgid "* @mashiro"
msgstr "* @mashiroさん"

#: ../../doc/text/news.textile:397
msgid "h2(#1-3-0). 1.3.0: 2011-11-29"
msgstr ""

#: ../../doc/text/news.textile:401
msgid ""
"* [schema] Remove also needless db.tables/ directory if it is empty.\n"
"* [schema] Remove also needless db.tables/table.columns/ directory if it is empty.\n"
"* Added query log parser.\n"
"* Added groonga-query-log-extract command.\n"
"* Added grntest log analyzer.\n"
"* Added JSON gem dependency.\n"
"* Supported groonga 1.2.8.\n"
"* Dropped groonga 1.2.7 or former support.\n"
"* Added Groonga::Table#defrag.\n"
"* Added Groonga::Table#rename.\n"
"* Added Groonga::Column#rename.\n"
"* Added Groonga::DoubleArrayTrie.\n"
"* [schema] Supported table rename.\n"
"* [schema] Supported column rename.\n"
"* [schema] Supported double array trie."
msgstr ""
"* [schema] db.tables/ディレクトリが空の場合は削除時に一緒に削除するようにした。\n"
"* [schema] db.tables/table.columns/ディレクトリが空の場合は削除時に一緒に削除するようにした。\n"
"* クエリログパーサを追加。\n"
"* groonga-query-log-extractコマンドを追加。\n"
"* grntestのログを解析するスクリプトを追加。\n"
"* JSONへの依存関係を追加。\n"
"* groonga 1.2.8対応。\n"
"* groonga1.2.7以前のサポートを削除。\n"
"* Groonga::Table#defragを追加。\n"
"* Groonga::Table#renameを追加。\n"
"* Groonga::Column#renameを追加。\n"
"* Groonga::DoubleArrayTrieを追加。\n"
"* [schema] テーブルのリネームに対応。\n"
"* [schema] カラムのリネームに対応。\n"
"* [schema] ダブル配列トライに対応。"

#: ../../doc/text/news.textile:419
msgid "* [schema] Don't use named path by default for location aware DB."
msgstr "* [schema] DBを移動してもそのまま使えるようにするために、デフォルトではパスに意味のある名前をつけないようにした。"

#: ../../doc/text/news.textile:423
msgid "* Fixed a crash problem on GC."
msgstr "* GC時にクラッシュする問題を修正。"

#: ../../doc/text/news.textile:425
msgid "h2. 1.2.9: 2011-09-16"
msgstr ""

#: ../../doc/text/news.textile:429
msgid "* deleted unneed object files."
msgstr "* 不要なオブジェクトファイルが入っていたのを削除。"

#: ../../doc/text/news.textile:431
msgid "h2. 1.2.8: 2011-09-16"
msgstr ""

#: ../../doc/text/news.textile:435
msgid ""
"* supported \"!=\" expression for column in block of Groonga::Table#select.\n"
"* accepted Hash like object as options.\n"
"* supported vector in dump in Ruby syntax.\n"
"* supported GRN_CTX_PER_DB environment variables.\n"
"(NOTE: You should pay attention to use this variables.)"
msgstr ""
"* Groonga::Table#selectに与えるブロックの中での\"!=\"メソッドに対応。詳しくはGroonga::Table#selectのリファレンスを参照。\n"
"* ハッシュライクなオプションに対応。\n"
"* Ruby文法においてのベクター形式のダンプに対応。\n"
"* 環境変数GRN_CTX_PER_DBに対応。（注意：この環境変数を使用する際は注意して使ってください）"

#: ../../doc/text/news.textile:441
msgid "h2. 1.2.7: 2011-08-29"
msgstr ""

#: ../../doc/text/news.textile:445
msgid "* Added Groonga::Snippet#close that frees resource."
msgstr "* リソースを解放するGroonga::Snippet#closeを追加。"

#: ../../doc/text/news.textile:449
msgid "* Fixed build error on Ruby 1.8.7."
msgstr "* Ruby 1.8.7でビルドできない問題を修正。"

#: ../../doc/text/news.textile:451
msgid "h2. 1.2.6: 2011-08-29"
msgstr ""

#: ../../doc/text/news.textile:455
msgid ""
"* Supported groonga 1.2.5.\n"
"* Added Groonga::Record#added? that returns true when the record is just added.\n"
"* Added Groonga::VariableSizeColumn#defrag? that defrags the column.\n"
"* Added Groonga::Database#defrag that defrags the all variable size columns.\n"
"* Supported column name specification by symbol."
msgstr ""
"* groonga 1.2.5対応。\n"
"* 追加直後のレコードかどうかを返す Groonga::Record#added? を追加。\n"
"* カラムをデフラグする Groonga::VariableSizeColumn#defrag? を追加。\n"
"* データベース中のすべての可変長カラムをデフラグする Groonga::Database#defrag を追加。\n"
"* シンボルでのカラム名指定に対応。"

#: ../../doc/text/news.textile:463
msgid ""
"* Fixed install *.rb failure by gem install.\n"
"* Fixed some memory leaks.\n"
"* Fixed crash bug on exit."
msgstr ""
"* gem install時に*.rbのインストールに失敗する問題を修正。\n"
"* メモリリークを修正。\n"
"* 終了時にクラッシュする問題を修正。"

#: ../../doc/text/news.textile:467
msgid "h2. 1.2.5: 2011-08-05"
msgstr ""

#: ../../doc/text/news.textile:471
msgid ""
"* Re-supported tar.gz distribution.\n"
"* Added Groonga::Context#close.\n"
"* Added Groonga::Context#closed?.\n"
"* Deprecated Groonga::ObjectClosed. Use Groonga::Closed instead.\n"
"* grndump: Added --exclude-table option that specifies not dumped tables.\n"
"* dump: Removed path equality check."
msgstr ""
"* tar.gzでのパッケージ配布を再サポート。\n"
"* Groonga::Context#closeを追加。\n"
"* Groonga::Context#closed?を追加。\n"
"* Groonga::ObjectClosedを非推奨にした。代わりにGroonga::Closedを使うこと。\n"
"* grndump: ダンプしないテーブルを指定する--exclude-tableオプションを追加。\n"
"* dump: パスが等しいかどうかのチェックを削除。"

#: ../../doc/text/news.textile:480
msgid ""
"* dump: Fixed wrong index table type.\n"
"* Re-supported auto groonga install."
msgstr ""
"* [dump] 間違ったインデックス用テーブルを出力する問題を修正。\n"
"* groongaの自動インストールを再サポート。"

#: ../../doc/text/news.textile:483
msgid "h2. 1.2.4: 2011-06-29"
msgstr ""

#: ../../doc/text/news.textile:487
msgid "* Supported groonga 1.2.3."
msgstr "* groonga 1.2.3対応。"

#: ../../doc/text/news.textile:491
msgid ""
"* Re-supported auto groonga install.\n"
"* Added missing pkg-config gem dependency."
msgstr ""
"* groongaの自動インストールを再サポート。\n"
"* pkg-config gemへの依存関係を追加。"

#: ../../doc/text/news.textile:494
msgid "h2. 1.2.3: 2011-06-27"
msgstr ""

#: ../../doc/text/news.textile:498
msgid ""
"* remove object files in gem packages.\n"
"* fix charactor corruption in reference."
msgstr ""
"* gemパッケージに含まれてしまったオブジェクトファイル(*.o)を削除。\n"
"* 一部のリファレンスマニュアルの文字化けを修正。"

#: ../../doc/text/news.textile:501
msgid "h2. 1.2.2: 2011-06-27"
msgstr ""

#: ../../doc/text/news.textile:505
msgid ""
"* created \"Developers\" page in English.\n"
"* added description for tasks of \"html:publish\" and \"publish\"."
msgstr ""
"* 英語版の「開発者向け情報」ページを作成。\n"
"* \"html:publish\"タスクと\"publish\"に関しての説明を追加。"

#: ../../doc/text/news.textile:510
msgid ""
"* Groonga::Record#attributes return same attributes object for duplicate records.\n"
"* added document for Groonga::Record#attributes.\n"
"* changed tool name in document page for creating document.\n"
"* moved NEWS*.rdoc and tutorial.texttile to doc/text/."
msgstr ""
"* Groonga::Record#attributesが重複したレコードが現れた際に同じattributesオブジェクトを返すようにした。\n"
"* Groonga::Record#attributesにドキュメントを追加。\n"
"* 「開発者向け情報」ページ内にあるドキュメント作成ツールを変更。\n"
"* NEWS*.rdocとtutorial.texttileをディレクトリdoc/text/に移動。"

#: ../../doc/text/news.textile:517
msgid ""
"* fixed the tutorial path in index page.\n"
"* fixed the path of tutorial in index page in English.\n"
"* follow the groonga downlowd URL change. [mallowlabs]"
msgstr ""
"* インデックスページにある「チュートリアル」ページへのリンクを修正。\n"
"* インデックスページにある英語版「チュートリアル」ページへのリンクを修正。\n"
"* 新しいgroongaのダウンロードURLに対応。 [mallowlabs]"

#: ../../doc/text/news.textile:523
msgid "* mallowlabs"
msgstr "* mallowlabsさん"

#: ../../doc/text/news.textile:525
msgid "h2. 1.2.1: 2011-06-07"
msgstr ""

#: ../../doc/text/news.textile:529
msgid ""
"* added document of Groonga::Table#pagination.\n"
"* added grndump in package.\n"
"* corresponded recursive reference of Records by Groonga::Record#attributes.\n"
"  (experimental) [mooz]\n"
"* Groonga::Record#attributes supported data including _score.\n"
"* corresponded Windows for 64-bit.\n"
"  (but there's not 64-bit ruby, so rroonga for 64-bit windows cannot run.)\n"
"* added Groonga::Posting.\n"
"* added :delimit, :token_delimiter for alias of TokenDelimit.\n"
"* Groonga::DatabaseDumper#dump corresponded lexicon table.\n"
"* Groonga::DatabaseDumper#dump corresponded data including plugin.\n"
"* added Groonga::IndexColumn#open_cursor. [yoshihara]\n"
"* added Groonga::IndexCursor. [yoshihara]\n"
"* added Groonga::Object#builtin?. [yoshihara]"
msgstr ""
"* Groonga::Table#paginationのドキュメントを追加。\n"
"* grndumpをパッケージに追加。\n"
"* Groonga::Record#attributesによるレコード内での再帰参照に対応した。（補足：ただし実験的実装）[mooz]\n"
"* Groonga::Record#attributesにて_scoreも含めたデータを返すようにした。\n"
"* Windowsの64bitに対応。（ただし、rubyの64bit版が存在しないため、動作環境がない）\n"
"* Groonga::Postingを追加。\n"
"* TokenDelimitのエイリアスに:delimit, :token_delimiterを追加。\n"
"* Groonga::DatabaseDumper#dumpにてlexiconテーブルのダンプに対応。\n"
"* Groonga::DatabaseDumper#dumpにてプラグインを含んだダンプに対応。\n"
"* Groonga::IndexColumn#open_cursorを追加。[yoshihara]\n"
"* Groonga::IndexCursorを追加。[yoshihara]\n"
"* Groonga::Object#builtin?を追加。[yoshihara]"

#: ../../doc/text/news.textile:546
msgid ""
"* check existence of column before removing it.\n"
"* removed grn expression document."
msgstr ""
"* カラムが削除される前に、そのカラムがあるかチェックするようにした。\n"
"* ドキュメントからgrn式のページを削除。"

#: ../../doc/text/news.textile:551
msgid ""
"* mooz\n"
"* yoshihara"
msgstr ""
"* moozさん\n"
"* yoshiharaさん"

#: ../../doc/text/news.textile:554
msgid "h2. 1.2.0: 2011-04-01"
msgstr ""

#: ../../doc/text/news.textile:558
msgid ""
"* Supported groonga 1.2.0.\n"
"* Added Groonga::Accessor#local_name.\n"
"* Added Groonga::IndexColumn#with_section?.\n"
"* Added Groonga::IndexColumn#with_weight?.\n"
"* Added Groonga::IndexColumn#with_position?.\n"
"* Groonga::Schema.dump supported groonga command format dump.\n"
"* Added grndump command.\n"
"* Groonga::Database#each supports order customize.\n"
"* Added Groonga::Context#match_escalation_threshold.\n"
"* Added Groonga::Context#match_escalation_threshold=.\n"
"* Improved error message.\n"
"* Supported Rubyish name like :short_text instead of the\n"
"  official type name like \"ShortText\" in Groonga::Schema."
msgstr ""
"* groonga 1.2.0対応。\n"
"* Groonga::Accessor#local_nameを追加。\n"
"* Groonga::IndexColumn#with_section?を追加。\n"
"* Groonga::IndexColumn#with_weight?を追加。\n"
"* Groonga::IndexColumn#with_position?を追加。\n"
"* Groonga::Schema.dumpがgroongaコマンド形式でのダンプに対応。\n"
"* grndumpを追加。\n"
"* Groonga::Database#eachで繰り返す順序を指定可能にした。\n"
"* Groonga::Context#match_escalation_thresholdを追加。\n"
"* Groonga::Context#match_escalation_threshold=を追加。\n"
"* エラーメッセージの改良。\n"
"* Groonga::Schemaの型指定で\"ShortText\"など正式型名だけではなく、:short_textなどよりRubyらしい名前を使えるようにした。"

#: ../../doc/text/news.textile:572
msgid "h2. 1.1.0: 2011-02-09"
msgstr ""

#: ../../doc/text/news.textile:576
msgid ""
"* Supported groonga 1.1.0.\n"
"* Added Groonga::Plugin.register."
msgstr ""
"* groonga 1.1.0対応。\n"
"* Groonga::Plugin.registerを追加。"

#: ../../doc/text/news.textile:579
msgid "h2. 1.0.9: 2011-01-29"
msgstr ""

#: ../../doc/text/news.textile:583
msgid ""
"* Supported gem creation on Windows. [Patch by ongaeshi]\n"
"* Supported generated directory that is created by Groonga::Schema removal\n"
"  when table or column is removed.\n"
"* Added Groonga::Context#create_database.\n"
"* Added Groonga::Context#open_database.\n"
"* Added Groonga::Column#indexes.\n"
"* Supported a notation for specifying index column as match target in\n"
"  Groonga::Table#select:\n"
"    table.select do |record|\n"
"      record.match(\"query\") do |match_record|\n"
"        (match_record.index(\"Terms.title\") * 1000) |\n"
"          (match_record.index(\"Terms.description\") * 100)\n"
"          match_record.content\n"
"      end\n"
"    end\n"
"* Supported prefix search in Groonga::Table#select:\n"
"    table.select do |record|\n"
"      record.name.prefix_search(\"groo\")\n"
"    end\n"
"* Supported suffix search in Groonga::Table#select:\n"
"    table.select do |record|\n"
"      record.name.suffix_search(\"nga\")\n"
"    end\n"
"* Supported :default_tokenizer schema dump.\n"
"* Supported :key_normalize schema dump.\n"
"* Supported pseudo columns by Groonga::Table#have_column?.\n"
"* Supported pseudo columns by Groonga::Record#have_column?."
msgstr ""
"* Windows上でのgem作成に対応。 [ongaeshiさんがパッチ提供]\n"
"* Groonga::Schemaでテーブル・カラムを削除した時に作成したディレクトリを削除するようにした。\n"
"* Groonga::Context#create_databaseを追加。\n"
"* Groonga::Context#open_databaseを追加。\n"
"* Groonga::Column#indexesを追加。\n"
"* Groonga::Table#selectでマッチさせるターゲットとしてインデックスカラムを指定するための記法を追加。\n"
"   table.select do |record|\n"
"     record.match(“query”) do |match_record|\n"
"       (match_record.index(“Terms.title”) * 1000) | (match_record.index(“Terms.description”) * 100)\n"
"        match_record.content\n"
"     end\n"
"   end\n"
"* Groonga::Table#selectで前方一致検索に対応。\n"
"   table.select do |record|\n"
"     record.name.prefix_search(“groo”)\n"
"   end\n"
"* Groonga::Table#selectで後方一致検索に対応。\n"
"   table.select do |record|\n"
"     record.name.suffix_search(“nga”)\n"
"   end\n"
"* :default_tokenizerのスキーマダンプに対応。\n"
"* :key_normalizeのスキーマダンプに対応。\n"
"* Groonga::Table#have_column?が擬似カラムに対応。\n"
"* Groonga::Record#have_column?が擬似カラムに対応。"

#: ../../doc/text/news.textile:613
msgid ""
"* Renamed Groonga::Operatoion to Groonga::Operator.\n"
"  (Groonga::Operation is deprecated but still usable.)"
msgstr "* Groonga::OperatoionをGroonga::Operatorに変更。（しばらくはGroonga::Operationも使えるが、非推奨。）"

#: ../../doc/text/news.textile:618
msgid ""
"* Fixed a crash bug when not default Groonga::Context is used in\n"
"  Groonga::Table#select.\n"
"* Fixed a crash bug when an exception is occurred."
msgstr ""
"* 複数のGroonga::Contextを利用した場合にGroonga::Table#selectでクラッシュする問題を修正。\n"
"* 例外発生時にクラッシュする問題を修正。"

#: ../../doc/text/news.textile:624
msgid "* ongaeshi"
msgstr "* ongaeshiさん"

#: ../../doc/text/news.textile:626
msgid "h2. 1.0.8: 2010-12-25"
msgstr ""

#: ../../doc/text/news.textile:630
msgid "* Improved Groonga::Schema's n-gram tokenizer detect process."
msgstr "* Groonga::Schemaのn-gramトークナイザー検出処理を改良。"

#: ../../doc/text/news.textile:634
msgid "* Fixed GC problem caused by match_target in select."
msgstr "* selectでmatch_targetを利用した場合に生きているオブジェクトもGCされる問題を修正。<"

#: ../../doc/text/news.textile:636
msgid "h2. 1.0.7: 2010-12-19"
msgstr ""

#: ../../doc/text/news.textile:640
msgid ""
"* Supported pkg-config installed by RubyGems on Ruby 1.8. [Reported by @kamipo]\n"
"* Fixed a memory leak in Groonga::Table#columns."
msgstr ""
"* Ruby 1.8でRubyGemsでインストールされたpkg-configを使えるようにした。 [@kamipoさんが報告]\n"
"* Groonga::Table#columnsのメモリリークを修正。"

#: ../../doc/text/news.textile:645
msgid "* @kamipo"
msgstr ""

#: ../../doc/text/news.textile:647
msgid "h2. 1.0.5: 2010-11-29"
msgstr "* @kamipoさん"

#: ../../doc/text/news.textile:651
msgid ""
"* Added snail_case type name aliases for built-in groonga types\n"
"  to Groonga::Schema."
msgstr "* Groonga::Schemaでgroongaの組み込み型をshort_textなどのように「小文字 + アンダースコア」でも指定できるようにした。"

#: ../../doc/text/news.textile:656
msgid "* Fixed a crash bug on GC. [Ryo Onodera]"
msgstr "* GC時にクラッシュするバグを修正。 [Ryo Onodera]"

#: ../../doc/text/news.textile:658
msgid "h2. 1.0.4: 2010-11-29"
msgstr ""

#: ../../doc/text/news.textile:662
msgid ""
"* Supported groonga 1.0.4.\n"
"  * Added Groonga::UnsupportedCommandVersion.\n"
"* Added Groonga::Record#support_sub_records?.\n"
"* Added Groonga::Record#eql?とGroonga::Record#hash.\n"
"  (treat two the same table and the same record ID object as the same Hash key.)\n"
"* Supported pkg-config gem.\n"
"* Supported generic #record_id object handle for custom record object\n"
"  in Groonga::Table#select.\n"
"* Added Groonga::Record#record_id.\n"
"* Added Groonga::Table#support_key?.\n"
"* Added Groonga::Record#support_key?.\n"
"* Added Groonga::Record#support_key?.\n"
"* Added Groonga::Column#reference_key?.\n"
"* Added Groonga::Column#index_column?.\n"
"* Added Groonga::Schema#dump.\n"
"* Supported multi columns index creation in Groonga::Schema.\n"
"* Supported meaningful path in Groonga::Schema.\n"
"* Made reference table omissible when index column definition\n"
"  in Groonga::Schema.\n"
"* Added Groonga::Schema.remove_column.\n"
"* Added convenience timestamps methods to define \"created_at\" and\n"
"  \"updated_at\" columns in Groonga::Schema.\n"
"* Added Groonga::Context#support_zlib?.\n"
"* Added Groonga::Context#support_lzo?.\n"
"* Added Groonga::Database#touch.\n"
"* Added Groonga::Table#exist?.\n"
"* Added Groonga::Record#valid?.\n"
"* Added Groonga::Column#vector?.\n"
"* Added Groonga::Column#scalar?.\n"
"* Added Groonga::Record#vector_column?.\n"
"* Added Groonga::Record#scalar_column?.\n"
"* Accepted any object that has record_raw_id method for record ID required\n"
"  location. Groonga::Record isn't required.\n"
"* Added Groonga::Record#record_raw_id.\n"
"* Accepted any object that as to_ary method for reference vector column value."
msgstr ""
"* groonga 1.0.4対応。\n"
"* Groonga::UnsupportedCommandVersionを追加。\n"
"* Groonga::Record#support_sub_records?を追加。\n"
"* Groonga::Record#eql?とGroonga::Record#hashを追加。（同じテーブルの同じレコードIDのオブジェクトを同一のHashキーとして扱う。）\n"
"* pkg-config gemを利用するようにした。\n"
"* Groonga::Table#select内でrecord_idメソッドを持っているメソッドはレコードとして扱うようにした。\n"
"* Groonga::Record#record_idを追加。\n"
"* Groonga::Table#support_key?を追加。\n"
"* Groonga::Record#support_key?を追加。\n"
"* Groonga::Record#support_key?を追加。\n"
"* Groonga::Column#reference_key?を追加。\n"
"* Groonga::Column#index_column?を追加。\n"
"* Groonga::Schema#dumpを追加。\n"
"* Groonga::Schemaが複数のカラムのインデックス作成に対応。\n"
"* Groonga::Schemaで定義したオブジェクトに対応するファイル名にわかりやすいファイル名を利用するようにした。\n"
"* Groonga::Schemaで参照カラムを定義時に参照先のテーブル名を省略可能になった。\n"
"* Groonga::Schema.remove_columnを追加。\n"
"* Groonga::Schemaでcreated_atカラムとupdated_atカラムを作るためのtimestamps便利メソッドを追加。\n"
"* Groonga::Context#support_zlib?を追加。\n"
"* Groonga::Context#support_lzo?を追加。\n"
"* Groonga::Database#touchを追加。\n"
"* Groonga::Table#exist?を追加。\n"
"* Groonga::Record#valid?を追加。\n"
"* Groonga::Column#vector?を追加。\n"
"* Groonga::Column#scalar?を追加。\n"
"* Groonga::Record#vector_column?を追加。\n"
"* Groonga::Record#scalar_column?を追加。\n"
"* レコードIDが必要なところにrecord_raw_idを持つオブジェクトならGroonga::Record以外も渡せるようにした。\n"
"* Groonga::Record#record_raw_idを追加。\n"
"* ベクタの参照カラムの値にArray以外でもto_aryを持つオブジェクトを設定できるようにした。"

#: ../../doc/text/news.textile:698
msgid "h2. Changes"
msgstr "h2. 変更"

#: ../../doc/text/news.textile:700
msgid ""
"* Used :key as the default value of :order_by of\n"
"  Groonga::PatriciaTrie#open_cursor.\n"
"* Removed a deprecated Groonga::TableKeySupport#find.\n"
"* Used ShortText as the default key type of\n"
"  Groonga::Hash#create and Groonga::PatriciaTrie#create.\n"
"* Renamed Groonga::Schema#load to Groonga::Schema#restore.\n"
"* Supported pkg-confg 1.0.7.\n"
"* Added Groonga::Column#index? and deprecated Groonga::Column#index_column?.\n"
"* Added Groonga::Column#reference? and deprecated\n"
"  Groonga::Column#reference_column?."
msgstr ""
"* Groonga::PatriciaTrie#open_cursorでは:order_byのデフォルト値として:keyを使うようにした。\n"
"* 非推奨扱いのGroonga::TableKeySupport#findを削除。\n"
"* Groonga::Hash#createとGroonga::PatriciaTrie#createでキーの型を省略した場合はShortTextを使用するようにした。\n"
"* Groonga::Schema#loadをGroonga::Schema#restoreに改名。\n"
"* pkg-config 1.0.7対応。\n"
"* Groonga::Column#index?を追加。Groonga::Column#index_column?は非推奨。\n"
"* Groonga::Column#reference?を追加。Groonga::Column#reference_column?は非推奨。"

#: ../../doc/text/news.textile:713
msgid ""
"* Fixed index for key isn't be able to define.\n"
"* Fixed a crash problem on GC."
msgstr ""
"* keyにインデックスを張れない問題を修正。\n"
"* GC時にクラッシュする問題を修正。"

#: ../../doc/text/news.textile:716
msgid "h2. 1.0.1: 2010-09-12"
msgstr ""

#: ../../doc/text/news.textile:720
msgid "* Fixed wrong flag used on creating a table. [Reported by ono matope]"
msgstr "* テーブル作成時に誤ったフラグを指定していた問題を修正。 [小野マトペさんが報告]"

#: ../../doc/text/news.textile:724
msgid "* ono matope"
msgstr "* 小野マトペさん"

#: ../../doc/text/news.textile:726
msgid "h2. 1.0.0: 2010-08-29"
msgstr ""

#: ../../doc/text/news.textile:728
msgid ""
"* Supported groonga 1.0.0.\n"
"  * Added Groonga::CASError.\n"
"  * Added :order_by option to Groonga::Table#open_cursor.\n"
"  * Added Groonga::PatriciaTrie#open_prefix_cursor that creates a cursor\n"
"    to retrieve each records by prefix search.\n"
"  * Added Groonga::PatriciaTrie#open_rk_cursor that creats a cursor to\n"
"    retrieve katakana keys from roman letters and/or hiragana.\n"
"  * Added Groonga::PatriciaTrie#open_near_cursor that creates a cursor to\n"
"    retrieve records order by distance from key.\n"
"* Supported _key as index source."
msgstr ""
"* groonga 1.0.0対応。\n"
"* Groonga::CASErrorを追加。\n"
"* Groonga::Table#open_cursorに:order_byオプションを追加。\n"
"* 前方一致検索がマッチしたレコードを順に取り出すカーソルを作るGroonga::PatriciaTrie#open_prefix_cursorを追加。\n"
"* ローマ字・ひらがなでカタカナのキーを検索するカーソルを作るGroonga::PatriciaTrie#open_rk_cursorを追加。\n"
"* 値の近い順にレコードを取り出すカーソルを作るGroonga::PatriciaTrie#open_near_cursorを追加。\n"
"* インデックスのソースに_keyを指定できるようになった。"

#: ../../doc/text/news.textile:739
msgid "h2. 0.9.5: 2010-07-20"
msgstr ""

#: ../../doc/text/news.textile:741
msgid ""
"* Supported groonga 0.7.4.\n"
"* Imporoved Groonga::Table#select:\n"
"  * Supported weight match:"
msgstr ""
"* groonga 0.7.4対応。\n"
"* Groonga::Table#selectを改良:\n"
"* 重み付きマッチに対応:"

#: ../../doc/text/news.textile:745
msgid ""
"    Here is an example to match source column or title column and\n"
"    title column has high score:\n"
"      table.select do |record|\n"
"        (record.title * 10 | record.source) =~ \"query\"\n"
"      end\n"
"  * Supported and representation for and conditions:"
msgstr ""
"    Here is an example to match source column or title column and\n"
"    title column has high score:\n"
"      table.select do |record|\n"
"        (record.title * 10 | record.source) =~ \"query\"\n"
"      end\n"
"* 配列で複数条件のand表現に対応:"

#: ../../doc/text/news.textile:752
msgid ""
"    Here are examples that represents the same condition:\n"
"      table.select do |record|\n"
"        conditions = []\n"
"        conditions << record.title =~ \"query\"\n"
"        conditions << record.updated_at > Time.parse(\"2010-07-29T21:14:29+09:00\")\n"
"        conditions\n"
"      end"
msgstr ""
"    Here are examples that represents the same condition:\n"
"      table.select do |record|\n"
"        conditions = []\n"
"        conditions << record.title =~ \"query\"\n"
"        conditions << record.updated_at > Time.parse(\"2010-07-29T21:14:29+09:00\")\n"
"        conditions\n"
"      end"

#: ../../doc/text/news.textile:760
msgid ""
"      table.select do |record|\n"
"        (record.title =~ \"query\") &\n"
"          (record.updated_at > Time.parse(\"2010-07-29T21:14:29+09:00\"))\n"
"      end\n"
"* Provided groonga runtime version: Groonga::VERSION\n"
"* Added Groonga::Table#support_sub_records?\n"
"* Supported pagination: Groonga::Table#paginate, Groonga::Pagination"
msgstr ""
"      table.select do |record|\n"
"        (record.title =~ \"query\") &\n"
"          (record.updated_at > Time.parse(\"2010-07-29T21:14:29+09:00\"))\n"
"      end\n"
"* 利用しているgroongaのバージョン取得対応: Groonga::VERSION\n"
"* Groonga::Table#support_sub_records?追加\n"
"* ページネーション対応: Groonga::Table#paginate, Groonga::Pagination"

#: ../../doc/text/news.textile:768
msgid "h2. 0.9.4: 2010-04-22"
msgstr ""

#: ../../doc/text/news.textile:770 ../../doc/text/news.textile:774
msgid "* Fixed release miss."
msgstr "* リリースミス修正。"

#: ../../doc/text/news.textile:772
msgid "h2. 0.9.3: 2010-04-22"
msgstr ""

#: ../../doc/text/news.textile:776
msgid "h2. 0.9.2: 2010-04-22"
msgstr ""

#: ../../doc/text/news.textile:778
msgid ""
"* Supported groonga 0.1.9.\n"
"* Many."
msgstr ""
"* groonga 0.1.9対応。\n"
"* たくさん。"

#: ../../doc/text/news.textile:781
msgid "h2. 0.9.1: 2010-02-09"
msgstr ""

#: ../../doc/text/news.textile:783
msgid "* Supported groonga 0.1.6"
msgstr ""

#: ../../doc/text/news.textile:785
msgid "h2. 0.9.0: 2010-02-09"
msgstr "* groonga 0.1.6対応"

#: ../../doc/text/news.textile:787
msgid ""
"* Supported groonga 0.1.5\n"
"* Added API\n"
"  * Groonga::Object#context\n"
"  * Groonga::Record#n_sub_records\n"
"  * Groonga::Context#send\n"
"  * Groonga::Context#receive\n"
"  * Groonga::PatriciaTrie#prefix_search [Tasuku SUENAGA]\n"
"  * Groonga::Object#path [Ryo Onodera]\n"
"  * Groonga::Object#lock [Tasuku SUENAGA]\n"
"  * Groonga::Object#unlock [Tasuku SUENAGA]\n"
"  * Groonga::Object#locked? [Tasuku SUENAGA]\n"
"  * Groonga::Object#temporary?\n"
"  * Groonga::Object#persistent?\n"
"  * Groonga::ObjectClosed\n"
"  * Groonga::Context.[]\n"
"  * Groonga::Table#column_value\n"
"  * Groonga::Table#set_column_value\n"
"* Changed API\n"
"  * Groonga::Table#select, Groonga::Column#select\n"
"    * They also accept Groonga::Expression\n"
"    * Added :syntax option that specifies grn expression syntax\n"
"  * Groonga::Table#open_cursor\n"
"    * Added :offset option that specifies offset.\n"
"    * Added :limit option that specifies max number of records.\n"
"  * Changed Groonga::Expression.parse options:\n"
"    * (nil (default) -> :column) -> (nil (default) -> :query)\n"
"    * :column -> removed\n"
"    * :table -> :query\n"
"    * :table_query -> :query\n"
"    * :expression -> :script\n"
"    * :language -> :script\n"
"  * Groonga::Table#define_column, Groonga::Table#define_index_column\n"
"    * Defined column becomes persistent table by default\n"
"  * Groonga::Table#[] -> Groonga::Table#value\n"
"  * Groonga::Table#[]= -> Groonga::Table#set_value\n"
"  * Groonga::Table#find -> Groonga::Table#[]\n"
"  * Groonga::Table#find -> obsolete\n"
"  * Groonga::Table#[]= -> removed\n"
"  * Groonga::TableKeySupport#[]= is alias of Groonga::TableKeySupport#add\n"
"  * Changed exception class to Groonga::NoSuchColumn from\n"
"    Groonga::InvalidArgument when Groonga::Record accesses nonexistent\n"
"    a column.\n"
"* Bug fixes\n"
"  * Fixed a bug that context isn't passed to schema [dara]\n"
"  * Fixed a bug that Groonga::PatriciaTrie#tag_keys doesn't return\n"
"    that last text. [Ryo Onodera]\n"
"* Added --with-debug option to extconf.rb for debug build.\n"
"* Fixed a bug that Ruby 1.9.1 may fail extconf.rb."
msgstr ""
"* groonga 0.1.5対応\n"
"* APIを追加\n"
"* Groonga::Object#context\n"
"* Groonga::Record#n_sub_records\n"
"* Groonga::Context#send\n"
"* Groonga::Context#receive\n"
"* Groonga::PatriciaTrie#prefix_search [Tasuku SUENAGA]\n"
"* Groonga::Object#path [Ryo Onodera]\n"
"* Groonga::Object#lock [Tasuku SUENAGA]\n"
"* Groonga::Object#unlock [Tasuku SUENAGA]\n"
"* Groonga::Object#locked? [Tasuku SUENAGA]\n"
"* Groonga::Object#temporary?\n"
"* Groonga::Object#persistent?\n"
"* Groonga::ObjectClosed\n"
"* Groonga::Context.[]\n"
"* Groonga::Table#column_value\n"
"* Groonga::Table#set_column_value\n"
"* APIを変更。\n"
"* Groonga::Table#select, Groonga::Column#select\n"
"* Groonga::Expressionも受け付けるようになった\n"
"* grn式のシンタックスを指定する:syntaxオプションの追加\n"
"* Groonga::Table#open_cursor\n"
"* 開始位置を指定する:offsetオプションの追加\n"
"* 最大レコード数を指定する:limitオプションの追加\n"
"* Groonga::Expression.parseオプションの変更:\n"
"* (nil (default) → :column) → (nil (default) → :query)\n"
"* :column → 削除\n"
"* :table → :query\n"
"* :table_query → :query\n"
"* :expression → :script\n"
"* :language → :script\n"
"* Groonga::Table#define_column, Groonga::Table#define_index_column\n"
"* 永続テーブルをデフォルトにした\n"
"* Groonga::Table#[] → Groonga::Table#value\n"
"* Groonga::Table#[]= → Groonga::Table#set_value\n"
"* Groonga::Table#find → Groonga::Table#[]\n"
"* Groonga::Table#find → obsolete\n"
"* Groonga::Table#[]= → 削除\n"
"* Groonga::TableKeySupport#[]=はGroonga::TableKeySupport#addの別名\n"
"* Groonga::Recordで存在しないカラムにアクセスしたときの例外をGroonga::InvalidArgumentからGroonga::NoSuchColumnに変更\n"
"* Bug fixes\n"
"* スキーマにコンテキストが伝搬されない問題の修正 [dara]\n"
"* Groonga::PatriciaTrie#tag_keysが最後のテキストを返さない問題の修正 [Ryo Onodera]\n"
"* extconf.rbにデバッグモードでビルドする--with-debugオプションを追加\n"
"* Ruby 1.9.1でextconf.rbが失敗する問題の修正"

#: ../../doc/text/news.textile:838
msgid ""
"* dara\n"
"* Ryo Onodera\n"
"* Tasuku SUENAGA"
msgstr ""
"* daraさん\n"
"* Ryo Onoderaさん\n"
"* Tasuku SUENAGAさん"

#: ../../doc/text/news.textile:842
msgid "h2. 0.0.7: 2009-10-02"
msgstr ""

#: ../../doc/text/news.textile:844
msgid ""
"* Supported groonga 0.1.4\n"
"* Added API\n"
"  * Groonga::PatriciaTrie#scan\n"
"  * Groonga::PatriciaTrie#tag_keys\n"
"  * Groonga::Expression#snippet\n"
"  * Groonga::Object#append\n"
"  * Groonga::Object#prepend"
msgstr ""
"* groonga 0.1.4対応\n"
"* APIを追加\n"
"  * Groonga::PatriciaTrie#scan\n"
"  * Groonga::PatriciaTrie#tag_keys\n"
"  * Groonga::Expression#snippet\n"
"  * Groonga::Object#append\n"
"  * Groonga::Object#prepend"

#: ../../doc/text/news.textile:852
msgid "h2. 0.0.6: 2009-07-31"
msgstr ""

#: ../../doc/text/news.textile:854
msgid ""
"* Supported groonga 0.1.1.\n"
"* Fixed documents [id:mat_aki]\n"
"* Supported groonga expression for searching.\n"
"* Added API\n"
"  * Groonga::Table#union!\n"
"  * Groonga::Table#intersect!\n"
"  * Groonga::Table#differene!\n"
"  * Groonga::Table#merge!\n"
"* Provided tar.gz [id:m_seki]\n"
"* Fixed memory leaks"
msgstr ""
"* groonga 0.1.1対応\n"
"* ドキュメントの修正 [id:mat_aki]\n"
"* Groonga::Table#selectでのgrn式対応\n"
"* APIを追加\n"
"  * Groonga::Table#union!\n"
"  * Groonga::Table#intersect!\n"
"  * Groonga::Table#differene!\n"
"  * Groonga::Table#merge!\n"
"  * tar.gzも提供 [id:m_seki]\n"
"* メモリリークの修正"

#: ../../doc/text/news.textile:865
msgid "h2. 0.0.3: 2009-07-18"
msgstr ""

#: ../../doc/text/news.textile:867
msgid ""
"* Added Groonga::TableKeySupport#has_key? [#26145] [Tasuku SUENAGA]\n"
"* Groonga::Record#[] raises an exception for nonexistent\n"
"  column name. [#26146] [Tasuku SUENAGA]\n"
"* Supported 32bit environment [niku]\n"
"* Added a test for N-gram index search [dara]\n"
"* Added APIs\n"
"  * Groonga::Record#incemrent!\n"
"  * Groonga::Record#decemrent!\n"
"  * Groonga::Record#lock\n"
"  * Groonga::Table#lock\n"
"  * Groonga::Schema: A DSL for schema definition\n"
"  * Groonga::Expression"
msgstr ""
"* Groonga::TableKeySupport#has_key?の追加 [#26145] [Tasuku SUENAGA]\n"
"* カラム名が存在しない場合はGroonga::Record#[]が例外をあげるように変更。 [#26146] [Tasuku SUENAGA]\n"
"* 32ビット環境をサポート [niku]\n"
"* N-gramインデックスサーチのテストを追加 [dara]\n"
"* APIを追加\n"
"  * Groonga::Record#incemrent!\n"
"  * Groonga::Record#decemrent!\n"
"  * Groonga::Record#lock\n"
"  * Groonga::Table#lock\n"
"  * Groonga::Schema: スキーマ定義用DSL\n"
"  * Groonga::Expression"

#: ../../doc/text/news.textile:880
msgid "h2. 0.0.2: 2009-06-04"
msgstr ""

#: ../../doc/text/news.textile:882
msgid ""
"* Supported groonga 0.0.8 [mori]\n"
"* Improved preformance: cache key, value, domain and range\n"
"* Improved API\n"
"* Added documents\n"
"* Supported Ruby 1.9\n"
"* Bug fixes:\n"
"  * Fixed install process [Tasuku SUENAGA]\n"
"  * Fixed memory leaks"
msgstr ""
"* groonga 0.0.8対応 [mori]\n"
"* 性能向上: キー、値、ドメイン、レンジをキャッシュ\n"
"* APIを改良\n"
"* ドキュメントを追加\n"
"* Ruby 1.9対応\n"
"* Bug fixes:\n"
"* Fixed install process [Tasuku SUENAGA]\n"
"* メモリリークの修正"

#: ../../doc/text/news.textile:891
msgid "h2. 0.0.1: 2009-04-30"
msgstr ""

#: ../../doc/text/news.textile:893
msgid "* Initial release!"
msgstr "* 最初のリリース！"

#: ../../doc/text/tutorial.textile:1
msgid "h1. Tutorial"
msgstr "h1. チュートリアル"

#: ../../doc/text/tutorial.textile:3
msgid "This page introduce how to use rroonga via a simple application making."
msgstr "このページでは簡単なアプリケーションの作成を通してrroongaの操作方法を紹介します。"

#: ../../doc/text/tutorial.textile:7
msgid "You can install rroonga in your compter with RubyGems."
msgstr "rroongaはRubyGemsでインストールできます。"

#: ../../doc/text/tutorial.textile:14
msgid "h2. Create Database"
msgstr "h2. データベースの作成"

#: ../../doc/text/tutorial.textile:16
msgid ""
"Let's create database for simple bookmark application.\n"
"Please execute irb with loading rroonga with this command:"
msgstr "簡単なブックマークアプリケーション用のデータベースを作ってみます。以下のようにgroongaライブラリを読み込んでirbを起動します。"

#: ../../doc/text/tutorial.textile:19
msgid ""
"<pre>\n"
"!!!irb\n"
"% irb --simple-prompt -rubygems -rgroonga\n"
">>\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:25
msgid "Now you use UTF-8 as the encoding of database."
msgstr "まず、エンコーディングを設定します。ここではUTF-8を利用します。<"

#: ../../doc/text/tutorial.textile:27
msgid ""
"<pre>\n"
"!!!irb\n"
">> $KCODE = \"UTF-8\"\n"
"=> \"UTF-8\"\n"
">> Groonga::Context.default_options = {:encoding => :utf8}\n"
"=> {:encoding=>:utf8}\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:35
msgid "Then, try to create database in a file."
msgstr "それでは、ファイルを指定してデータベースを作成します。"

#: ../../doc/text/tutorial.textile:37
msgid ""
"<pre>\n"
"!!!irb\n"
">> Groonga::Database.create(:path => \"/tmp/bookmark.db\")\n"
"=> #<Groonga::Database ...>\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:43
msgid ""
"From now, the created database is used implicitly.\n"
"You don't have to be aware of it after you created a database first."
msgstr "ここで作成したデータベースは、これ以降、暗黙のうちに利用されます。最初にデータベースを作成したら特に意識する必要はありません。"

#: ../../doc/text/tutorial.textile:46
msgid "h2. Define table"
msgstr "h2. テーブルの定義"

#: ../../doc/text/tutorial.textile:48
msgid "Groonga supports 4 types of tables."
msgstr "groongaには以下の4種類のテーブルがあります。"

#: ../../doc/text/tutorial.textile:50
msgid ""
"- Groonga::Hash :=\n"
"  Hash table. It manages records via each primary key. It supports\n"
"  very quickly exact match search.\n"
"  =:"
msgstr ""
"- Groonga::Hash :=\n"
"  ハッシュテーブル。主キーでレコードを管理します。キーと完全一致するレコードを非常に高速に検索することができます。\n"
"  =:"

#: ../../doc/text/tutorial.textile:55
msgid ""
"- Groonga::PatriciaTrie :=\n"
"  Patricia Trie. It supports some search such as predictive search and\n"
"  common prefix search, but it provides a little slowly exact match search\n"
"  than Groonga::Hash. It provides cursor to take records in ascending\n"
"  or descending order.\n"
"  =:"
msgstr ""
"- Groonga::PatriciaTrie :=\n"
"  パトリシアトライ。ハッシュテーブルに比べて完全一致検索の速度がやや遅いですが、前方一致検索・共通接頭辞探索などの検索が行えます。またカーソルを用いてキーの昇降順にレコードを取り出すことができます。\n"
"  =:"

#: ../../doc/text/tutorial.textile:62
msgid ""
"- Groonga::DoubleArrayTrie :=\n"
"  Double Array Trie. It requires large spaces rather than other\n"
"  tables, but it can update key without ID change. It provides exract\n"
"  match search, predictive search and common prefix search and cursor\n"
"  like Groonga::PatriciaTrie.\n"
"  =:"
msgstr ""
"- Groonga::DoubleArrayTrie :=\n"
"  ダブル配列トライ。他のテーブルに比べてサイズが大きくなるものの、IDを変更せずにキーを変更できます。パトリシアトライと同様に完全一致検索・前方一致検索・共通接頭辞探索などの検索が行え、またカーソルを用いることができます。\n"
"  =:"

#: ../../doc/text/tutorial.textile:69
msgid ""
"- Groonga::Array :=\n"
"  Array. It doesn't have primary keys. It manages records by ID.\n"
"  =:"
msgstr ""
"- Groonga::Array :=\n"
"  配列。主キーの存在しないテーブルです。レコードはIDによって識別します。\n"
"  =:"

#: ../../doc/text/tutorial.textile:73
msgid ""
"Now, you use Groonga::Hash and create the table named @Items@. The type\n"
"of its primary key is String."
msgstr "ここではハッシュテーブルを利用して、 @Items@ という名前のテーブルを作成します。キーは文字列とします。"

#: ../../doc/text/tutorial.textile:76
msgid ""
"<pre>\n"
"!!!irb\n"
">> Groonga::Schema.create_table(\"Items\", :type => :hash)\n"
"=> [...]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:82
msgid ""
"You have @Items@ table by this code.\n"
"You can refer the defined table with Groonga.[] like below:"
msgstr ""
"これで @Items@ という名前のテーブルが作成できました。\n"
"定義したテーブルはGroonga.[]で参照できます。"

#: ../../doc/text/tutorial.textile:85
msgid ""
"<pre>\n"
"!!!irb\n"
">> items = Groonga[\"Items\"]\n"
"=> #<Groonga::Hash ...>\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:91
msgid ""
"You can treat it like Hash.\n"
"For example, let's type @items.size@ to get the number of records in\n"
"the table."
msgstr ""
"テーブルはRubyのHashのように扱えます。\n"
"例えば、以下のように @size@ でテーブルに登録されているレコード\n"
"の件数を取得できます。"

#: ../../doc/text/tutorial.textile:95
msgid ""
"<pre>\n"
"!!!irb\n"
">> items.size\n"
"=> 0\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:101
msgid "h2. Add records"
msgstr "h2. レコードの追加"

#: ../../doc/text/tutorial.textile:103
msgid "Let's add records to @Items@ table."
msgstr "@Items@ テーブルにレコードを追加します。"

#: ../../doc/text/tutorial.textile:105
msgid ""
"<pre>\n"
"!!!irb\n"
">> items.add(\"http://en.wikipedia.org/wiki/Ruby\")\n"
"=> #<Groonga::Record ...>\n"
">> items.add(\"http://www.ruby-lang.org/\")\n"
"=> #<Groonga::Record ...>\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:113
msgid "Please check the number of records. It increases from 0 to 2."
msgstr "件数を確認すると確かに0件から2件増えています。<"

#: ../../doc/text/tutorial.textile:115
msgid ""
"<pre>\n"
"!!!irb\n"
">> items.size\n"
"=> 2\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:121
msgid "If you can get record by primary key, type like below:"
msgstr "主キーを指定してレコードを取り出す時には以下のようにします。"

#: ../../doc/text/tutorial.textile:123
msgid ""
"<pre>\n"
"!!!irb\n"
">> items[\"http://en.wikipedia.org/wiki/Ruby\"]\n"
"=> #<Groonga::Record ...>\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:129
msgid "h2. Full text search"
msgstr "h2. 全文検索を行う"

#: ../../doc/text/tutorial.textile:131
msgid "Let's add item's title to full text search."
msgstr "各itemのタイトル文字列を登録して、全文検索できるようにしてみましょう。"

#: ../../doc/text/tutorial.textile:133
msgid "first, you add the @Text@ type column \"@title@\" to @Items@ table."
msgstr "まず @Items@ テーブルに @title@ という名前のカラムを追加します。ここでは、 @Text@ 型のデータを持つカラムとして定義します。"

# Groonga::Schema.remove_column
#: ../../doc/text/tutorial.textile:135
msgid ""
"<pre>\n"
"!!!irb\n"
">> Groonga::Schema.change_table(\"Items\") do |table|\n"
"?>     table.text(\"title\")\n"
">>   end\n"
"=> [...]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:143
msgid ""
"Defined columns is named as @#{TABLE_NAME}.#{COLUMN_NAME}@.\n"
"You can refer them with {Groonga.[]} as same as tables."
msgstr ""
"定義したカラムは @#{テーブル名}.#{カラム名}@ という名前になります。\n"
"テーブルと同じように {Groonga.[]} で参照できます。"

#: ../../doc/text/tutorial.textile:146
msgid ""
"<pre>\n"
"!!!irb\n"
">> title_column = Groonga[\"Items.title\"]\n"
"=> #<Groonga::VariableSizeColumn ...>\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:153
msgid ""
"Secondly, let's add the table containing terms from splited from texts.\n"
"Then you define the @Terms@ for it."
msgstr "次に、全文検索するために、文字列を分解して得られる各単語を格納するためのテーブルを別途用意します。ここではTermsという名前でテーブルを定義します。"

#: ../../doc/text/tutorial.textile:156
msgid ""
"<pre>\n"
"!!!irb\n"
">> Groonga::Schema.create_table(\"Terms\",\n"
"?>                              :type => :patricia_trie,\n"
"?>                              :normalizer => :NormalizerAuto,\n"
"?>                              :default_tokenizer => \"TokenBigram\")\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:164
msgid ""
"You specify @:default_tokenzier => \"TokenBigram\"@ for \"Tokenizer\" in\n"
"the above code.\n"
"\"Tokenizer\" is the object to split terms from texts. The default value\n"
"for it is none.\n"
"Full text search requires a tokenizer, so you specify \"Bigram\", a type\n"
"of N-gram.\n"
"Full text search with N-gram uses splited N characters and their\n"
"position in texts. \"N\" in N-gram specifies the number of each terms.\n"
"Groonga supports Unigram (N=1), Bigram (N=2) and Trigram (N=3)."
msgstr ""
"ここでは、トークナイザとして @:default_tokenzier => \"TokenBigram\"@ を指定しています。トークナイザとは文字列を単語に分解するオブジェクトのことです。デフォルトではトークナイザは指定されていません。全文検索を利用するためにはトークナイザを指定する必要があるので、ここではN-gramの一種であるバイグラムを指定しています。\n"
"\n"
"N-gramを利用した全文検索では、分解したN文字とその出現位置を利用して全文検索を行います。N-gramのNは文字列を何文字毎に分解するかの文字数になります。groongaは1文字で分解するユニグラム、2文字のバイグラム、3文字のトリグラムをサポートしています。"

#: ../../doc/text/tutorial.textile:174
msgid ""
"You also specify @:normalizer => :NormalizerAuto@ to search texts with\n"
"ignoring the case."
msgstr "また、大文字小文字の区別なく検索するために @:normalizer => :NormalizerAuto@ も指定しています。"

#: ../../doc/text/tutorial.textile:177
msgid ""
"Now, you ready table for terms, so you define the index of\n"
"@Items.tiltle@ column."
msgstr "単語格納用テーブルの準備ができたので、 @Items@ テーブルの @title@ カラムに対するインデックスを定義します。"

# Groonga::Schema.remove_column
#: ../../doc/text/tutorial.textile:180
msgid ""
"<pre>\n"
"!!!irb\n"
">> Groonga::Schema.change_table(\"Terms\") do |table|\n"
"?>     table.index(\"Items.title\")\n"
">>   end\n"
"=> [...]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:188
msgid ""
"You may feel a few unreasonable code. The index of @Items@ table's\n"
"column is defined as the column in @Terms@."
msgstr "少し違和感を感じるかも知れませんが、 @Items@ テーブルのカラムに対するインデックスは、 @Terms@ テーブルのカラムとして定義します。"

#: ../../doc/text/tutorial.textile:191
msgid ""
"When a record is added to @Items@, groonga adds records associated\n"
"each terms in it to @Terms@ automatically."
msgstr "@Items@ にレコードが登録されると、その中に含まれる単語に該当するレコードが @Terms@ に自動的に追加されるようになります。"

#: ../../doc/text/tutorial.textile:195
msgid ""
"@Terms@ is a few particular table, but you can add some columns to term\n"
"table such as @Terms@ and manage many attributes of each terms. It is\n"
"very useful to process particular search."
msgstr "@Terms@ は、文書に含まれる語彙に相当する、やや特殊なテーブルだと言えます。しかし、他のテーブルと同様に語彙テーブルには自由にカラムを追加し、単語毎の様々な属性を管理することができます。これはある種の検索処理を行う際には非常に便利に機能します。"

#: ../../doc/text/tutorial.textile:199
msgid ""
"Now, you finished table definition.\n"
"Let's put some values to @title@ of each record you added before."
msgstr ""
"これでテーブルの定義は完了です。\n"
"先ほど登録した各レコードの @title@ カラムに値をセットします。"

#: ../../doc/text/tutorial.textile:202
msgid ""
"<pre>\n"
"!!!irb\n"
">> items[\"http://en.wikipedia.org/wiki/Ruby\"].title = \"Ruby\"\n"
"=> \"Ruby\"\n"
">> items[\"http://www.ruby-lang.org/\"].title = \"Ruby Programming Language\"\n"
"\"Ruby Programming Language\"\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:210
msgid "Now, you can do full text search like above:"
msgstr "ここまでのコードより、以下のようにして検索することができます。"

#: ../../doc/text/tutorial.textile:212
msgid ""
"<pre>\n"
"!!!irb\n"
">> ruby_items = items.select {|record| record.title =~ \"Ruby\"}\n"
"=> #<Groonga::Hash ..., normalizer: (nil)>\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:218
msgid ""
"Groonga returns the search result as Groonga::Hash.\n"
"Keys in this hash table is records of hitted @Items@."
msgstr "検索結果はGroonga::Hashで返されます。ハッシュのキーに見つかった @Items@ のレコードが入っています。"

#: ../../doc/text/tutorial.textile:221
msgid ""
"<pre>\n"
"!!!irb\n"
">> ruby_items.collect {|record| record.key.key}\n"
"=> [\"http://en.wikipedia.org/wiki/Ruby\", \"http://www.ruby-lang.org/\"]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:227
msgid ""
"In above example, you get records in @Items@ with @record.key@, and\n"
"keys of them with @record.key.key@."
msgstr "上の例では @record.key@ で @Items@ のレコードを取得して、さらにそのキーを指定して（ @record.key.key@ ）で @Items@ のキーを返しています。"

#: ../../doc/text/tutorial.textile:230
msgid "You can access a refered key in records briefly with @record[\"_key\"]@."
msgstr "@record[\"_key\"]@ でアクセスすると自動的に参照しているレコードを辿っていき、参照先のキーにアクセスできます。"

#: ../../doc/text/tutorial.textile:232
msgid ""
"<pre>\n"
"!!!irb\n"
">> ruby_items.collect {|record| record[\"_key\"]}\n"
"=> [\"http://en.wikipedia.org/wiki/Ruby\", \"http://www.ruby-lang.org/\"]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:238
msgid "h2. Improve the simple bookmark application"
msgstr "シンプルなブックマークアプリの拡張"

#: ../../doc/text/tutorial.textile:240
msgid ""
"Let's try to improve this simple application a little. You can create\n"
"bookmark application for multi users and they can comment to each\n"
"bookmarks."
msgstr "ここまでで作った単機能のアプリケーションをもう少し拡張して、複数のユーザが、それぞれにコメントを記入できるブックマークアプリケーションにしてみましょう。"

#: ../../doc/text/tutorial.textile:244
msgid "First, you add tables for users and for comments like below:"
msgstr "まず、ユーザ情報とコメント情報を格納するテーブルを追加して、下図のようなテーブル構成にします。"

# Groonga::Schema
#: ../../doc/text/tutorial.textile:246 ../../lib/groonga/schema.rb:28
msgid "!http://qwik.jp/senna/senna2.files/rect4605.png!"
msgstr ""

#: ../../doc/text/tutorial.textile:248
msgid "Let's add the table for users, @Users@."
msgstr "まず、 ユーザ情報を格納する @Users@ テーブルを追加します。"

# Groonga::Schema.remove_column
#: ../../doc/text/tutorial.textile:250
msgid ""
"<pre>\n"
"!!!irb\n"
">> Groonga::Schema.create_table(\"Users\", :type => :hash) do |table|\n"
"?>     table.text(\"name\")\n"
">>   end\n"
"=> [...]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:259
msgid "Next, let's add the table for comments as @Comments@."
msgstr "次に、コメントの情報を格納する @Comments@ テーブルを追加します。"

#: ../../doc/text/tutorial.textile:261
msgid ""
"<pre>\n"
"!!!irb\n"
">> Groonga::Schema.create_table(\"Comments\") do |table|\n"
"?>     table.reference(\"item\")\n"
">>   table.reference(\"author\", \"Users\")\n"
">>   table.text(\"content\")\n"
">>   table.time(\"issued\")\n"
">>   end\n"
"=> [...]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:272
msgid ""
"Then you define the index of @content@ column in @Comments@ for full\n"
"text search."
msgstr "@Comments@ テーブルの @content@ カラムを全文検索できるようにインデックスを定義します。"

# Groonga::Schema.remove_column
#: ../../doc/text/tutorial.textile:275
msgid ""
"<pre>\n"
"!!!irb\n"
">> Groonga::Schema.change_table(\"Terms\") do |table|\n"
"?>     table.index(\"Comments.content\")\n"
">>   end\n"
"=> [...]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:283
msgid "You finish table definition by above code."
msgstr "これでテーブルが定義できました。"

#: ../../doc/text/tutorial.textile:285
msgid "Secondly, you add some users to @Users@."
msgstr "続いてユーザを何人か追加します。"

#: ../../doc/text/tutorial.textile:287
msgid ""
"<pre>\n"
"!!!irb\n"
">> users = Groonga[\"Users\"]\n"
"=> #<Groonga::Hash ...>\n"
">> users.add(\"alice\", :name => \"Alice\")\n"
"=> #<Groonga::Record ...>\n"
">> users.add(\"bob\", :name => \"Bob\")\n"
"=> #<Groonga::Record ...>\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:297
msgid ""
"Now, let's write the process to bookmark by a user.\n"
"You assume that the user, @moritan@, bookmark a page including\n"
"infomation related Ruby."
msgstr "ここで、実際にユーザがブックマークを貼る時の処理を実行してみましょう。ユーザ @moritan@ が、Ruby関連のとあるページをブックマークしたと想定します。"

#: ../../doc/text/tutorial.textile:301
msgid "First, you check if the page has been added @Items@ already."
msgstr "まず対象のページが @Items@ テーブルに登録済かどうか調べます。"

#: ../../doc/text/tutorial.textile:303
msgid ""
"<pre>\n"
"!!!irb\n"
">> items.has_key?(\"http://www.ruby-doc.org/\")\n"
"=> false\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:309
msgid "The page hasn't been added, so you add it to @Items@."
msgstr "未登録でした。なので、まず当該ページを @Items@ に登録します。"

#: ../../doc/text/tutorial.textile:311
msgid ""
"<pre>\n"
"!!!irb\n"
">> items.add(\"http://www.ruby-doc.org/\",\n"
"?>           :title => \"Ruby-Doc.org: Documenting the Ruby Language\")\n"
"=> #<Groonga::Record ...>\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:318
msgid ""
"Next, you add the record to @Comments@. This record contains this page\n"
"as its @item@ column."
msgstr "次に、登録したitemを @item@ カラムの値に指定して@Comments@ にレコードを登録します。"

#: ../../doc/text/tutorial.textile:321
msgid ""
"<pre>\n"
"!!!irb\n"
">> require \"time\"\n"
"=> true\n"
">> comments = Groonga[\"Comments\"]\n"
"=> #<Groonga::Array ...>\n"
">> comments.add(:item => \"http://www.ruby-doc.org/\",\n"
"?>              :author => \"alice\",\n"
"?>              :content => \"Ruby documents\",\n"
"?>              :issued => Time.parse(\"2010-11-20T18:01:22+09:00\"))\n"
"=> #<Groonga::Record ...>\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:334
msgid "h2. Define methods for this process"
msgstr "h2. メソッド化"

#: ../../doc/text/tutorial.textile:336
msgid "For usefull, you define methods for above processes."
msgstr "このあとの利便性のため、上記の一連の手続きをメソッドにまとめてみます。"

#: ../../doc/text/tutorial.textile:338
msgid ""
"<pre>\n"
"!!!irb\n"
">> @items = items\n"
"=> #<Groonga::Hash ...>\n"
">> @comments = comments\n"
"=> #<Groonga::Array ...>\n"
">> def add_bookmark(url, title, author, content, issued)\n"
">>   item = @items[url] || @items.add(url, :title => title)\n"
">>   @comments.add(:item => item,\n"
"?>                 :author => author,\n"
"?>                 :content => content,\n"
"?>                 :issued => issued)\n"
">>   end\n"
"=> nil\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:354
msgid ""
"You assign @items@ and @comments@ to each instance variable, so you can\n"
"use them in @add_bookmark@ method."
msgstr "@items@ と @comments@ をインスタンス変数に代入しているのはメソッド内からでも見えるようにするためです。"

#: ../../doc/text/tutorial.textile:357
msgid "@add_bookmark@ executes processes like below:"
msgstr "@add_bookmark@ は以下のような手順を実行しています。"

#: ../../doc/text/tutorial.textile:359
msgid ""
"* Check if the record associated the page exists in @Items@ table.\n"
"* If not, add the record to it.\n"
"* Add the record to @Comments@ table."
msgstr ""
"*  @Items@ テーブルに該当ページのレコードがあるかどうか調べる。\n"
"* レコードがなければ追加する。\n"
"*  @Comments@ テーブルにレコードを登録する。"

#: ../../doc/text/tutorial.textile:363
msgid "With this method, lets bookmark some pages."
msgstr "作成したメソッドを呼び出していくつかブックマークを登録してみましょう。"

#: ../../doc/text/tutorial.textile:365
msgid ""
"<pre>\n"
"!!!irb\n"
">> add_bookmark(\"https://rubygems.org/\",\n"
"?>              \"RubyGems.org | your community gem host\", \"alice\", \"Ruby gems\",\n"
"?>              Time.parse(\"2010-10-07T14:18:28+09:00\"))\n"
"=> #<Groonga::Record ...>\n"
">> add_bookmark(\"http://ranguba.org/\",\n"
"?>              \"Fulltext search by Ruby with groonga - Ranguba\", \"bob\",\n"
"?>              \"Ruby groonga fulltextsearch\",\n"
"?>              Time.parse(\"2010-11-11T12:39:59+09:00\"))\n"
"=> #<Groonga::Record ...>\n"
">> add_bookmark(\"http://www.ruby-doc.org/\",\n"
"?>              \"ruby-doc\", \"bob\", \"ruby documents\",\n"
"?>              Time.parse(\"2010-07-28T20:46:23+09:00\"))\n"
"=> #<Groonga::Record ...>\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:382
msgid "h2. Full text search part 2"
msgstr "h2. 全文検索その2"

#: ../../doc/text/tutorial.textile:384
msgid "Let's do full text search for added records."
msgstr "登録したレコードに対して全文検索を実行してみます。"

#: ../../doc/text/tutorial.textile:386
msgid ""
"<pre>\n"
"!!!irb\n"
">> records = comments.select do |record|\n"
"?>     record[\"content\"] =~ \"Ruby\"\n"
">>   end\n"
"=> #<Groonga::Hash ...>\n"
">> records.each do |record|\n"
"?>     comment = record\n"
">>   p [comment.id,\n"
"?>       comment.issued,\n"
"?>       comment.item.title,\n"
"?>       comment.author.name,\n"
"?>       comment.content]\n"
">>   end\n"
"[1, 2010-11-20 18:01:22 +0900, \"Ruby-Doc.org: Documenting the Ruby Language\", \"Alice\", \"Ruby documents\"]\n"
"[2, 2010-10-07 14:18:28 +0900, \"RubyGems.org | your community gem host\", \"Alice\", \"Ruby gems\"]\n"
"[3, 2010-11-11 12:39:59 +0900, \"Fulltext search by Ruby with groonga - Ranguba\", \"Bob\", \"Ruby groonga fulltextsearch\"]\n"
"[4, 2010-07-28 20:46:23 +0900, \"Ruby-Doc.org: Documenting the Ruby Language\", \"Bob\", \"ruby documents\"]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:406
msgid ""
"You can access the columns with the same name method as each them.\n"
"These methods suport to access the complex data type.\n"
"(In usually RDB, you should namage JOIN tables, @Items@, @Comments@,\n"
"@Users@.)"
msgstr "カラム名と同じメソッドでカラムへのアクセスできます。複合データ型の要素も再帰的に辿ることができます。（同様の出力を普通のRDBで実現するためには、 @Items@ テーブル、@Comments@ テーブル、 @Users@ テーブルのJOIN操作が必要になります。）"

#: ../../doc/text/tutorial.textile:411
msgid ""
"The search is finished when the first sentence in this codes. The\n"
"results of this search is the object as records set."
msgstr "上の式の中で、肝心の検索処理は、第一引数の式を評価する時点で完了していて、レコードセットオブジェクトとしてメモリに蓄積されています。"

#: ../../doc/text/tutorial.textile:414
msgid ""
"<pre>\n"
"!!!irb\n"
">> records\n"
"#<Groonga::Hash ..., size: <4>>\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:420
msgid ""
"You can arrange this records set before output.\n"
"For example, sort these records in the descending order by date."
msgstr ""
"レコードセットは、出力する前に様々に加工することができます。\n"
"以下は、日付で降順にソートしてから出力した例です。"

#: ../../doc/text/tutorial.textile:423
msgid ""
"<pre>\n"
"!!!irb\n"
">> records.sort([{:key => \"issued\", :order => \"descending\"}]).each do |record|\n"
"?>     comment = record\n"
">>   p [comment.id,\n"
"?>       comment.issued,\n"
"?>       comment.item.title,\n"
"?>       comment.author.name,\n"
"?>       comment.content]\n"
">>   end\n"
"[1, 2010-11-20 18:01:22 +0900, \"Ruby-Doc.org: Documenting the Ruby Language\", \"Alice\", \"Ruby documents\"]\n"
"[2, 2010-11-11 12:39:59 +0900, \"Fulltext search by Ruby with groonga - Ranguba\", \"Bob\", \"Ruby groonga fulltextsearch\"]\n"
"[3, 2010-10-07 14:18:28 +0900, \"RubyGems.org | your community gem host\", \"Alice\", \"Ruby gems\"]\n"
"[4, 2010-07-28 20:46:23 +0900, \"Ruby-Doc.org: Documenting the Ruby Language\", \"Bob\", \"ruby documents\"]\n"
"=> [...]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:440
msgid "Let's group the result by each item for easy view."
msgstr "同じitemが何度も出てくると検索結果が見にくいので、item毎にグループ化してみます。"

#: ../../doc/text/tutorial.textile:442
msgid ""
"<pre>\n"
"!!!irb\n"
">> records.group(\"item\").each do |record|\n"
"?>     item = record.key\n"
">>   p [record.n_sub_records,\n"
"?>       item.key,\n"
"?>       item.title]\n"
">>   end\n"
"[2, \"http://www.ruby-doc.org/\", \"Ruby-Doc.org: Documenting the Ruby Language\"]\n"
"[1, \"https://rubygems.org/\", \"RubyGems.org | your community gem host\"]\n"
"[1, \"http://ranguba.org/\", \"Fulltext search by Ruby with groonga - Ranguba\"]\n"
"=> nil\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:456
msgid ""
"@n_sub_records@ is the number of records in each group.\n"
"It is similar value as count() function of a query including \"GROUP\n"
"BY\" in SQL."
msgstr "@n_sub_records@ というのはグループ化した単位に含まれるレコードの件数を示します。SQLで言えば、GROUP BY句を含むクエリのcount関数のような働きです。"

#: ../../doc/text/tutorial.textile:460
msgid "h2. more complex search"
msgstr "h2. 少し複雑な検索"

#: ../../doc/text/tutorial.textile:462
msgid "Now, you challenge the more useful search."
msgstr "さらに実用的な検索を考えてみましょう。"

#: ../../doc/text/tutorial.textile:464
msgid "You should calcurate goodness of fit of search explicitly."
msgstr "ブックマークが大量に蓄積されるに従って、より的確に適合度を算出する必要性に迫られます。"

#: ../../doc/text/tutorial.textile:466
msgid ""
"You can use @Items.title@ and @Comments.content@ as search targets now.\n"
"@Items.title@ is the a few reliable information taken from each\n"
"original pages. On the other hands, @Comments.content@ is the less\n"
"reliable information because this depends on users of bookmark\n"
"application."
msgstr "今のところ検索対象として利用できるのは @Items.title@ と @Comments.content@ ですが、 @Items.title@ は元ページから得られるやや信頼できる情報なのに対して、@Comments.content@ はブックマークユーザが任意に設定できる情報で、やや信憑性に乏しいと言えます。しかし、再現率を確保するためにはユーザのコメントも是非対象に含めたいところです。"

#: ../../doc/text/tutorial.textile:472
msgid "Then, you search records with this policy:"
msgstr "そこで、以下のようなポリシーで検索を行うことにします。"

#: ../../doc/text/tutorial.textile:474
msgid ""
"* Search item matched @Items.title@ or @Comments.content@.\n"
"* Add 10 times heavier weight to socres of each record matched\n"
"  @Items.title@ than ones of @Comments.comment@.\n"
"* If multi @comment@ of one item are matched keyword, specify the sum\n"
"  of scores of each @coments@ as score of the item."
msgstr ""
"*  @Items.title@ か @Comments.content@ のいずれかにマッチするitemを検索する。\n"
"* ただし、 @Items.title@ にマッチしたレコードはスコアを10倍重み付けする。\n"
"* 同一のitemに対して、キーワードにマッチする @comment@ が複数存在した場合は、それぞれの @comment@ のスコアの和を、該当するitemのスコアとする。"

#: ../../doc/text/tutorial.textile:480
msgid "On this policy, you try to type below:"
msgstr "以下のようにして、commentとitemとそれぞれに対する検索結果を求めます。"

#: ../../doc/text/tutorial.textile:482
msgid ""
"<pre>\n"
"!!!irb\n"
">> ruby_comments = @comments.select {|record| record.content =~ \"Ruby\"}\n"
"=> #<Groonga::Hash ..., size: <4>\n"
">> ruby_items = @items.select do |record|\n"
"?>     target = record.match_target do |match_record|\n"
"?>       match_record.title * 10\n"
">>     end\n"
">>   target =~ \"Ruby\"\n"
">>   end\n"
"#<Groonga::Hash ..., size: <4>>\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:495
msgid ""
"You group the results of _ruby_comments_ in each item and union\n"
"_ruby_items_ ."
msgstr "_ruby_comments_ の結果をitem毎にグループ化し、_ruby_items_ と対応させて出力します。"

#: ../../doc/text/tutorial.textile:498
msgid ""
"<pre>\n"
"!!!irb\n"
">> ruby_items = ruby_comments.group(\"item\").union!(ruby_items)\n"
"#<Groonga::Hash ..., size: <5>>\n"
">> ruby_items.sort([{:key => \"_score\", :order => \"descending\"}]).each do |record|\n"
">>   p [record.score, record.title]\n"
">> end\n"
"[22, \"Ruby-Doc.org: Documenting the Ruby Language\"]\n"
"[11, \"Fulltext search by Ruby with groonga - Ranguba\"]\n"
"[10, \"Ruby Programming Language\"]\n"
"[10, \"Ruby\"]\n"
"[1, \"RubyGems.org | your community gem host\"]\n"
"</pre>"
msgstr ""

#: ../../doc/text/tutorial.textile:512
msgid "Then, you get the result."
msgstr "これで目的の結果が得られました。"

#: ../../ext/groonga/rb-grn-accessor.c:77
msgid "アクセサ名を返す。"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-accessor.c:87
msgid ""
"items = Groonga::Array.create(:name => \"Items\")\n"
"id = items.column(\"_id\")\n"
"id.name # => nil\n"
"id.local_name # => \"_id\""
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-accessor.c:87
#: ../../ext/groonga/rb-grn-column.c:145
msgid "tag|overload|local_name"
msgstr ""

#: ../../ext/groonga/rb-grn-accessor.c:103
msgid ""
"キー、値、スコアなど種々の値へのアクセスをカプセル化した\n"
"オブジェクト。 {Groonga::Table#column} で取得できる。"
msgstr ""

# Groonga::ArrayCursor
#: ../../ext/groonga/rb-grn-array-cursor.c:24
msgid ""
"{Groonga::Array} に登録されているレコードを順番に取り出すため\n"
"のオブジェクト。利用できるメソッドは {Groonga::TableCursor} を\n"
"参照。"
msgstr ""

#: ../../ext/groonga/rb-grn-array.c:26
msgid ""
"各レコードがキーに関連付けられていないテーブル。レコードは\n"
"IDで識別する。"
msgstr ""

#: ../../ext/groonga/rb-grn-array.c:33
msgid ""
"キーのないテーブルを生成する。ブロックを指定すると、そのブ\n"
"ロックに生成したテーブルが渡され、ブロックを抜けると自動的\n"
"にテーブルが破棄される。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-array.c:86
#: ../../ext/groonga/rb-grn-database.c:172
#: ../../ext/groonga/rb-grn-double-array-trie.c:168
#: ../../ext/groonga/rb-grn-hash.c:149
#: ../../ext/groonga/rb-grn-patricia-trie.c:159
msgid "tag|overload|create"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-array.c:86
msgid ""
"#無名一時テーブルを生成する。\n"
"Groonga::Array.create\n"
"\n"
"#無名永続テーブルを生成する。\n"
"Groonga::Array.create(:path => \"/tmp/array.grn\")\n"
"\n"
"#名前付き永続テーブルを生成する。ただし、ファイル名は気にしない。\n"
"Groonga::Array.create(:name => \"Bookmarks\",\n"
"                      :persistent => true)\n"
"\n"
"#それぞれのレコードに512バイトの値を格納できる無名一時テーブルを生成する。\n"
"Groonga::Array.create(:value => 512)"
msgstr ""

#: ../../ext/groonga/rb-grn-array.c:146
msgid ""
"レコード追加し、追加したレコードを返す。レコードの追加に失\n"
"敗した場合は +nil+ を返す。"
msgstr ""

# Groonga::Array#add
# Groonga::Table::KeySupport#add
#: ../../ext/groonga/rb-grn-array.c:149
#: ../../ext/groonga/rb-grn-table-key-support.c:216
msgid ""
"_values_ にはレコードのカラムに設定する値を指定する。省略\n"
"した場合または +nil+ を指定した場合はカラムは設定しない。カ\n"
"ラムの値は @{:カラム名1 => 値1, :カラム名2 => 値2,\n"
"...}@ と指定する。"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-array.c:173
msgid ""
"#以下のようなユーザを格納するGroonga::Arrayが\n"
"#定義されているものとする。\n"
"users = Groonga::Array.create(:name => \"Users\")\n"
"users.define_column(\"name\", \"ShortText\")\n"
"users.define_column(\"uri\", \"ShortText\")\n"
"#ユーザを追加する。\n"
"user = users.add\n"
"\n"
"#daijiroユーザを追加する。\n"
"daijiro = users.add(:name => \"daijiro\")\n"
"\n"
"#gunyara-kunユーザを追加する。\n"
"gunyara_kun = users.add(:name => \"gunyara-kun\",\n"
"                        :uri => \"http://d.hatena.ne.jp/tasukuchan/\")"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-array.c:173
#: ../../ext/groonga/rb-grn-index-column.c:292
#: ../../ext/groonga/rb-grn-table-key-support.c:224
msgid "tag|overload|add"
msgstr ""

# Groonga::Array#push
#: ../../ext/groonga/rb-grn-array.c:230
msgid ""
"Pushes a record to the array. The record should be filled in the\n"
"given block. The pushed record can be pulled by\n"
"{Groonga::Array#pull}."
msgstr ""

# Groonga::Array#push
#: ../../ext/groonga/rb-grn-array.c:234
msgid ""
"The record that is passed to the given block may be nil. You need\n"
"to handle the case. For example, just ignoring it or reports an\n"
"error."
msgstr ""

# Groonga::Array#push
#: ../../ext/groonga/rb-grn-array.c:238
msgid ""
"If an error is occurred in the given block, the pushed record may\n"
"not be filled completely. You should handle the case in pull side."
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-array.c:302
msgid "tag|example|A program that has an error in push block"
msgstr ""

# @example A program that pulls a job without error handling
#: ../../ext/groonga/rb-grn-array.c:302
msgid ""
"queue = Groonga::Array.open(:name => \"CrawlURLQueue\")\n"
"loop do\n"
"  url = nil\n"
"  queue.pull do |record|\n"
"    url = record.url\n"
"    record.delete\n"
"  end\n"
"  # Crawl URL\n"
"end"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-array.c:302
msgid "tag|example|A program that pushes a job with error handling"
msgstr ""

# @example A program that pushes a job with error handling
#: ../../ext/groonga/rb-grn-array.c:302
msgid ""
"queue = Groonga::Array.create(:name => \"CrawlURLQueue\")\n"
"queue.define_column(\"url\", \"ShortText\")\n"
"urls = [\"http://groonga.org/\", \"http://ranguba.org/\"]\n"
"urls.each do |url|\n"
"  queue.push do |record|\n"
"    record.url = url if record # check record is not nil\n"
"  end\n"
"end"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-array.c:302
msgid "tag|example|A program that pulls a job without error handling"
msgstr ""

# @example A program that has an error in push block
#: ../../ext/groonga/rb-grn-array.c:302
msgid ""
"queue = Groonga::Array.create(:name => \"CrawlURLQueue\")\n"
"queue.define_column(\"url\", \"ShortText\")\n"
"urls = [\"http://groonga.org/\", \"http://ranguba.org/\"]\n"
"urls.each do |url|\n"
"  queue.push do |record|\n"
"    record.url = uri # Typo! It should be ur*l* not ur*i*\n"
"    # record.url isn't set\n"
"  end\n"
"end"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-array.c:302
msgid "tag|example|A program that pulls a job with error handling"
msgstr ""

# @example A program that pulls a job with error handling
#: ../../ext/groonga/rb-grn-array.c:302
msgid ""
"queue = Groonga::Array.open(:name => \"CrawlURLQueue\")\n"
"loop do\n"
"  url = nil\n"
"  queue.pull do |record|\n"
"    url = record.url # record.url is nil!\n"
"    record.delete\n"
"  end\n"
"  next if url.nil? # Ignore an uncompleted added job\n"
"  # Crawl URL\n"
"end"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-array.c:302
msgid "tag|overload|push"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-array.c:302
msgid "tag|example|A program that pushes a job without error handling"
msgstr ""

# @example A program that pushes a job without error handling
#: ../../ext/groonga/rb-grn-array.c:302
msgid ""
"queue = Groonga::Array.create(:name => \"CrawlURLQueue\")\n"
"queue.define_column(\"url\", \"ShortText\")\n"
"urls = [\"http://groonga.org/\", \"http://ranguba.org/\"]\n"
"urls.each do |url|\n"
"  queue.push do |record|\n"
"    record.url = url\n"
"  end\n"
"end"
msgstr ""

# Groonga::Array#pull
#: ../../ext/groonga/rb-grn-array.c:329
msgid ""
"Pulls a record from the array. The required values should be\n"
"retrieved in the given block."
msgstr ""

# Groonga::Array#pull
#: ../../ext/groonga/rb-grn-array.c:332
msgid ""
"If {Groonga::Array#push} failes to fill values of the pushed\n"
"record, the pulled record may be uncompleted. It should be handled\n"
"by your application."
msgstr ""

# Groonga::Array#pull
#: ../../ext/groonga/rb-grn-array.c:336
msgid ""
"If you passes @:block? => true@ option, the pull operation blocks\n"
"until a pushed record is pushed. It is the default behavior."
msgstr ""

# Groonga::Array#pull
#: ../../ext/groonga/rb-grn-array.c:339
msgid ""
"If you passes @:block? => false@ option, the pull operation returns\n"
"immediately, the given block isn't called and returns nil when no\n"
"record exist in the array."
msgstr ""

# Groonga::Array#pull
#: ../../ext/groonga/rb-grn-array.c:343
msgid ""
"Note that your signal handlers can't be ran while a pull\n"
"operation. You need to use {Groonga::Array#unblock} from\n"
"another process to unblock the pull operation. If you call\n"
"{Groonga::Array#unblock}, signal handler can be ran."
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-array.c:385
msgid "tag|example|Signal handler isn't called"
msgstr ""

# @example Signal handler isn't called
#: ../../ext/groonga/rb-grn-array.c:385
msgid ""
"queue = Groonga::Array.open(:name => \"CrawlURLQueue\")\n"
"trap(:INT) do\n"
"  p :not_called!\n"
"end\n"
"queue.pull do |record|\n"
"  # Send SIGINT while blocking the pull operation.\n"
"  # The signal handler isn't called.\n"
"end"
msgstr ""

# @see {Groonga::Array#push}
#: ../../ext/groonga/rb-grn-array.c:385
msgid "Examples exist in the push documentation."
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-array.c:385
msgid "tag|example|A program that pulls with non-block mode"
msgstr ""

# @see
#: ../../ext/groonga/rb-grn-array.c:385
msgid "tag|see|Groonga::Array#push"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-array.c:385
msgid "tag|overload|pull"
msgstr ""

# @example A program that pulls with non-block mode
#: ../../ext/groonga/rb-grn-array.c:385
msgid ""
"queue = Groonga::Array.open(:name => \"CrawlURLQueue\")\n"
"loop do\n"
"  url = nil\n"
"  # The case for no pushed records in the array.\n"
"  pulled_record = queue.pull(:block? => false) do |record|\n"
"    # This block isn't called\n"
"    url = record.url\n"
"    record.delete\n"
"  end\n"
"  p pulled_record.nil? # => true\n"
"end"
msgstr ""

# Groonga::Array#unblock
#: ../../ext/groonga/rb-grn-array.c:425
msgid "Unblocks all {Groonga::Array#pull} operations for the array."
msgstr ""

# @example Pull, unblock and signal
#: ../../ext/groonga/rb-grn-array.c:450
msgid ""
"# pull.rb\n"
"queue = Groonga::Array.open(:name => \"CrawlURLQueue\")\n"
"trap(:INT) do\n"
"  p :called!\n"
"end\n"
"queue.pull do |record|\n"
"  # 1. Send SIGINT while blocking the pull operation.\n"
"  #    The signal handler isn't called.\n"
"  # 2. Run unblock.rb.\n"
"  #    The signal handler is called!\n"
"end\n"
"\n"
"# unblock.rb\n"
"queue = Groonga::Array.open(:name => \"CrawlURLQueue\")\n"
"queue.unblock"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-array.c:450
msgid "tag|example|Pull, unblock and signal"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-array.c:450
msgid "tag|overload|unblock"
msgstr ""

# @see
#: ../../ext/groonga/rb-grn-array.c:450
msgid "tag|see|Groonga::Array#pull"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:27
msgid ""
"テーブルに情報を付加するためのオブジェクト。テーブルに複\n"
"数のカラムを定義することによりレコード毎に複数の情報を付\n"
"加することができる。"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:31
msgid "カラムには大きく分けて3種類ある。"
msgstr ""

# Groonga::Column
#: ../../ext/groonga/rb-grn-column.c:33
msgid ""
"- {Groonga::FixSizeColumn} :=\n"
"  固定長のデータを格納するカラム。 =:\n"
"- {Groonga::VariableSizeColumn} :=\n"
"  可変長のデータを格納するカラム。 =:\n"
"- {Groonga::IndexColumn} :=\n"
"  転置インデックスを格納するカラム。全文検索や参照元レコー\n"
"  ドの検索を行う場合はこのカラムを使用する。 =:"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:41
msgid ""
"固定長データ用カラム・可変長データ用カラムは1つのデータだ\n"
"けを格納するか複数のデータを格納するかを選ぶことができる。\n"
"1つのデータの場合はスカラ値、複数のデータの場合はスカラー\n"
"値を格納するという。"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:46
msgid ""
"カラムは名前を持ち、1つのテーブルでは同じカラム名を持つカ\n"
"ラムを複数定義することはできない。"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:114
msgid "カラムが所属するテーブルを返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-column.c:119
msgid "tag|overload|table"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:136
msgid "テーブル名を除いたカラム名を返す。"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-column.c:145
msgid ""
"items = Groonga::Array.create(:name => \"Items\")\n"
"title = items.define_column(\"title\", \"ShortText\")\n"
"title.name # => \"Items.title\"\n"
"title.local_name # => \"title\""
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:172
msgid ""
"カラムが所属するテーブルからブロックまたは文字列で指定し\n"
"た条件にマッチするレコードを返す。返されたテーブルには\n"
"+expression+ という特異メソッドがあり、指定した条件を表し\n"
"ている {Groonga::Expression} を取得できる。\n"
"{Groonga::Expression#snippet} を使うことにより、指定した条件\n"
"用のスニペットを簡単に生成できる。"
msgstr ""

# Groonga::Column#select
#: ../../ext/groonga/rb-grn-column.c:179
msgid ""
"bc. !!!ruby\n"
"  results = description_column.select do |column|\n"
"    column =~ \"groonga\"\n"
"  end\n"
"  snippet = results.expression.snippet([[\"<em>\", \"</em>\"]])\n"
"  results.each do |record|\n"
"    puts \"#{record['name']}の説明文の中で「groonga」が含まれる部分\"\n"
"    snippet.execute(record[\"description\"]).each do |snippet|\n"
"      puts \"---\"\n"
"      puts \"#{snippet}...\"\n"
"      puts \"---\"\n"
"    end\n"
"  end"
msgstr ""
"bc. !!!ruby\n"
"  results = description_column.select do |column|\n"
"    column =~ \"groonga\"\n"
"  end\n"
"  snippet = results.expression.snippet([[\"<em>\", \"</em>\"]])\n"
"  results.each do |record|\n"
"    puts \"#{record['name']}の説明文の中で「groonga」が含まれる部分\"\n"
"    snippet.execute(record[\"description\"]).each do |snippet|\n"
"      puts \"---\"\n"
"      puts \"#{snippet}...\"\n"
"      puts \"---\"\n"
"    end\n"
"  end"

#: ../../ext/groonga/rb-grn-column.c:193
#: ../../ext/groonga/rb-grn-table.c:1996
msgid "出力例"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:195
#: ../../ext/groonga/rb-grn-table.c:1998
msgid ""
"<pre>\n"
"!!!text\n"
"rroongaの説明文の中で「groonga」が含まれる部分\n"
"---\n"
"rroongaは<em>groonga</em>のいわゆるDB-APIの層の...\n"
"---\n"
"</pre>"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-column.c:302
#: ../../ext/groonga/rb-grn-table.c:2105
msgid "tag|overload|select"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:302
msgid "検索結果"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:388
msgid "_column_ のロックを解除する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-column.c:395
#: ../../ext/groonga/rb-grn-database.c:409
#: ../../ext/groonga/rb-grn-table.c:1793
msgid "tag|overload|unlock"
msgstr ""

# Groonga::Column#lock
#: ../../ext/groonga/rb-grn-column.c:431
msgid ""
"_column_ をロックする。ロックに失敗した場合は\n"
"{Groonga::ResourceDeadlockAvoided} 例外が発生する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-column.c:449
#: ../../ext/groonga/rb-grn-database.c:442
#: ../../ext/groonga/rb-grn-table.c:1857
msgid "tag|overload|lock"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:488
msgid "_column_ のロックを強制的に解除する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-column.c:497
#: ../../ext/groonga/rb-grn-database.c:479
#: ../../ext/groonga/rb-grn-table.c:1908
msgid "tag|overload|clear_lock"
msgstr ""

# Groonga::Column#locked?
#: ../../ext/groonga/rb-grn-column.c:524
msgid "_column_ がロックされていれば +true+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-column.c:533
#: ../../ext/groonga/rb-grn-database.c:498
#: ../../ext/groonga/rb-grn-table.c:1947
msgid "tag|overload|locked?"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:558
msgid ""
"_column_ の値がテーブルのレコードとなる場合は +true+ を返し、\n"
"そうでない場合は +false+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-column.c:565
msgid "tag|overload|reference?"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:565
#: ../../ext/groonga/rb-grn-column.c:600
#: ../../ext/groonga/rb-grn-column.c:625
#: ../../ext/groonga/rb-grn-column.c:652
#: ../../lib/groonga/record.rb:140 ../../lib/groonga/record.rb:147
msgid "1.0.5"
msgstr ""

# Groonga::Column#index?
# Groonga::Column#index_column?
#: ../../ext/groonga/rb-grn-column.c:593
msgid ""
"_column_ が {Groonga::IndexColumn} の場合は +true+ を返し、\n"
"そうでない場合は +false+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-column.c:600
msgid "tag|overload|index?"
msgstr ""

# Groonga::Column#vector?
#: ../../ext/groonga/rb-grn-column.c:618
msgid ""
"_column_ がベクターカラムの場合は +true+ を返し、\n"
"そうでない場合は +false+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-column.c:625
msgid "tag|overload|vector?"
msgstr ""

# Groonga::Column#scalar?
#: ../../ext/groonga/rb-grn-column.c:645
msgid ""
"_column_ がスカラーカラムの場合は +true+ を返し、\n"
"そうでない場合は +false+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-column.c:652
msgid "tag|overload|scalar?"
msgstr ""

# Groonga::Column#indexes
#: ../../ext/groonga/rb-grn-column.c:678
msgid "_operator_ を実行できる _column_ のインデックスを返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-column.c:684
msgid "tag|overload|indexes"
msgstr ""

# @return [Array<index_column>]
#: ../../ext/groonga/rb-grn-column.c:684
msgid "_operator_ を実行できる _column_ のインデックス"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:684
msgid "1.0.9"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:724
#: ../../ext/groonga/rb-grn-table.c:2404
msgid "Renames the table to name."
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-column.c:729
#: ../../ext/groonga/rb-grn-table.c:2410
msgid "tag|overload|rename"
msgstr ""

#: ../../ext/groonga/rb-grn-column.c:729
#: ../../ext/groonga/rb-grn-table.c:2376
msgid "1.3.0"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:26
#: ../../lib/groonga/context.rb:26
msgid ""
"groonga全体に渡る情報を管理するオブジェクト。通常のアプリ\n"
"ケーションでは1つのコンテキストを作成し、それを利用する。\n"
"複数のコンテキストを利用する必要はない。"
msgstr ""

# Groonga::Context
#: ../../ext/groonga/rb-grn-context.c:30
#: ../../lib/groonga/context.rb:30
msgid ""
"デフォルトで使用されるコンテキストは\n"
"{Groonga::Context.default} でアクセスできる。コンテキ\n"
"ストを指定できる箇所でコンテキストの指定を省略したり +nil+\n"
"を指定した場合は {Groonga::Context.default} が利用さ\n"
"れる。"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:36
#: ../../lib/groonga/context.rb:36
msgid ""
"また、デフォルトのコンテキストは必要になると暗黙のうちに\n"
"作成される。そのため、コンテキストを意識することは少ない。"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:39
#: ../../lib/groonga/context.rb:39
msgid ""
"暗黙のうちに作成されるコンテキストにオプションを指定する\n"
"場合は {Groonga::Context.default_options=} を使用\n"
"する。"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:352
msgid ""
"デフォルトのコンテキストを返す。デフォルトのコンテキスト\n"
"が作成されていない場合は暗黙のうちに作成し、それを返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:355
msgid ""
"暗黙のうちにコンテキストを作成する場合は、\n"
"{Groonga::Context.default_options} に設定されているオプ\n"
"ションを利用する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-context.c:362
#: ../../ext/groonga/rb-grn-encoding.c:200
msgid "tag|overload|default"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:382
msgid ""
"デフォルトのコンテキストを設定する。 +nil+ を指定すると、\n"
"デフォルトのコンテキストをリセットする。リセットすると、次\n"
"回 {Groonga::Context.default} を呼び出したときに新しくコ\n"
"ンテキストが作成される。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-context.c:389
#: ../../ext/groonga/rb-grn-encoding.c:212
msgid "tag|overload|default="
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:397
msgid ""
"コンテキストを作成する時に利用するデフォルトのオプション\n"
"を返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:403
msgid "tag|overload|default_options"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:410
msgid ""
"コンテキストを作成する時に利用するデフォルトのオプション\n"
"を設定する。利用可能なオプションは\n"
"{Groonga::Context.new} を参照。"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:416
msgid "tag|overload|default_options="
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:424
msgid "コンテキストを作成する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-context.c:432
#: ../../ext/groonga/rb-grn-database.c:237
#: ../../ext/groonga/rb-grn-snippet.c:82
#: ../../ext/groonga/rb-grn-type.c:72
msgid "tag|overload|new"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:481
msgid ""
"Closes the _context_. Closed _context_ can't be used\n"
"anymore."
msgstr "コンテキストを閉じる。閉じられたコンテキストは使用できなくなる。"

# @overload
#: ../../ext/groonga/rb-grn-context.c:486
#: ../../ext/groonga/rb-grn-database.c:130
#: ../../ext/groonga/rb-grn-object.c:559
msgid "tag|overload|close"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:505
msgid "Returns whether the _context_ is closed by #close or not."
msgstr "コンテキストが#closeによって閉じられているかどうかを返す。"

# @overload
#: ../../ext/groonga/rb-grn-context.c:509
#: ../../ext/groonga/rb-grn-object.c:608
msgid "tag|overload|closed?"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:520
msgid "コンテキストの中身を人に見やすい文字列で返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-context.c:525
#: ../../ext/groonga/rb-grn-expression.c:546
#: ../../ext/groonga/rb-grn-object.c:971
#: ../../ext/groonga/rb-grn-table-key-support.c:170
#: ../../ext/groonga/rb-grn-table.c:196
msgid "tag|overload|inspect"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:560
msgid "コンテキストが使うエンコーディングを返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-context.c:565
#: ../../ext/groonga/rb-grn-encoding-support.c:37
msgid "tag|overload|encoding"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:572
msgid ""
"コンテキストが使うエンコーディングを設定する。エンコーディ\n"
"ングの指定のしかたは {Groonga::Encoding} を参照。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-context.c:577
msgid "tag|overload|encoding="
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:591
msgid "Gets the encoding used by the context as Ruby's encoding object."
msgstr "コンテキストが使っているエンコーディングをRubyのエンコーディングオブジェクトで取得する。"

# @overload
#: ../../ext/groonga/rb-grn-context.c:599
msgid "tag|overload|ruby_encoding"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:599
msgid "2.0.5"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:599
msgid "the encoding used by the context"
msgstr ""

# Groonga::Context#match_escalation_threshold
#: ../../ext/groonga/rb-grn-context.c:613
msgid ""
"このコンテキストを使って検索したときに検索の挙動をエスカレー\n"
"ションする閾値を返します。\n"
"エスカレーションの詳細は\n"
"\"groongaの検索の仕様に関するドキュメント\":http://groonga.org/docs/spec/search.html#match-escalation-threshold\n"
"を参照してください。"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:622
msgid "tag|overload|match_escalation_threshold"
msgstr ""

# Groonga::Context#match_escalation_threshold=
#: ../../ext/groonga/rb-grn-context.c:629
msgid ""
"このコンテキストを使って検索したときに検索の挙動をエスカレー\n"
"ションする閾値を設定します。\n"
"エスカレーションの詳細は\n"
"\"groongaの検索の仕様に関するドキュメント\":http://groonga.org/docs/spec/search.html#match-escalation-threshold\n"
"を参照してください。"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:637
msgid "tag|overload|match_escalation_threshold="
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:649
msgid ""
"groongaがZlibサポート付きでビルドされていれば +true+ 、そう\n"
"でなければ +false+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-context.c:654
msgid "tag|overload|support_zlib?"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:671
msgid ""
"groongaがLZOサポート付きでビルドされていれば +true+ 、そう\n"
"でなければ +false+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-context.c:676
msgid "tag|overload|support_lzo?"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:693
msgid "コンテキストが使うデータベースを返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-context.c:698
msgid "tag|overload|database"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:708
msgid "groongaサーバに接続する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-context.c:718
msgid "tag|overload|connect"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:756
msgid "groongaサーバにクエリ文字列を送信する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-context.c:761
msgid "tag|overload|send"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:761
msgid "ID"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:780
msgid "groongaサーバからクエリ実行結果文字列を受信する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-context.c:784
msgid "tag|overload|receive"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:784
msgid "クエリ実行結果"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:878
msgid "コンテキスト管理下にあるオブジェクトを返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:880
msgid ""
"_name_ として文字列を指定した場合はオブジェクト名でオブジェ\n"
"クトを検索する。"
msgstr ""

#: ../../ext/groonga/rb-grn-context.c:883
msgid ""
"_id_ として数値を指定した場合はオブジェクトIDでオブジェク\n"
"トを検索する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-context.c:891
#: ../../ext/groonga/rb-grn-expression.c:506
#: ../../ext/groonga/rb-grn-object.c:1206
#: ../../ext/groonga/rb-grn-table-key-support.c:430
#: ../../ext/groonga/rb-grn-table.c:1406
msgid "tag|overload|[]"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:26
#: ../../lib/groonga/database.rb:26
msgid "テーブルの集合を管理するためのオブジェクト。"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:28
#: ../../lib/groonga/database.rb:28
msgid ""
"コンテキストに結びつけて使用する。通常、アプリケーション\n"
"毎に1つのコンテキストを利用するので、データベースも1つだ\n"
"け利用する。コンテキストと違い、データベースは暗黙のうち\n"
"に作成されないので明示的に作成する必要がある。"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:125
msgid ""
"_database_ が使用しているリソースを開放する。これ以降 _database_ を\n"
"使うことはできない。"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:151
msgid ""
"新しくデータベースを作成する。\n"
"_options_ にはハッシュでオプションを指定する。"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-database.c:172
msgid ""
"# 一時データベースを作成:\n"
"Groonga::Database.create\n"
"\n"
"# 永続データベースを作成:\n"
"Groonga::Database.create(:path => \"/tmp/db.groonga\")"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:219
msgid ""
"既存のデータベースを開く。ブロックを指定した場合はブロッ\n"
"クに開いたデータベースを渡し、ブロックを抜けるときに閉じ\n"
"る。"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:270
msgid ""
"既存のデータベースを開く。ブロックを指定した場合はブロッ\n"
"クに開いたデータベースを渡し、ブロックを抜けるときに閉じ\n"
"る。 _options_ にはハッシュでオプションを指定する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-database.c:289
msgid "tag|overload|open"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:303
msgid "データベース内のオブジェクトを順番にブロックに渡す。"
msgstr ""

# @example すべてのオブジェクトの名前をキー名の降順で表示する:
#: ../../ext/groonga/rb-grn-database.c:343
msgid ""
"database.each(:order_by => :key, :order => :desc) do |object|\n"
"  p object.name\n"
"end"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-database.c:343
#: ../../ext/groonga/rb-grn-table-cursor.c:236
#: ../../ext/groonga/rb-grn-table.c:930
msgid "tag|overload|each"
msgstr ""

# @example すべてのオブジェクトの名前をID順で表示する:
#: ../../ext/groonga/rb-grn-database.c:343
msgid ""
"database.each(:order_by => :id) do |object|\n"
"  p object.name\n"
"end"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:343
msgid "tag|example|すべてのオブジェクトの名前を表示する:"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:343
msgid "tag|example|すべてのオブジェクトの名前をキー名の降順で表示する:"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:343
msgid "tag|example|すべてのオブジェクトの名前をID順で表示する:"
msgstr ""

# @example すべてのオブジェクトの名前を表示する:
#: ../../ext/groonga/rb-grn-database.c:343
msgid ""
"database.each do |object|\n"
"  p object.name\n"
"end"
msgstr ""

# Groonga::Database#unlock
#: ../../ext/groonga/rb-grn-database.c:405
msgid "_database_ のロックを解除する。"
msgstr ""

# Groonga::Database#lock
#: ../../ext/groonga/rb-grn-database.c:427
msgid ""
"_database_ をロックする。ロックに失敗した場合は\n"
"{Groonga::ResourceDeadlockAvoided} 例外が発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:475
msgid "_database_ のロックを強制的に解除する。"
msgstr ""

# Groonga::Database#locked?
#: ../../ext/groonga/rb-grn-database.c:494
msgid "_database_ がロックされていれば +true+ を返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:511
msgid "_database_ の最終更新時刻を現在時刻にする。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-database.c:515
msgid "tag|overload|touch"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:529
msgid "Defrags all variable size columns in the database."
msgstr "データベースの可変長カラムをすべてデフラグする。"

# @overload
#: ../../ext/groonga/rb-grn-database.c:540
#: ../../ext/groonga/rb-grn-table.c:2376
#: ../../ext/groonga/rb-grn-variable-size-column.c:112
msgid "tag|overload|defrag"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:540
#: ../../ext/groonga/rb-grn-variable-size-column.c:112
msgid "1.2.6"
msgstr ""

#: ../../ext/groonga/rb-grn-database.c:540
#: ../../ext/groonga/rb-grn-table.c:2376
#: ../../ext/groonga/rb-grn-variable-size-column.c:112
msgid "the number of defraged segments"
msgstr "デフラグされたセグメントの数"

# Groonga::DoubleArrayTrieCursor
#: ../../ext/groonga/rb-grn-double-array-trie-cursor.c:24
msgid ""
"{Groonga::DoubleArrayTrie} に登録されているレコードを順番に取り\n"
"出すためのオブジェクト。利用できるメソッドは\n"
"{Groonga::TableCursor} と {Groonga::TableCursor::KeySupport} を\n"
"参照。"
msgstr ""

#: ../../ext/groonga/rb-grn-double-array-trie.c:27
msgid ""
"It's a table that manages records by double array\n"
"trie. It can change key without ID change. This feature\n"
"is supported by only Groonga::DoubleArrayTrie. But it\n"
"requires large spaces rather than other tables. It is\n"
"used by {Groonga::Database} for key management\n"
"internally. It's reasonable choice because number of\n"
"tables and columns in {Groonga::Database} (number of their\n"
"names equals to number of keys to be managed by\n"
"Groonga::DoubleArrayTrie) will be less than number of\n"
"records of user defined tables."
msgstr ""

#: ../../ext/groonga/rb-grn-double-array-trie.c:38
msgid ""
"Groonga::DoubleArrayTrie supports exact match search,\n"
"predictive search and common prefix search like\n"
"{Groonga::PatriciaTrie} . It also supports cursor API."
msgstr ""

#: ../../ext/groonga/rb-grn-double-array-trie.c:46
msgid ""
"It creates a table that manages records by double array trie.\n"
"ブロックを指定すると、そのブロックに生成したテーブルが渡さ\n"
"れ、ブロックを抜けると自動的にテーブルが破棄される。"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-double-array-trie.c:168
msgid ""
"#無名一時テーブルを生成する。\n"
"Groonga::DoubleArrayTrie.create\n"
"\n"
"#無名永続テーブルを生成する。\n"
"Groonga::DoubleArrayTrie.create(:path => \"/tmp/hash.grn\")\n"
"\n"
"#名前付き永続テーブルを生成する。ただし、ファイル名は気に\n"
"#しない。\n"
"Groonga::DoubleArrayTrie.create(:name => \"Bookmarks\",\n"
"                                :persistent => true)\n"
"\n"
"#それぞれのレコードに512バイトの値を格納できる無名一時テー\n"
"#ブルを生成する。\n"
"Groonga::DoubleArrayTrie.create(:value => 512)\n"
"\n"
"#キーとして文字列を使用する無名一時テーブルを生成する。\n"
"Groonga::DoubleArrayTrie.create(:key_type => Groonga::Type::SHORT_TEXT)\n"
"\n"
"#キーとして文字列を使用する無名一時テーブルを生成する。\n"
"#（キーの種類を表すオブジェクトは文字列で指定。）\n"
"Groonga::DoubleArrayTrie.create(:key_type => \"ShortText\")\n"
"\n"
"#キーとしてBookmarksテーブルのレコードを使用す\n"
"#る無名一時テーブルを生成する。\n"
"bookmarks = Groonga::DoubleArrayTrie.create(:name => \"Bookmarks\")\n"
"Groonga::DoubleArrayTrie.create(:key_type => bookmarks)\n"
"\n"
"#キーとしてBookmarksテーブルのレコードを使用す\n"
"#る無名一時テーブルを生成する。\n"
"#（テーブルは文字列で指定。）\n"
"Groonga::DoubleArrayTrie.create(:name => \"Bookmarks\")\n"
"Groonga::DoubleArrayTrie.create(:key_type => \"Bookmarks\")\n"
"\n"
"#全文検索用のトークンをバイグラムで切り出す無名一時テーブ\n"
"#ルを生成する。\n"
"bookmarks = Groonga::DoubleArrayTrie.create(:name => \"Bookmarks\")\n"
"bookmarks.define_column(\"comment\", \"Text\")\n"
"terms = Groonga::DoubleArrayTrie.create(:name => \"Terms\",\n"
"                                        :default_tokenizer => \"TokenBigram\")\n"
"terms.define_index_column(\"content\", bookmarks,\n"
"                          :source => \"Bookmarks.comment\")"
msgstr ""

#: ../../ext/groonga/rb-grn-double-array-trie.c:254
msgid ""
"_key_ にマッチするレコードのIDがキーに入っている\n"
"{Groonga::Hash} を返す。マッチするレコードがない場合は空の\n"
"{fGroonga::Hash} が返る。\n"
"_options_ で +:result+ を指定することにより、そのテーブルにマッ\n"
"チしたレコードIDがキーのレコードを追加することができる。\n"
"+:result+ にテーブルを指定した場合は、そのテーブルが返る。"
msgstr ""

#: ../../ext/groonga/rb-grn-double-array-trie.c:297
#: ../../ext/groonga/rb-grn-hash.c:255
#: ../../ext/groonga/rb-grn-patricia-trie.c:285
msgid "tag|example|複数のキーで検索し、結果を1つのテーブルに集める。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-double-array-trie.c:297
#: ../../ext/groonga/rb-grn-hash.c:255
#: ../../ext/groonga/rb-grn-index-column.c:775
#: ../../ext/groonga/rb-grn-patricia-trie.c:285
msgid "tag|overload|search"
msgstr ""

# @example 複数のキーで検索し、結果を1つのテーブルに集める。
#: ../../ext/groonga/rb-grn-double-array-trie.c:297
#: ../../ext/groonga/rb-grn-hash.c:255
#: ../../ext/groonga/rb-grn-patricia-trie.c:285
msgid ""
"result = nil\n"
"keys = [\"morita\", \"gunyara-kun\", \"yu\"]\n"
"keys.each do |key|\n"
"  result = users.search(key, :result => result)\n"
"end\n"
"result.each do |record|\n"
"  user = record.key\n"
"  p user.key # -> \"morita\"または\"gunyara-kun\"または\"yu\"\n"
"end"
msgstr ""

#: ../../ext/groonga/rb-grn-double-array-trie.c:441
#: ../../ext/groonga/rb-grn-patricia-trie.c:585
msgid ""
"_prefix_ に前方一致検索をするカーソルを生成して返す。ブロッ\n"
"クを指定すると、そのブロックに生成したカーソルが渡され、ブ\n"
"ロックを抜けると自動的にカーソルが破棄される。"
msgstr ""

#: ../../ext/groonga/rb-grn-double-array-trie.c:481
#: ../../ext/groonga/rb-grn-patricia-trie.c:624
msgid "tag|overload|open_prefix_cursor"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding-support.c:26
msgid ""
"オブジェクトにエンコーディング関連の機能を提供するモジュー\n"
"ル。"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding-support.c:33
msgid "オブジェクトのエンコーディングを返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding-support.c:37
msgid "オブジェクトのエンコーディング"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding.c:22
msgid ""
"groongaがサポートしてるエンコーディングが定義されてい\n"
"るモジュール。"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding.c:25
msgid "エンコーディングの指定方法は以下の通り。"
msgstr ""

# Groonga::Encoding
#: ../../ext/groonga/rb-grn-encoding.c:27
msgid ""
"- +nil+ :=\n"
"    コンテキストと関連付けられているオブジェクトの場合（多\n"
"  くの場合）はコンテキストのエンコーディングを使用。"
msgstr ""

# Groonga::Encoding
#: ../../ext/groonga/rb-grn-encoding.c:31
msgid ""
"  それ以外のオブジェクトの場合（コンテキスト自身など）は\n"
"  groongaのビルド時に指定したエンコーディング\n"
"  （ {Groonga::Encoding::DEFAULT} ）を使用 =:"
msgstr ""

# Groonga::Encoding
#: ../../ext/groonga/rb-grn-encoding.c:35
msgid ""
"- +:default+ :=\n"
"    groongaのビルド時に指定したエンコーディングを使用。\n"
"  {Groonga::Encoding::DEFAULT} =:"
msgstr ""

# Groonga::Encoding
#: ../../ext/groonga/rb-grn-encoding.c:39
msgid ""
"- +:none+ :=\n"
"    エンコーディングを指定しない。{Groonga::Encoding::NONE} =:"
msgstr ""

# Groonga::Encoding
#: ../../ext/groonga/rb-grn-encoding.c:42
msgid ""
"- +:euc_jp+ :=\n"
"    EUC-JPを使用。{Groonga::Encoding::EUC_JP} =:"
msgstr ""

# Groonga::Encoding
#: ../../ext/groonga/rb-grn-encoding.c:45
msgid ""
"- @\"euc-jp\"@ :=\n"
"    +:euc_jp+と同じ。 =:"
msgstr ""

# Groonga::Encoding
#: ../../ext/groonga/rb-grn-encoding.c:48
msgid ""
"- +:utf8+ :=\n"
"    UTF-8を使用。{Groonga::Encoding::UTF8} =:"
msgstr ""

# Groonga::Encoding
#: ../../ext/groonga/rb-grn-encoding.c:51
msgid ""
"- @\"utf-8\"@ :=\n"
"    +:utf8+と同じ。 =:"
msgstr ""

# Groonga::Encoding
#: ../../ext/groonga/rb-grn-encoding.c:54
msgid ""
"- +:sjis+ :=\n"
"    Shift_JISを使用。{Groonga::Encoding::SJIS} =:"
msgstr ""

# Groonga::Encoding
#: ../../ext/groonga/rb-grn-encoding.c:57
msgid ""
"- +:shift_jis+ :=\n"
"    +:sjis+と同じ。 =:"
msgstr ""

# Groonga::Encoding
#: ../../ext/groonga/rb-grn-encoding.c:60
msgid ""
"- @\"shift-jis\"@ :=\n"
"    +:sjis+と同じ。 =:"
msgstr ""

# Groonga::Encoding
#: ../../ext/groonga/rb-grn-encoding.c:63
msgid ""
"- +:latin1+ :=\n"
"    Latin-1を使用。{Groonga::Encoding::LATIN1} =:"
msgstr ""

# Groonga::Encoding
#: ../../ext/groonga/rb-grn-encoding.c:66
msgid ""
"- +:koi8r+ :=\n"
"    KOI8-Rを使用。{Groonga::Encoding::KOI8R} =:"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding.c:196
msgid "デフォルトのエンコーディングを返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding.c:200
msgid "デフォルトのエンコーディング"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding.c:207
msgid "デフォルトのエンコーディングを設定する。"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding.c:235
msgid "groongaをビルドしたときに指定したエンコーディング。"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding.c:239
msgid "文字列をバイト列として扱うエンコーディング。"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding.c:243
msgid "EUC-JP"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding.c:247
msgid "ShiftJIS"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding.c:251
msgid "UTF-8"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding.c:255
msgid "Latin-1。ISO-8859-1ではなくWindows-1252(CP1252)。"
msgstr ""

#: ../../ext/groonga/rb-grn-encoding.c:259
msgid "KOI8-R"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:592
msgid "rroongaが発生する例外のスーパークラス。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:599
#: ../../ext/groonga/rb-grn-exception.c:607
msgid "1.2.3"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:600
#: ../../ext/groonga/rb-grn-exception.c:610
msgid ""
"groongaレベルでは破棄されているが、Rubyレベルでは生き\n"
"ているオブジェクトにアクセスすると発生する。"
msgstr ""

# @deprecated
#: ../../ext/groonga/rb-grn-exception.c:617
msgid "Use {Closed} instead since 1.2.3."
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:620
msgid "存在しないカラムにアクセスすると発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:628
msgid "データの終端に達したときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:636
msgid "未知のエラーが発生したときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:644
msgid "操作が許可されていないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:652
msgid "ファイルまたはディレクトリがないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:660
msgid "プロセスがないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:668
msgid "関数の実行中に中断されたときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:676
msgid "入出力エラーが起きたときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:684
msgid "デバイスまたはアドレスがないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:692
msgid "引数の数が多すぎるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:700
msgid "実行ファイルのフォーマットに問題があるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:708
msgid "ファイルディスクリプタに問題があるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:716
msgid "子プロセスがないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:724
msgid "一時的にリソースを利用できないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:733
msgid "領域が足りないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:741
msgid "許可がないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:749
msgid "アドレスに問題があるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:757
msgid "リソースが使用中のときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:765
msgid "ファイルが存在しているときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:773
msgid "リンクに問題があるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:781
msgid "デバイスがないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:789
msgid "ディレクトリではないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:797
msgid "ディレクトリのときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:805
msgid "引数に問題があるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:813
msgid "システム全体で開いているファイルが多すぎるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:821
msgid "開いているファイルが多すぎるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:829
msgid "IO制御に問題があるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:837
msgid "ファイルが大きすぎるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:845
msgid "デバイスに空いている領域がないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:853
msgid "seekに問題があるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:861
msgid "ファイルシステムが読込専用のときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:869
msgid "リンクが多すぎるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:877
msgid "パイプが壊れているときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:885
msgid "対象領域に問題があるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:893
msgid "結果が多すぎるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:901
msgid "リソースのデッドロックを回避したときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:909
msgid "メモリが足りないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:917
msgid "ファイル名が長すぎるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:925
msgid "ロックがないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:933
msgid "関数を実装していないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:941
msgid "ディレクトリが空でないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:949
msgid "バイト列に問題があるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:957
msgid "ソケットが初期化されていないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:965
msgid "操作がブロックする可能性があるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:973
msgid "アドレスを利用できないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:981
msgid "ネットワークに問題があるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:989
msgid "バッファがないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:997
msgid "ソケットが接続済みのときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1005
msgid "ソケットが接続されていないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1013
msgid "ソケットがすでに閉じられているときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1021
msgid "操作がタイムアウトしたときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1029
msgid "接続を拒否されたときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1037
msgid "範囲外のときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1045
msgid "トークナイザーに問題があったときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1053
msgid "ファイルに問題があったときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1061
msgid "フォーマットに問題があったときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1069
msgid "オブジェクトに問題があったときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1077
msgid "シンボリックリンクが多すぎるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1085
msgid "ソケットではないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1093
msgid "操作がサポートされていないときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1101
msgid "アドレスが使用中のときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1109
msgid "ZLibに問題があるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1117
msgid "LZOに問題があるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1125
msgid "スタックオーバーフロー時に発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1133
msgid "構文に問題があるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1141
msgid "再試行回数が最大数に達したときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1149
msgid "互換性のないファイルフォーマットを読み込んだときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1157
msgid "更新操作が許可されていないのに更新操作を行ったときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1165
msgid "offset値が小さすぎるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1173
msgid "offset値が大きすぎるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1181
msgid "limit値が小さすぎるときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1189
msgid "CAS（Compare and Swap）が失敗したときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1196
msgid "未サポートのコマンドバージョンを指定したときに発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-exception.c:1203
#: ../../ext/groonga/rb-grn-exception.c:1210
msgid "2.1.0"
msgstr ""

# Groonga::NormalizerError
#: ../../ext/groonga/rb-grn-exception.c:1204
msgid "It is used when a normalizer causes an error."
msgstr ""

#: ../../ext/groonga/rb-grn-expression.c:26
msgid "検索条件やデータベースへの操作を表現するオブジェクト。"
msgstr ""

#: ../../ext/groonga/rb-grn-expression.c:110
msgid "_expression_ で使用可能な変数を作成する。"
msgstr ""

#: ../../ext/groonga/rb-grn-expression.c:126
msgid "tag|overload|define_variable"
msgstr ""

# Groonga::Expression#append_object
#: ../../ext/groonga/rb-grn-expression.c:167
msgid "_object_ を追加し、 _n_arguments_ 個の引数を取る _operation_ を追加する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-expression.c:176
msgid "tag|overload|append_object"
msgstr ""

#: ../../ext/groonga/rb-grn-expression.c:176
#: ../../ext/groonga/rb-grn-expression.c:213
msgid "self"
msgstr ""

# Groonga::Expression#append_constant
#: ../../ext/groonga/rb-grn-expression.c:205
msgid "_constant_ を追加し、 _n_arguments_ 個の引数を取る _operation_ を追加する。"
msgstr ""

#: ../../ext/groonga/rb-grn-expression.c:213
msgid "tag|overload|append_constant"
msgstr ""

# Groonga::Expression#append_operation
#: ../../ext/groonga/rb-grn-expression.c:245
msgid "_n_arguments_ 個の引数を取る _operation_ を追加する。"
msgstr ""

#: ../../ext/groonga/rb-grn-expression.c:249
msgid "tag|overload|append_operation"
msgstr ""

# Groonga::Expression#parse
#: ../../ext/groonga/rb-grn-expression.c:270
msgid "文字列 _query_ をパースする。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-expression.c:336
msgid "tag|overload|parse"
msgstr ""

#: ../../ext/groonga/rb-grn-expression.c:451
msgid "_expression_ を実行し、実行した結果を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-expression.c:456
#: ../../ext/groonga/rb-grn-snippet.c:222
msgid "tag|overload|execute"
msgstr ""

# Groonga::Expression#compile
#: ../../ext/groonga/rb-grn-expression.c:474
msgid "_expression_ をコンパイルする。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-expression.c:478
msgid "tag|overload|compile"
msgstr ""

# Groonga::Expression#[]
#: ../../ext/groonga/rb-grn-expression.c:497
msgid ""
"_expression_ で使用可能な変数のうち、名前が _name_\n"
"または _offset_ 番目に {Expression#append_object}\n"
"された変数の値を返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-expression.c:541
msgid "_expression_ の中身を人に見やすい文字列で返す。"
msgstr ""

# Groonga::Expression#snippet
#: ../../ext/groonga/rb-grn-expression.c:575
msgid ""
"_expression_ から {Groonga::Snippet} を生成する。 _tags_ には\n"
"キーワードの前後に挿入するタグの配列を以下のような形式で指定\n"
"する。"
msgstr ""

# Groonga::Expression#snippet
#: ../../ext/groonga/rb-grn-expression.c:579
msgid ""
"<pre>\n"
"!!!ruby\n"
"  [\n"
"   [\"キーワード前に挿入する文字列1\", \"キーワード後に挿入する文字列1\"],\n"
"   [\"キーワード前に挿入する文字列2\", \"キーワード後に挿入する文字列2\"],\n"
"   # ...,\n"
"  ]\n"
"</pre>"
msgstr ""

#: ../../ext/groonga/rb-grn-expression.c:588
msgid ""
"もし、1つのスニペットの中に _tags_ で指定したタグより多くの\n"
"キーワードが含まれている場合は、以下のように、また、先頭\n"
"のタグから順番に使われる。"
msgstr ""

# Groonga::Expression#snippet
#: ../../ext/groonga/rb-grn-expression.c:592
msgid ""
"<pre>\n"
"!!!ruby\n"
"  expression.parse(\"Ruby groonga 検索\")\n"
"  tags = [[\"<tag1>\", \"</tag1>\"], [\"<tag2>\", \"</tag2>\"]]\n"
"  snippet = expression.snippet(tags)\n"
"  p snippet.execute(\"Rubyでgroonga使って全文検索、高速検索。\")\n"
"     # => [\"<tag1>Ruby</tag1>で<tag2>groonga</tag2>\"\n"
"     # =>  \"使って全文<tag1>検索</tag1>、高速<tag2>検索</tag2>。\"]\n"
"</pre>"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-expression.c:622
msgid "tag|overload|snippet"
msgstr ""

#: ../../ext/groonga/rb-grn-fix-size-column.c:26
msgid "固定長データ用のカラム。"
msgstr ""

# Groonga::FixSizeColumn#[]
#: ../../ext/groonga/rb-grn-fix-size-column.c:32
msgid "_column_ の _id_ に対応する値を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-fix-size-column.c:37
#: ../../ext/groonga/rb-grn-table.c:501
msgid "tag|overload|column"
msgstr ""

# Groonga::FixSizeColumn#[]=
#: ../../ext/groonga/rb-grn-fix-size-column.c:59
msgid "_column_ の _id_ に対応する値を設定する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-fix-size-column.c:65
#: ../../ext/groonga/rb-grn-index-column.c:163
#: ../../ext/groonga/rb-grn-object.c:1400
#: ../../ext/groonga/rb-grn-table-key-support.c:482
#: ../../lib/groonga/record.rb:98
msgid "tag|overload|[]="
msgstr ""

# Groonga::FixSizeColumn#increment!
#: ../../ext/groonga/rb-grn-fix-size-column.c:121
msgid ""
"_column_ の _id_ に対応する値を _delta_ だけ増加する。 _delta_\n"
"が +nil+ の場合は1増加する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-fix-size-column.c:126
msgid "tag|overload|increment!"
msgstr ""

# Groonga::FixSizeColumn#decrement!
#: ../../ext/groonga/rb-grn-fix-size-column.c:133
msgid ""
"_column_ の _id_ に対応する値を _delta_ だけ減少する。 _delta_\n"
"が +nil+ の場合は1減少する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-fix-size-column.c:138
msgid "tag|overload|decrement!"
msgstr ""

# Groonga::HashCursor
#: ../../ext/groonga/rb-grn-hash-cursor.c:24
msgid ""
"{Groonga::Hash} に登録されているレコードを順番に取り出すため\n"
"のオブジェクト。利用できるメソッドは {Groonga::TableCursor}\n"
"と {Groonga::TableCursorKeySupport} を参照。"
msgstr ""

#: ../../ext/groonga/rb-grn-hash.c:26
msgid ""
"各レコードをキーで管理するテーブル。キーと完全一致するレ\n"
"コードを非常に高速に検索できる。"
msgstr ""

#: ../../ext/groonga/rb-grn-hash.c:33
msgid ""
"各レコードをキーで管理するテーブルを生成する。ブロックを指\n"
"定すると、そのブロックに生成したテーブルが渡され、ブロック\n"
"を抜けると自動的にテーブルが破棄される。"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-hash.c:149
msgid ""
"#無名一時テーブルを生成する。\n"
"Groonga::Hash.create\n"
"\n"
"#無名永続テーブルを生成する。\n"
"Groonga::Hash.create(:path => \"/tmp/hash.grn\")\n"
"\n"
"#名前付き永続テーブルを生成する。ただし、ファイル名は気にしない。\n"
"Groonga::Hash.create(:name => \"Bookmarks\",\n"
"                     :persistent => true)\n"
"\n"
"#それぞれのレコードに512バイトの値を格納できる無名一時テーブルを生成する。\n"
"Groonga::Hash.create(:value => 512)\n"
"\n"
"#キーとして文字列を使用する無名一時テーブルを生成する。\n"
"Groonga::Hash.create(:key_type => Groonga::Type::SHORT_TEXT)\n"
"\n"
"#キーとして文字列を使用する無名一時テーブルを生成する。\n"
"（キーの種類を表すオブジェクトは文字列で指定。）\n"
"Groonga::Hash.create(:key_type => \"ShortText\")\n"
"\n"
"#キーとしてBookmarksテーブルのレコードを使用す\n"
"る無名一時テーブルを生成する。\n"
"bookmarks = Groonga::Hash.create(:name => \"Bookmarks\")\n"
"Groonga::Hash.create(:key_type => bookmarks)\n"
"\n"
"#キーとしてBookmarksテーブルのレコードを使用す\n"
"#る無名一時テーブルを生成する。（テーブルは文字列で指定。）\n"
"Groonga::Hash.create(:name => \"Bookmarks\")\n"
"Groonga::Hash.create(:key_type => \"Bookmarks\")\n"
"\n"
"#全文検索用のトークンをバイグラムで切り出す無名一時テーブ\n"
"#ルを生成する。\n"
"bookmarks = Groonga::Hash.create(:name => \"Bookmarks\")\n"
"bookmarks.define_column(\"comment\", \"Text\")\n"
"terms = Groonga::Hash.create(:name => \"Terms\",\n"
"                             :default_tokenizer => \"TokenBigram\")\n"
"terms.define_index_column(\"content\", bookmarks,\n"
"                          :source => \"Bookmarks.comment\")"
msgstr ""

# Groonga::Hash#search
#: ../../ext/groonga/rb-grn-hash.c:229
msgid ""
"_key_ にマッチするレコードのIDがキーに入っている\n"
"{Groonga::Hash} を返す。マッチするレコードがない場合は空の\n"
"{Groonga::Hash} が返る。"
msgstr ""

#: ../../ext/groonga/rb-grn-hash.c:233
msgid ""
"_options_ で +:result+ を指定することにより、そのテーブルにマッ\n"
"チしたレコードIDがキーのレコードを追加することができる。\n"
"+:result+ にテーブルを指定した場合は、そのテーブルが返る。"
msgstr ""

#: ../../ext/groonga/rb-grn-index-column.c:28
#: ../../lib/groonga/index-column.rb:28
msgid ""
"転置索引エントリを格納するカラム。このカラムを利用するこ\n"
"とにより高速な全文検索を実現できる。"
msgstr ""

#: ../../ext/groonga/rb-grn-index-column.c:31
#: ../../lib/groonga/index-column.rb:31
msgid ""
"テーブルにGroonga::IndexColumnを定義する方法は\n"
"{Groonga::Table#define_index_column} を参照。"
msgstr ""

#: ../../ext/groonga/rb-grn-index-column.c:99
msgid ""
"IDが _id_ であるレコードを高速に全文検索するため転置索引を作\n"
"成する。多くの場合、 {Groonga::Table#define_index_column} で\n"
"+:source+ オプションを指定することにより、自動的に全文検索\n"
"用の索引は更新されるので、明示的にこのメソッドを使うこと\n"
"は少ない。"
msgstr ""

# @example 記事の段落毎に索引を作成する。
#: ../../ext/groonga/rb-grn-index-column.c:163
msgid ""
"articles = Groonga::Array.create(:name => \"<articles>\")\n"
"articles.define_column(\"title\", \"ShortText\")\n"
"articles.define_column(\"content\", \"Text\")\n"
"\n"
"terms = Groonga::Hash.create(:name => \"<terms>\",\n"
"                             :default_tokenizer => \"TokenBigram\")\n"
"content_index = terms.define_index_column(\"content\", articles,\n"
"                                          :with_section => true)\n"
"\n"
"content = <<-EOC\n"
"groonga は組み込み型の全文検索エンジンライブラリです。\n"
"DBMSやスクリプト言語処理系等に組み込むことによって、その\n"
"全文検索機能を強化することができます。また、リレーショナ\n"
"ルモデルに基づくデータストア機能を内包しており、groonga\n"
"単体でも高速なデータストアサーバとして使用することができ\n"
"ます。\n"
"\n"
"■全文検索方式\n"
"転置索引型の全文検索エンジンです。転置索引は圧縮されてファ\n"
"イルに格納され、検索時のディスク読み出し量を小さく、かつ\n"
"局所的に抑えるように設計されています。用途に応じて以下の\n"
"索引タイプを選択できます。\n"
"EOC\n"
"\n"
"groonga = articles.add(:title => \"groonga\", :content => content)\n"
"\n"
"content.split(/\n"
"{2,}/).each_with_index do |sentence, i|\n"
"  content_index[groonga] = {:value => sentence, :section => i + 1}\n"
"end\n"
"\n"
"content_index.search(\"エンジン\").collect do |record|\n"
"  p record.key[\"title\"] # -> \"groonga\"\n"
"end"
msgstr ""

# @deprecated
#: ../../ext/groonga/rb-grn-index-column.c:163
msgid "Since 3.0.2. Use {#add}, {#delete} or {#update} instead."
msgstr ""

#: ../../ext/groonga/rb-grn-index-column.c:163
msgid "tag|example|記事の段落毎に索引を作成する。"
msgstr ""

# Groonga::IndexColumn#add
#: ../../ext/groonga/rb-grn-index-column.c:225
msgid ""
"Adds a record that has @value@ content to inverted index for fast\n"
"fulltext serach. Normally, this method is not used\n"
"explicitly. Inverted index for fulltext search is updated\n"
"automatically by using @:source@ option of\n"
"{Groonga::Table#define_index_column}."
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-index-column.c:292
msgid "tag|example|Adds sentences of an article to index"
msgstr ""

# @example Adds sentences of an article to index
#: ../../ext/groonga/rb-grn-index-column.c:292
msgid ""
"articles = Groonga::Array.create(:name => \"Articles\")\n"
"articles.define_column(\"title\", \"ShortText\")\n"
"articles.define_column(\"content\", \"Text\")\n"
"\n"
"terms = Groonga::Hash.create(:name => \"Terms\",\n"
"                             :key_type => \"ShortText\",\n"
"                             :default_tokenizer => \"TokenBigram\")\n"
"content_index = terms.define_index_column(\"content\", articles,\n"
"                                          :with_position => true,\n"
"                                          :with_section => true)\n"
"\n"
"content = <<-CONTENT\n"
"Groonga is a fast and accurate full text search engine based on\n"
"inverted index. One of the characteristics of groonga is that a\n"
"newly registered document instantly appears in search\n"
"results. Also, groonga allows updates without read locks. These\n"
"characteristics result in superior performance on real-time\n"
"applications.\n"
"\n"
"Groonga is also a column-oriented database management system\n"
"(DBMS). Compared with well-known row-oriented systems, such as\n"
"MySQL and PostgreSQL, column-oriented systems are more suited for\n"
"aggregate queries. Due to this advantage, groonga can cover\n"
"weakness of row-oriented systems.\n"
"\n"
"The basic functions of groonga are provided in a C library. Also,\n"
"libraries for using groonga in other languages, such as Ruby, are\n"
"provided by related projects. In addition, groonga-based storage\n"
"engines are provided for MySQL and PostgreSQL. These libraries\n"
"and storage engines allow any application to use groonga. See\n"
"usage examples.\n"
"CONTENT\n"
"\n"
"groonga = articles.add(:title => \"groonga\", :content => content)\n"
"\n"
"content.split(/\n"
"{2,}/).each_with_index do |sentence, i|\n"
"  content_index.add(groonga, sentence, :section => i + 1)\n"
"end\n"
"\n"
"content_index.search(\"engine\").each do |record|\n"
"  p record.key[\"title\"] # -> \"groonga\"\n"
"end"
msgstr ""

# @since
#: ../../ext/groonga/rb-grn-index-column.c:292
#: ../../ext/groonga/rb-grn-index-column.c:406
#: ../../ext/groonga/rb-grn-index-column.c:513
msgid "3.0.2"
msgstr ""

# Groonga::IndexColumn#delete
#: ../../ext/groonga/rb-grn-index-column.c:334
msgid ""
"Deletes a record that has @value@ content from inverted\n"
"index. Normally, this method is not used explicitly. Inverted index\n"
"for fulltext search is updated automatically by using @:source@\n"
"option of {Groonga::Table#define_index_column}."
msgstr ""

# @example Deletes sentences of an article to index
#: ../../ext/groonga/rb-grn-index-column.c:406
msgid ""
"articles = Groonga::Array.create(:name => \"Articles\")\n"
"articles.define_column(\"title\", \"ShortText\")\n"
"articles.define_column(\"content\", \"Text\")\n"
"\n"
"terms = Groonga::Hash.create(:name => \"Terms\",\n"
"                             :key_type => \"ShortText\",\n"
"                             :default_tokenizer => \"TokenBigram\")\n"
"content_index = terms.define_index_column(\"content\", articles,\n"
"                                          :with_position => true,\n"
"                                          :with_section => true)\n"
"\n"
"content = <<-CONTENT\n"
"Groonga is a fast and accurate full text search engine based on\n"
"inverted index. One of the characteristics of groonga is that a\n"
"newly registered document instantly appears in search\n"
"results. Also, groonga allows updates without read locks. These\n"
"characteristics result in superior performance on real-time\n"
"applications.\n"
"\n"
"Groonga is also a column-oriented database management system\n"
"(DBMS). Compared with well-known row-oriented systems, such as\n"
"MySQL and PostgreSQL, column-oriented systems are more suited for\n"
"aggregate queries. Due to this advantage, groonga can cover\n"
"weakness of row-oriented systems.\n"
"\n"
"The basic functions of groonga are provided in a C library. Also,\n"
"libraries for using groonga in other languages, such as Ruby, are\n"
"provided by related projects. In addition, groonga-based storage\n"
"engines are provided for MySQL and PostgreSQL. These libraries\n"
"and storage engines allow any application to use groonga. See\n"
"usage examples.\n"
"CONTENT\n"
"\n"
"groonga = articles.add(:title => \"groonga\", :content => content)\n"
"\n"
"content.split(/\n"
"{2,}/).each_with_index do |sentence, i|\n"
"  content_index.add(groonga, sentence, :section => i + 1)\n"
"end\n"
"\n"
"content_index.search(\"engine\").each do |record|\n"
"  p record.key[\"title\"] # -> \"groonga\"\n"
"end\n"
"\n"
"content.split(/\n"
"{2,}/).each_with_index do |sentence, i|\n"
"  content_index.delete(groonga, sentence, :section => i + 1)\n"
"end\n"
"\n"
"p content_index.search(\"engine\").size # -> 0"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-index-column.c:406
msgid "tag|example|Deletes sentences of an article to index"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-index-column.c:406
#: ../../ext/groonga/rb-grn-table-cursor.c:185
#: ../../ext/groonga/rb-grn-table-key-support.c:405
#: ../../ext/groonga/rb-grn-table.c:1050
msgid "tag|overload|delete"
msgstr ""

# Groonga::IndexColumn#update
#: ../../ext/groonga/rb-grn-index-column.c:448
msgid ""
"Updates a record that has @new_value@ as new content and\n"
"@old_value@ as old content in inverted index. Normally, this method\n"
"is not used explicitly. Inverted index for fulltext search is\n"
"updated automatically by using @:source@ option of\n"
"{Groonga::Table#define_index_column}."
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-index-column.c:513
msgid "tag|example|Updates sentences of an article in index"
msgstr "記事中の文の索引を更新する"

# @overload
#: ../../ext/groonga/rb-grn-index-column.c:513
msgid "tag|overload|update"
msgstr ""

# @example Updates sentences of an article to index
#: ../../ext/groonga/rb-grn-index-column.c:513
msgid ""
"articles = Groonga::Array.create(:name => \"Articles\")\n"
"articles.define_column(\"title\", \"ShortText\")\n"
"articles.define_column(\"content\", \"Text\")\n"
"\n"
"terms = Groonga::Hash.create(:name => \"Terms\",\n"
"                             :key_type => \"ShortText\",\n"
"                             :default_tokenizer => \"TokenBigram\")\n"
"content_index = terms.define_index_column(\"content\", articles,\n"
"                                          :with_position => true,\n"
"                                          :with_section => true)\n"
"\n"
"old_sentence = <<-SENTENCE\n"
"Groonga is a fast and accurate full text search engine based on\n"
"inverted index. One of the characteristics of groonga is that a\n"
"newly registered document instantly appears in search\n"
"results. Also, groonga allows updates without read locks. These\n"
"characteristics result in superior performance on real-time\n"
"applications.\n"
"SENTENCE\n"
"\n"
"new_sentence = <<-SENTENCE\n"
"Groonga is also a column-oriented database management system\n"
"(DBMS). Compared with well-known row-oriented systems, such as\n"
"MySQL and PostgreSQL, column-oriented systems are more suited for\n"
"aggregate queries. Due to this advantage, groonga can cover\n"
"weakness of row-oriented systems.\n"
"SENTENCE\n"
"\n"
"groonga = articles.add(:title => \"groonga\", :content => old_sentence)\n"
"\n"
"content_index.add(groonga, old_sentence, :section => 1)\n"
"p content_index.search(\"engine\").size # -> 1\n"
"p content_index.search(\"MySQL\").size  # -> 0\n"
"\n"
"groonga[:content] = new_sentence\n"
"content_index.update(groonga, old_sentence, new_sentence, :section => 1)\n"
"p content_index.search(\"engine\").size # -> 0\n"
"p content_index.search(\"MySQL\").size  # -> 1"
msgstr ""

# Groonga::IndexColumn#sources
#: ../../ext/groonga/rb-grn-index-column.c:568
msgid "インデックス対象となっている {Groonga::Column} の配列を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-index-column.c:573
msgid "tag|overload|sources"
msgstr ""

#: ../../ext/groonga/rb-grn-index-column.c:682
msgid "インデックス対象となる複数のカラムを配列で設定する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-index-column.c:687
msgid "tag|overload|sources="
msgstr ""

#: ../../ext/groonga/rb-grn-index-column.c:730
msgid "インデックス対象となるカラムを設定する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-index-column.c:735
msgid "tag|overload|source="
msgstr ""

# Groonga::IndexColumn#search
#: ../../ext/groonga/rb-grn-index-column.c:745
msgid ""
"_object_ から _query_ に対応するオブジェクトを検索し、見つかっ\n"
"たオブジェクトのIDがキーになっている {Groonga::Hash} を返す。"
msgstr ""

# Groonga::IndexColumn#with_section?
#: ../../ext/groonga/rb-grn-index-column.c:830
msgid "_column_ が段落情報も格納する場合は +true+ を返します。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-index-column.c:834
msgid "tag|overload|with_section?"
msgstr ""

# Groonga::IndexColumn#with_weight?
#: ../../ext/groonga/rb-grn-index-column.c:848
msgid "_column_ がウェイト情報も格納する場合は +true+ を返します。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-index-column.c:852
msgid "tag|overload|with_weight?"
msgstr ""

# Groonga::IndexColumn#with_position?
#: ../../ext/groonga/rb-grn-index-column.c:866
msgid "_column_ が位置情報も格納する場合は +true+ を返します。"
msgstr ""

#: ../../ext/groonga/rb-grn-index-column.c:870
msgid "tag|overload|with_position?"
msgstr ""

# Groonga::IndexColumn#open_cursor
#: ../../ext/groonga/rb-grn-index-column.c:884
msgid "Opens cursor to iterate posting in the index column."
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-index-column.c:902
#: ../../ext/groonga/rb-grn-table.c:813
msgid "tag|overload|open_cursor"
msgstr ""

#: ../../ext/groonga/rb-grn-index-column.c:902
msgid "# TODO"
msgstr ""

#: ../../ext/groonga/rb-grn-logger.c:22 ../../lib/groonga/logger.rb:22
msgid "groongaから出力されるログを記録するためのクラス。"
msgstr ""

#: ../../ext/groonga/rb-grn-logger.c:193
msgid "groongaがログを出力する度に呼び出されるブロックを登録する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-logger.c:222
#: ../../ext/groonga/rb-grn-plugin.c:83
#: ../../ext/groonga/rb-grn-query-logger.c:113
msgid "tag|overload|register"
msgstr ""

# Groonga::Logger.unregister
#: ../../ext/groonga/rb-grn-logger.c:282
msgid ""
"Unregister the registered logger. The default logger is used after\n"
"unregistering."
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-logger.c:288
msgid "tag|overload|unregister"
msgstr "登録されたロガーの登録を削除する。削除後はデフォルトのロガーが使われます。"

# Groonga::Logger.reopen
#: ../../ext/groonga/rb-grn-logger.c:323
msgid ""
"Sends reopen request to the current logger. It is useful for\n"
"rotating log file."
msgstr "現在のロガーに再オープンのリクエストを送ります。ログファイルの使い分けに便利です。"

# @overload
#: ../../ext/groonga/rb-grn-logger.c:329
#: ../../ext/groonga/rb-grn-query-logger.c:208
msgid "tag|overload|reopen"
msgstr ""

# Groonga::Logger.path
#: ../../ext/groonga/rb-grn-logger.c:343
msgid "Gets the current log path that is used the default logger."
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-logger.c:350
#: ../../ext/groonga/rb-grn-object.c:1015
#: ../../ext/groonga/rb-grn-query-logger.c:229
msgid "tag|overload|path"
msgstr ""

# @since
#: ../../ext/groonga/rb-grn-logger.c:350
#: ../../ext/groonga/rb-grn-logger.c:384
#: ../../ext/groonga/rb-grn-query-logger.c:229
#: ../../ext/groonga/rb-grn-query-logger.c:264
msgid "3.0.1"
msgstr ""

# Groonga::Logger.path=
#: ../../ext/groonga/rb-grn-logger.c:364
msgid ""
"Sets the log path that is used the default logger. If you're using\n"
"custom logger by {.register}, the log path isn't used. Because it\n"
"is for the default logger."
msgstr ""

# Groonga::Logger.path=
#: ../../ext/groonga/rb-grn-logger.c:368
msgid ""
"If you specify nil as path, logging by the default logger is\n"
"disabled."
msgstr ""

# @example Changes the log path for the default logger
#: ../../ext/groonga/rb-grn-logger.c:384
msgid "Groonga::Logger.path = \"/tmp/groonga.log\""
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-logger.c:384
msgid "tag|example|Disables log by the default logger"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-logger.c:384
msgid "tag|example|Changes the log path for the default logger"
msgstr ""

# @example Disables log by the default logger
#: ../../ext/groonga/rb-grn-logger.c:384
msgid "Groonga::Logger.path = nil"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-logger.c:384
#: ../../ext/groonga/rb-grn-query-logger.c:264
msgid "tag|overload|path="
msgstr ""

#: ../../ext/groonga/rb-grn-normalizer.c:26
msgid "It normalizes string."
msgstr "文字列を正規化するクラスです。"

# Groonga::Normalizer.normalize
#: ../../ext/groonga/rb-grn-normalizer.c:32
msgid "Normalizes the @string@."
msgstr "文字列を正規化します。"

# @example
#: ../../ext/groonga/rb-grn-normalizer.c:42
msgid ""
"# Normalizes \"ABC\" with the default normalizer\n"
"Groonga::Normalizer.normalize(\"AbC\") # => \"abc\""
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-normalizer.c:42
msgid "tag|overload|normalize"
msgstr ""

# Groonga::Object
#: ../../ext/groonga/rb-grn-object.c:20
msgid ""
"rroongaが提供するクラスのベースとなるクラス。\n"
"{Groonga::Context} と {Groonga::Logger} 以外はGroonga::Objectを継\n"
"承している。"
msgstr ""

#: ../../ext/groonga/rb-grn-object.c:554
msgid ""
"_object_ が使用しているリソースを開放する。これ以降 _object_ を\n"
"使うことはできない。"
msgstr ""

#: ../../ext/groonga/rb-grn-object.c:578
msgid "_object_ のリファレンスカウンタを1減少する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-object.c:582
msgid "tag|overload|unlink"
msgstr ""

# Groonga::Object#closed?
# Groonga::TableCursor#closed?
#: ../../ext/groonga/rb-grn-object.c:603
msgid ""
"_object_ が開放済みの場合は +true+ を返し、そうでない場合は\n"
"+false+ を返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-object.c:966
msgid "_object_ の詳細を示した文字列を返す。デバッグ用。"
msgstr ""

# Groonga::Object#id
#: ../../ext/groonga/rb-grn-object.c:985
msgid ""
"_object_ のIDを返す。\n"
"_object_ が {#closed?} なときやIDがない場合は +nil+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-object.c:991
#: ../../ext/groonga/rb-grn-table-key-support.c:276
msgid "tag|overload|id"
msgstr ""

# Groonga::Object#path
#: ../../ext/groonga/rb-grn-object.c:1009
msgid ""
"_object_ に対応するファイルパスを返す。一時 _object_\n"
"なら +nil+ を返す。"
msgstr ""

# Groonga::Object#temporary?
#: ../../ext/groonga/rb-grn-object.c:1034
msgid ""
"_object_ が一時オブジェクトなら +true+ 、永続オブジェクトな\n"
"ら +false+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-object.c:1039
msgid "tag|overload|temporary?"
msgstr ""

# Groonga::Object#persistent?
#: ../../ext/groonga/rb-grn-object.c:1052
msgid ""
"_object_ が永続オブジェクトなら +true+ 、一時オブジェクトな\n"
"ら +false+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-object.c:1057
msgid "tag|overload|persistent?"
msgstr ""

# Groonga::Object#domain
#: ../../ext/groonga/rb-grn-object.c:1070
msgid ""
"_object_ の属している {Groonga::Object} を返す。例えば、\n"
"{Groonga::Column} は {Groonga::Table} を返す。属している\n"
"{Groonga::Object} がない場合は +nil+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-object.c:1077
msgid "tag|overload|domain"
msgstr ""

# Groonga::Object#name
#: ../../ext/groonga/rb-grn-object.c:1106
msgid "_object_ の名前を返す。無名オブジェクトの場合は +nil+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-object.c:1111
msgid "tag|overload|name"
msgstr ""

# Groonga::Object#range
#: ../../ext/groonga/rb-grn-object.c:1138
msgid ""
"_object_ の値がとりうる範囲を示した {Groonga::Object} を返す。\n"
"例えば、 {Groonga::Column} の場合は\n"
"{Groonga::Table#define_column} で指定された {Groonga::Type} や\n"
"{Groonga::Table} を返す。\n"
"範囲が指定されていないオブジェクトの場合は +nil+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-object.c:1147
msgid "tag|overload|range"
msgstr ""

# Groonga::Object#==
#: ../../ext/groonga/rb-grn-object.c:1176
msgid ""
"_object_ と _other_ が同じgroongaのオブジェクトなら +true+ を返\n"
"し、そうでなければ +false+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-object.c:1182
msgid "tag|overload|=="
msgstr ""

# Groonga::Object#[]
#: ../../ext/groonga/rb-grn-object.c:1201
msgid "_object_ の _id_ に対応する値を返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-object.c:1395
msgid ""
"_object_ の _id_ に対応する値を設定する。既存の値は上書きさ\n"
"れる。"
msgstr ""

# Groonga::Object#append
#: ../../ext/groonga/rb-grn-object.c:1407
msgid "_object_ の _id_ に対応する値の最後に _value_ を追加する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-object.c:1411
msgid "tag|overload|append"
msgstr ""

# Groonga::Object#prepend
#: ../../ext/groonga/rb-grn-object.c:1418
msgid "_object_ の _id_ に対応する値の最初に _value_ を追加する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-object.c:1422
msgid "tag|overload|prepend"
msgstr ""

#: ../../ext/groonga/rb-grn-object.c:1429
msgid ""
"_object_ をメモリから解放し、それが永続オブジェクトであっ\n"
"た場合は、該当するファイル一式を削除する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-object.c:1434
msgid "tag|overload|remove"
msgstr ""

#: ../../ext/groonga/rb-grn-operator.c:62
msgid "backward compatibility."
msgstr "後方互換性のために残してあります。"

# Groonga::Operator::BUT
#: ../../ext/groonga/rb-grn-operator.c:83
msgid "REMOVE ME!"
msgstr ""

# Groonga::PatriciaTrieCursor
#: ../../ext/groonga/rb-grn-patricia-trie-cursor.c:24
msgid ""
"{Groonga::PatriciaTrie} に登録されているレコードを順番に取り\n"
"出すためのオブジェクト。利用できるメソッドは\n"
"{Groonga::TableCursor} と {Groonga::TableCursor::KeySupport} を\n"
"参照。"
msgstr ""

#: ../../ext/groonga/rb-grn-patricia-trie.c:29
#: ../../lib/groonga/patricia-trie.rb:29
msgid ""
"各レコードをパトリシアトライで管理するテーブル。ハッシュ\n"
"テーブルに比べて完全一致検索の速度がやや遅いが、前方一致\n"
"検索・共通接頭辞探索などの検索ができる。またカーソルを用\n"
"いてキーの昇降順にレコードを取り出すことができる。"
msgstr ""

#: ../../ext/groonga/rb-grn-patricia-trie.c:38
msgid ""
"各レコードをパトリシアトライで管理するテーブルを生成する。\n"
"ブロックを指定すると、そのブロックに生成したテーブルが渡さ\n"
"れ、ブロックを抜けると自動的にテーブルが破棄される。"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-patricia-trie.c:159
msgid ""
"#無名一時テーブルを生成する。\n"
"Groonga::PatriciaTrie.create\n"
"\n"
"#無名永続テーブルを生成する。\n"
"Groonga::PatriciaTrie.create(:path => \"/tmp/hash.grn\")\n"
"\n"
"#名前付き永続テーブルを生成する。ただし、ファイル名は気に\n"
"#しない。\n"
"Groonga::PatriciaTrie.create(:name => \"Bookmarks\",\n"
"                             :persistent => true)\n"
"\n"
"#それぞれのレコードに512バイトの値を格納できる無名一時テー\n"
"#ブルを生成する。\n"
"Groonga::PatriciaTrie.create(:value => 512)\n"
"\n"
"#キーとして文字列を使用する無名一時テーブルを生成する。\n"
"Groonga::PatriciaTrie.create(:key_type => Groonga::Type::SHORT_TEXT)\n"
"\n"
"#キーとして文字列を使用する無名一時テーブルを生成する。\n"
"#（キーの種類を表すオブジェクトは文字列で指定。）\n"
"Groonga::PatriciaTrie.create(:key_type => \"ShortText\")\n"
"\n"
"#キーとしてBookmarksテーブルのレコードを使用す\n"
"#る無名一時テーブルを生成する。\n"
"bookmarks = Groonga::PatriciaTrie.create(:name => \"Bookmarks\")\n"
"Groonga::PatriciaTrie.create(:key_type => bookmarks)\n"
"\n"
"#キーとしてBookmarksテーブルのレコードを使用す\n"
"#る無名一時テーブルを生成する。\n"
"#（テーブルは文字列で指定。）\n"
"Groonga::PatriciaTrie.create(:name => \"Bookmarks\")\n"
"Groonga::PatriciaTrie.create(:key_type => \"Bookmarks\")\n"
"\n"
"#全文検索用のトークンをバイグラムで切り出す無名一時テーブ\n"
"#ルを生成する。\n"
"bookmarks = Groonga::PatriciaTrie.create(:name => \"Bookmarks\")\n"
"bookmarks.define_column(\"comment\", \"Text\")\n"
"terms = Groonga::PatriciaTrie.create(:name => \"Terms\",\n"
"                                     :default_tokenizer => \"TokenBigram\")\n"
"terms.define_index_column(\"content\", bookmarks,\n"
"                          :source => \"Bookmarks.comment\")"
msgstr ""

# Groonga::PatriciaTrie#search
#: ../../ext/groonga/rb-grn-patricia-trie.c:244
msgid ""
"_key_ にマッチするレコードのIDがキーに入っている {Groonga::Hash} を返す。\n"
"マッチするレコードがない場合は空の {Groonga::Hash} が返る。"
msgstr ""

#: ../../ext/groonga/rb-grn-patricia-trie.c:247
msgid ""
"_options_ で +:result+ を指定することにより、そのテーブルにマッチした\n"
"レコードIDがキーのレコードを追加することができる。\n"
"+:result+ にテーブルを指定した場合は、そのテーブルが返る。"
msgstr ""

#: ../../ext/groonga/rb-grn-patricia-trie.c:334
msgid ""
"_string_ を走査し、 _patricia_trie_ 内に格納されているキーに\n"
"マッチした部分文字列の情報をブロックに渡す。複数のキーが\n"
"マッチする場合は最長一致するキーを優先する。"
msgstr ""

#: ../../ext/groonga/rb-grn-patricia-trie.c:338
msgid ""
"ブロックを指定しない場合は、マッチした部分文字列の情報を\n"
"まとめて配列として返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-patricia-trie.c:372
msgid "tag|overload|scan"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-patricia-trie.c:372
msgid ""
"words = Groonga::PatriciaTrie.create(:key_type => \"ShortText\",\n"
"                                     :key_normalize => true)\n"
"words.add(\"リンク\")\n"
"adventure_of_link = words.add('リンクの冒険')\n"
"words.add('冒険')\n"
"gaxtu = words.add('ｶﾞｯ')\n"
"muteki = words.add('ＭＵＴＥＫＩ')\n"
"\n"
"text = 'muTEki リンクの冒険 ミリバール ガッ'\n"
"words.scan(text).each do |record, word, start, length|\n"
"  p [record.key, word, start, length]\n"
"    # -> [\"ＭＵＴＥＫＩ\", \"muTEki\", 0, 6]\n"
"    # -> [\"リンクの冒険\", \"リンクの冒険\", 7, 18]\n"
"    # -> [\"ｶﾞｯ\", \"ガッ\", 42, 6]\n"
"end\n"
"\n"
"words.scan(text)\n"
"  # -> [[muteki, \"muTEki\", 0, 6],\n"
"  #     [adventure_of_link, \"リンクの冒険\", 7, 18],\n"
"  #     [gaxtu, \"ガッ\", 42, 6]]"
msgstr ""

# Groonga::PatriciaTrie#prefix_search
#: ../../ext/groonga/rb-grn-patricia-trie.c:434
msgid ""
"キーが _prefix_ に前方一致するレコードのIDがキーに入っている\n"
"{Groonga::Hash} を返す。マッチするレコードがない場合は空の\n"
"{Groonga::Hash} が返る。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-patricia-trie.c:441
msgid "tag|overload|prefix_search"
msgstr ""

#: ../../ext/groonga/rb-grn-patricia-trie.c:471
msgid ""
"キーを登録するときに文字列の全suffixも一緒に登録する場合\n"
"は +true+ 、登録しない場合は +false+ を返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-patricia-trie.c:476
msgid "tag|overload|register_key_with_sis?"
msgstr ""

#: ../../ext/groonga/rb-grn-patricia-trie.c:703
msgid ""
"_table_ のキーはカタカナである必要がある。また、エンコーディ\n"
"ングはUTF-8である必要がある。ローマ字やひらがなで _key_ を指\n"
"定しても、 _key_ に対応するカタカナのキーを検索するカーソル\n"
"を生成して返す。ブロックを指定すると、そのブロックに生成し\n"
"たカーソルが渡され、ブロックを抜けると自動的にカーソルが破\n"
"棄される。"
msgstr ""

#: ../../ext/groonga/rb-grn-patricia-trie.c:736
msgid "tag|overload|open_rk_cursor"
msgstr ""

#: ../../ext/groonga/rb-grn-patricia-trie.c:816
msgid ""
"_key_ に近い順にレコードを取り出すカーソルを生成して返す。\n"
"ブロックを指定すると、そのブロックに生成したカーソルが渡され、\n"
"ブロックを抜けると自動的にカーソルが破棄される。"
msgstr ""

#: ../../ext/groonga/rb-grn-patricia-trie.c:845
msgid "tag|overload|open_near_cursor"
msgstr ""

#: ../../ext/groonga/rb-grn-plugin.c:26
msgid ""
"プラグイン。現在のところ、Rubyでgroongaのプラグインを作成\n"
"することはできず、Cで作成された既存のプラグインを登録する\n"
"ことができるだけです。"
msgstr ""

#: ../../ext/groonga/rb-grn-plugin.c:68
msgid "既存のプラグインをデータベースに登録する。"
msgstr ""

#: ../../ext/groonga/rb-grn-plugin.c:125
msgid "Returns the system plugins directory."
msgstr ""

#: ../../ext/groonga/rb-grn-plugin.c:130
msgid "tag|overload|system_plugins_dir"
msgstr ""

#: ../../ext/groonga/rb-grn-plugin.c:137
msgid "Returns the plugin file suffix. (e.g. \".so\", \".dll\" and so on.)"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-plugin.c:142
msgid "tag|overload|suffix"
msgstr ""

# Groonga::QueryLogger
#: ../../ext/groonga/rb-grn-query-logger.c:22
#: ../../lib/groonga/query-logger.rb:22
msgid "A class for logging query log."
msgstr ""

# Groonga::QueryLogger.register
#: ../../ext/groonga/rb-grn-query-logger.c:91
msgid ""
"Registers a query logger or a callback that is called when a\n"
"query log event is emitted."
msgstr ""

# Groonga::QueryLogger.reopen
#: ../../ext/groonga/rb-grn-query-logger.c:202
msgid ""
"Sends reopen request to the current query logger. It is useful for\n"
"rotating log file."
msgstr ""

# @return
#: ../../ext/groonga/rb-grn-query-logger.c:208
msgid "void"
msgstr ""

# Groonga::QueryLogger.path
#: ../../ext/groonga/rb-grn-query-logger.c:222
msgid "Gets the current query log path that is used the default query logger."
msgstr ""

# Groonga::QueryLogger.path=
#: ../../ext/groonga/rb-grn-query-logger.c:243
msgid ""
"Sets the query log path that is used the default query logger. If\n"
"you're using custom query logger by {.register}, the query log path\n"
"isn't used. Because it is for the default query logger."
msgstr ""

# Groonga::QueryLogger.path=
#: ../../ext/groonga/rb-grn-query-logger.c:247
msgid ""
"If you specify nil as path, query logging by the default query\n"
"logger is disabled."
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-query-logger.c:264
msgid "tag|example|Changes the query log path for the default query logger"
msgstr ""

# @example Changes the query log path for the default query logger
#: ../../ext/groonga/rb-grn-query-logger.c:264
msgid "Groonga::QueryLogger.path = \"/tmp/query.log\""
msgstr ""

# @example Disables query log by the default query logger
#: ../../ext/groonga/rb-grn-query-logger.c:264
msgid "Groonga::QueryLogger.path = nil"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-query-logger.c:264
msgid "tag|example|Disables query log by the default query logger"
msgstr ""

#: ../../ext/groonga/rb-grn-snippet.c:26
msgid "スニペット（検索語周辺のテキスト）を生成するためのオブジェクト。"
msgstr ""

#: ../../ext/groonga/rb-grn-snippet.c:58
msgid "スニペットを作成する。"
msgstr ""

# Groonga::Snippet#add_keyword
#: ../../ext/groonga/rb-grn-snippet.c:160
msgid "_keyword_ を追加する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-snippet.c:173
msgid "tag|overload|add_keyword"
msgstr ""

#: ../../ext/groonga/rb-grn-snippet.c:216
msgid "_string_ を走査し、スニペットを作成する。"
msgstr ""

#: ../../ext/groonga/rb-grn-snippet.c:222
msgid "作成されたスニペットの配列"
msgstr ""

#: ../../ext/groonga/rb-grn-table-cursor-key-support.c:26
msgid ""
"主キーを持つテーブル用のカーソルであるGroonga::HashCursor\n"
"とGroonga::PatriciaTrieCursorに主キーの機能を提供するモジ\n"
"ュール。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-cursor-key-support.c:34
msgid "カレントレコードの主キーを返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-cursor-key-support.c:39
msgid "カレントレコードの主キー"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table-cursor-key-support.c:39
#: ../../ext/groonga/rb-grn-table-key-support.c:302
msgid "tag|overload|key"
msgstr ""

#: ../../ext/groonga/rb-grn-table-cursor.c:26
msgid ""
"テーブルに登録されているレコードを順番に取り出すための\n"
"オブジェクト。 {Groonga::Table#open_cursor} で生成できる。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-cursor.c:128
msgid "カレントレコードの値を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table-cursor.c:133
#: ../../ext/groonga/rb-grn-table-key-support.c:616
#: ../../ext/groonga/rb-grn-table.c:1450
#: ../../ext/groonga/rb-grn-variable.c:67
msgid "tag|overload|value"
msgstr ""

#: ../../ext/groonga/rb-grn-table-cursor.c:154
msgid "カレントレコードの値を設定する。既存の値は上書きされる。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table-cursor.c:159
#: ../../ext/groonga/rb-grn-variable.c:91
msgid "tag|overload|value="
msgstr ""

#: ../../ext/groonga/rb-grn-table-cursor.c:181
msgid "カレントレコードを削除する。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-cursor.c:204
msgid "カレントレコードを一件進めてそのレコードを返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table-cursor.c:209
msgid "tag|overload|next"
msgstr ""

#: ../../ext/groonga/rb-grn-table-cursor.c:231
msgid "カーソルの範囲内にあるレコードを順番にブロックに渡す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:26
msgid ""
"主キーを持つテーブルである {Groonga::Hash} と\n"
"{Groonga::PatriciaTrie} に主キーの機能を提供するモジュール。"
msgstr ""

# Groonga::Table::KeySupport#inspect
#: ../../ext/groonga/rb-grn-table-key-support.c:165
msgid "Inspects the table."
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:208
msgid ""
"主キーが _key_ のレコード追加し、追加したレコードを返す。レ\n"
"コードの追加に失敗した場合は +nil+ を返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:211
msgid ""
"すでに同じキーのレコードが存在する場合は追加せずに同じレ\n"
"コードを返す。追加されたかどうかは\n"
"{Groonga::Record#added?} で調べることができる。 +true+ を返\n"
"したら追加されたということを示す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:266
msgid "_key_ を指定しない場合はテーブルのIDを返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:268
msgid ""
"_key_ を指定した場合はテーブルの _key_ に対応するレコードの\n"
"IDを返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:297
msgid "テーブルの _id_ に対応する主キーを返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:333
msgid "テーブルに主キーが _key_ のレコードがあるならtrueを返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table-key-support.c:337
msgid "tag|overload|has_key?"
msgstr ""

# Groonga::Table::KeySupport#[]
#: ../../ext/groonga/rb-grn-table-key-support.c:423
msgid "_table_ の _key_ に対応する {Groonga::Record} を返す。"
msgstr ""

# Groonga::Table#[]
# Groonga::Table::KeySupport#[]
#: ../../ext/groonga/rb-grn-table-key-support.c:425
#: ../../ext/groonga/rb-grn-table.c:1401
msgid "0.9.0から値ではなく {Groonga::Record} を返すようになった。"
msgstr ""

# Groonga::Table::KeySupport#[]=
#: ../../ext/groonga/rb-grn-table-key-support.c:473
msgid ""
"_table_ の _key_ に対応するカラム _column_name_ の値を設定する。\n"
"_key_ に対応するレコードがない場合は新しく作成される。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:476
msgid "0.9.0から値ではなくカラムの値を設定するようになった。"
msgstr ""

# Groonga::Table::KeySupport#set_column_value
#: ../../ext/groonga/rb-grn-table-key-support.c:513
msgid ""
"_table_ の _key_ に対応するカラム _name_ の値を設定する。\n"
"_key_ に対応するレコードがない場合は新しく作成される。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:519
#: ../../ext/groonga/rb-grn-table.c:1760
msgid "tag|overload|set_column_value"
msgstr ""

# Groonga::Table::KeySupport#column_value
#: ../../ext/groonga/rb-grn-table-key-support.c:552
msgid "_table_ の _key_ に対応するカラム _name_ の値を設定する。"
msgstr ""

# Groonga::Table::KeySupport#column_value
#: ../../ext/groonga/rb-grn-table-key-support.c:554
msgid "TODO: _key_ に対応するレコードがない場合は例外？"
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:559
#: ../../ext/groonga/rb-grn-table.c:1559
msgid "tag|overload|column_value"
msgstr ""

# Groonga::Table::KeySupport#value
#: ../../ext/groonga/rb-grn-table-key-support.c:610
msgid "_table_ の _id_ または _key_ に対応する値を返す。"
msgstr ""

# @return
#: ../../ext/groonga/rb-grn-table-key-support.c:616
msgid "_id_ もしくは _key_ に対応する値"
msgstr ""

# Groonga::Table::KeySupport#set_value
#: ../../ext/groonga/rb-grn-table-key-support.c:680
msgid ""
"_table_ の _id_ または _key_ に対応する値を _value_ に設定する。\n"
"既存の値は上書きされる。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table-key-support.c:686
#: ../../ext/groonga/rb-grn-table.c:1508
msgid "tag|overload|set_value"
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:715
msgid "{Groonga::IndexColumn} で使用するトークナイザを返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:720
msgid "tag|overload|default_tokenizer"
msgstr ""

# Groonga::Table::KeySupport#default_tokenizer=
#: ../../ext/groonga/rb-grn-table-key-support.c:740
msgid "{Groonga::IndexColumn} で使用するトークナイザを設定する。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:760
msgid "tag|overload|default_tokenizer="
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-table-key-support.c:760
msgid ""
"# 2-gramを使用。\n"
"table.default_tokenizer = \"TokenBigram\"\n"
"# オブジェクトで指定\n"
"table.default_tokenizer = Groonga::Context.default[\"TokenBigram\"]\n"
"# オブジェクトIDで指定\n"
"table.default_tokenizer = Groonga::Type::BIGRAM\n"
"# N-gram用のトークナイザを使うときはGroonga::IndexColumn\n"
"# には自動的に:with_section => trueが指定される。\n"
"index = table.define_index_column(\"blog_content\", \"Blogs\",\n"
"                                  :source => \"content\")\n"
"p index # -> #<Groonga::IndexColumn ... flags: <WITH_POSITION|...>>\n"
"\n"
"# MeCabを使用\n"
"table.default_tokenizer = \"TokenMecab\""
msgstr ""

# Groonga::Table::KeySupport#normalizer
#: ../../ext/groonga/rb-grn-table-key-support.c:783
msgid "Returns the normalizer that is used by {Groonga::IndexColumn}."
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table-key-support.c:788
msgid "tag|overload|normalizer"
msgstr ""

# Groonga::Table::KeySupport#normalizer=
#: ../../ext/groonga/rb-grn-table-key-support.c:807
msgid "Specifies the normalizer used by {Groonga::IndexColumn}."
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table-key-support.c:826
msgid "tag|overload|normalizer="
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-table-key-support.c:826
msgid ""
"# Uses NFKC normalizer.\n"
"table.normalizer = \"NormalizerNFKC51\"\n"
"# Specifies normalizer object.\n"
"table.normalizer = Groonga::Context[\"NormalizerNFKC51\"]\n"
"# Uses auto normalizer that is a normalizer for backward compatibility.\n"
"table.normalizer = \"TNormalizerAuto\""
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:848
msgid ""
"キーを正規化する場合は +true+ 、正規化しない場合は +false+ を返\n"
"す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table-key-support.c:853
msgid "tag|overload|normalize_key?"
msgstr ""

# Groonga::Table::KeySupport#support_key?
#: ../../ext/groonga/rb-grn-table-key-support.c:863
msgid ""
"テーブルでキーを使えるなら +true+ 、使えないなら +false+ を返\n"
"す。キーを使えないテーブルは {Groonga::Array} だけ。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table-key-support.c:868
#: ../../ext/groonga/rb-grn-table.c:2279
msgid "tag|overload|support_key?"
msgstr ""

# Groonga::Table
#: ../../ext/groonga/rb-grn-table.c:35
#: ../../lib/groonga/pagination.rb:35
msgid ""
"rroongaが提供するテーブルのベースとなるクラス。このクラス\n"
"から {Groonga::Array} , {Groonga::Hash} , {Groonga::PatriciaTrie}\n"
"が継承されている。"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:191
msgid "テーブルの中身を人に見やすい文字列で返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:211
msgid ""
"テーブルに名前が _name_ で型が _value_type_ のカラムを定義\n"
"し、新しく定義されたカラムを返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:237
msgid "tag|overload|define_column"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:346
msgid ""
"テーブルに名前が _name_ で型が _value_type_ のインデックスカ\n"
"ラムを定義し、新しく定義されたカラムを返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:371
msgid "tag|overload|define_index_column"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:495
msgid ""
"テーブルの _name_ に対応するカラムを返す。カラムが存在しな\n"
"い場合は +nil+ を返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:576
msgid ""
"テーブルの全てのカラムを返す。 _name_ が指定された場合はカ\n"
"ラム名の先頭が _name_ で始まるカラムを返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:582
msgid "tag|overload|columns"
msgstr ""

# Groonga::Table#have_column?
#: ../../ext/groonga/rb-grn-table.c:652
msgid "テーブルが _name_ カラムを持っている場合は +true+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:656
msgid "tag|overload|have_column?"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:744
msgid ""
"カーソルを生成して返す。ブロックを指定すると、そのブロッ\n"
"クに生成したカーソルが渡され、ブロックを抜けると自動的に\n"
"カーソルが破棄される。"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:830
msgid ""
"テーブルに登録されている全てのレコードが入っている配列を\n"
"返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:836
msgid "tag|overload|records"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:855
msgid "テーブルに登録されているレコード数を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:860
msgid "tag|overload|size"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:876
msgid "テーブルにレコードが登録されていなければ +true+ を返す。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:880
msgid "tag|overload|empty?"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:896
msgid "テーブルの全レコードを一括して削除する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:900
msgid "tag|overload|truncate"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:918
msgid "テーブルに登録されているレコードを順番にブロックに渡す。"
msgstr ""

# Groonga::Table#each
#: ../../ext/groonga/rb-grn-table.c:920
msgid "_options_ is the same as {#open_cursor} 's one."
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:1067
msgid ""
"テーブルに登録されているレコードを _keys_ で指定されたルー\n"
"ルに従ってソートしたレコードの配列を返す。"
msgstr ""

# Groonga::Table#sort
#: ../../ext/groonga/rb-grn-table.c:1070
msgid ""
"_order_ には +:asc+ ,  +:ascending+ , +:desc+ , +:descending+ の\n"
"いずれを指定する。"
msgstr ""

# Groonga::Table#sort
#: ../../ext/groonga/rb-grn-table.c:1073
msgid ""
"- ハッシュの配列で指定する方法 :=\n"
"オーソドックスな指定方法。"
msgstr ""

# Groonga::Table#sort
#: ../../ext/groonga/rb-grn-table.c:1076
msgid ""
"<pre>\n"
"!!!ruby\n"
"[\n"
" {:key => \"第1ソートキー\", :order => order},\n"
" {:key => \"第2ソートキー\", :order => order},\n"
" # ...,\n"
"]\n"
"</pre>\n"
"=:"
msgstr ""

# Groonga::Table#sort
#: ../../ext/groonga/rb-grn-table.c:1086
msgid ""
"- 配列の配列で指定する方法 :=\n"
"少し簡単化した指定方法。"
msgstr ""

# Groonga::Table#sort
#: ../../ext/groonga/rb-grn-table.c:1089
msgid ""
"<pre>\n"
"!!!ruby\n"
"[\n"
" [\"第1ソートキー\", order],\n"
" [\"第2ソートキー\", order],\n"
" # ...,\n"
"]\n"
"</pre>\n"
"=:"
msgstr ""

# Groonga::Table#sort
#: ../../ext/groonga/rb-grn-table.c:1099
msgid ""
"- ソートキーの配列で指定する方法 :=\n"
"_order_ は常に昇順（ +:ascending+ ）になるが、最も簡単\n"
"に指定できる。"
msgstr ""

# Groonga::Table#sort
#: ../../ext/groonga/rb-grn-table.c:1103
msgid ""
"<pre>\n"
"!!!ruby\n"
"[\"第1ソートキー\", \"第2ソートキー\", \"...\"]\n"
"</pre>\n"
"=:"
msgstr ""

# @note
#: ../../ext/groonga/rb-grn-table.c:1149
msgid ""
"The return value is changed to {Groonga::Array} from\n"
"{::Array} since 2.1.0. If you want to get before 2.1.0 style\n"
"result, use the following code:"
msgstr ""

# @return [Groonga::Array]
#: ../../ext/groonga/rb-grn-table.c:1149
msgid ""
"The sorted result. You can get the\n"
"original record by {#value} method of a record in the sorted\n"
"result. Normally, you doesn't need to get the original record\n"
"because you can access via column name method:\n"
"\n"
"<pre>\n"
"!!!ruby\n"
"names_recommended_access = sorted_users.collect do |sorted_user|\n"
"  sorted_user.name\n"
"end\n"
"names_manually_access = sorted_users.collect do |sorted_user|\n"
"  sorted_user.value.name\n"
"end\n"
"names_recommended_access == names_manually_access # => true\n"
"</pre>\n"
"\n"
"If you want to access the key of the original record, you need to\n"
"get the original record."
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-table.c:1149
msgid "tag|example|Describe incompatible API change"
msgstr ""

# @example Describe incompatible API change
#: ../../ext/groonga/rb-grn-table.c:1149
msgid ""
"result_since_2_1_0 = table.sort([\"sort_key\"])\n"
"result_before_2_1_0 = result_since_2_1_0.collect do |record|\n"
"  record.value\n"
"end"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:1149
msgid "tag|overload|sort"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:1252
msgid ""
"_table_ のレコードを _key1_ , _key2_ , _..._ で指定したキーの\n"
"値でグループ化する。多くの場合、キーにはカラムを指定する。\n"
"カラムはカラム名（文字列）でも指定可能。"
msgstr ""

# @option
#: ../../ext/groonga/rb-grn-table.c:1264
#: ../../lib/groonga/context.rb:135 ../../lib/groonga/pagination.rb:114
#: ../../lib/groonga/patricia-trie.rb:51
#: ../../lib/groonga/record.rb:291 ../../lib/groonga/schema.rb:167
#: ../../lib/groonga/schema.rb:425 ../../lib/groonga/schema.rb:451
#: ../../lib/groonga/schema.rb:505 ../../lib/groonga/schema.rb:517
#: ../../lib/groonga/schema.rb:543 ../../lib/groonga/schema.rb:631
#: ../../lib/groonga/schema.rb:729 ../../lib/groonga/schema.rb:791
#: ../../lib/groonga/schema.rb:806 ../../lib/groonga/schema.rb:822
#: ../../lib/groonga/schema.rb:852 ../../lib/groonga/schema.rb:869
#: ../../lib/groonga/schema.rb:884 ../../lib/groonga/schema.rb:1019
#: ../../lib/groonga/schema.rb:1051
msgid "tag|option|options"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:1264
msgid "tag|overload|group"
msgstr ""

# Groonga::Table#each_sub_record
#: ../../ext/groonga/rb-grn-table.c:1360
msgid "Iterates each sub records for the record _id_."
msgstr ""

# @since
#: ../../ext/groonga/rb-grn-table.c:1369
msgid "3.0.3"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:1369
msgid "tag|overload|each_sub_record"
msgstr ""

# Groonga::Table#[]
#: ../../ext/groonga/rb-grn-table.c:1399
msgid "_table_ の _id_ に対応する {Groonga::Record} を返す。"
msgstr ""

# Groonga::Table#value
#: ../../ext/groonga/rb-grn-table.c:1439
msgid "_table_ の _id_ に対応する値を返す。"
msgstr ""

# Groonga::Table#column_value
# Groonga::Table#set_column_value
# Groonga::Table#set_value
# Groonga::Table#value
#: ../../ext/groonga/rb-grn-table.c:1441
#: ../../ext/groonga/rb-grn-table.c:1501
#: ../../ext/groonga/rb-grn-table.c:1550
msgid ""
"@:id => true@ が指定できるのは利便性のため。\n"
"{Groonga::Array} でも {Groonga::Hash} や {Groonga::PatriciaTrie} と\n"
"同じ引数で動くようになる。"
msgstr ""

# Groonga::Table#set_value
#: ../../ext/groonga/rb-grn-table.c:1498
msgid ""
"_table_ の _id_ に対応する値として _value_ 設定する。既存の値は\n"
"上書きされる。"
msgstr ""

# Groonga::Table#column_value
#: ../../ext/groonga/rb-grn-table.c:1548
msgid "_table_ の _id_ に対応するカラム _name_ の値を返す。"
msgstr ""

# Groonga::Table#set_column_value
#: ../../ext/groonga/rb-grn-table.c:1603
msgid ""
"Sets @value@ as the value of column @name@ of the record that has\n"
"@id@ ID. It overwrites the previous value."
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:1784
msgid "_table_ のロックを解除する。"
msgstr ""

# Groonga::Table#lock
#: ../../ext/groonga/rb-grn-table.c:1830
msgid ""
"_table_ をロックする。ロックに失敗した場合は\n"
"{Groonga::ResourceDeadlockAvoided} 例外が発生する。"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:1833
#: ../../lib/groonga/record.rb:284
msgid "ブロックを指定した場合はブロックを抜けたときにunlockする。"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:1897
msgid "_table_ のロックを強制的に解除する。"
msgstr ""

# Groonga::Table#locked?
#: ../../ext/groonga/rb-grn-table.c:1936
msgid "_table_ がロックされていれば +true+ を返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:1973
msgid ""
"_table_ からブロックまたは文字列で指定した条件にマッチする\n"
"レコードを返す。返されたテーブルには +expression+ という特\n"
"異メソッドがあり、指定した条件を表している\n"
"{Groonga::Expression} を取得できる。\n"
"{Groonga::Expression#snippet} を使うことにより、指定した条件\n"
"用のスニペットを簡単に生成できる。"
msgstr ""

# Groonga::Table#select
#: ../../ext/groonga/rb-grn-table.c:1980
msgid ""
"<pre>\n"
"!!!ruby\n"
"results = table.select do |record|\n"
"  record[\"description\"] =~ \"groonga\"\n"
"end\n"
"snippet = results.expression.snippet([[\"<em>\", \"</em>\"]])\n"
"results.each do |record|\n"
"  puts \"#{record['name']}の説明文の中で「groonga」が含まれる部分\"\n"
"  snippet.execute(record[\"description\"]).each do |snippet|\n"
"    puts \"---\"\n"
"    puts \"#{snippet}...\"\n"
"    puts \"---\"\n"
"  end\n"
"end\n"
"</pre>"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:2221
msgid ""
"キーを比較し、 _table_ には登録されていない _other_ のレコー\n"
"ドを _table_ に作成する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:2227
msgid "tag|overload|union!"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:2235
msgid ""
"キーを比較し、 _other_ には登録されていないレコードを\n"
"_table_ から削除する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:2241
msgid "tag|overload|intersection!"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:2248
msgid ""
"キーを比較し、 _other_ にも登録されているレコードを _table_\n"
"から削除する。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:2254
msgid "tag|overload|difference!"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:2261
msgid ""
"キーを比較し、 _other_ にも登録されている _table_ のレコード\n"
"のスコアを _other_ のスコアと同値にする。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:2267
msgid "tag|overload|merge!"
msgstr ""

# Groonga::Table#support_key?
#: ../../ext/groonga/rb-grn-table.c:2274
msgid ""
"_table_ に主キーが設定されていれば +true+ 、されていなければ\n"
"+false+ を返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:2286
msgid ""
"グループ化したとき、テーブルにグループに含まれるレコード\n"
"数を格納できる場合は +true+ 、格納できない場合は +false+ を返\n"
"す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:2292
msgid "tag|overload|support_sub_records?"
msgstr ""

# Groonga::Table#have_n_sub_records_space?
#: ../../ext/groonga/rb-grn-table.c:2306
msgid ""
"{Groonga::Table#group} returns a table that contains grouped\n"
"records. If grouped table has a space to store the number of\n"
"records for each group, the number of records is stored to\n"
"it. Records for each group are called as \"sub records\"."
msgstr ""

# Groonga::Table#have_n_sub_records_space?
#: ../../ext/groonga/rb-grn-table.c:2311
msgid ""
"Normally, you don't need to care about the space because rroonga\n"
"creates a table with the space automatically. Normal tables\n"
"(persistent tables) don't have the space because they don't need\n"
"it."
msgstr ""

# @return [Boolean]
#: ../../ext/groonga/rb-grn-table.c:2329
msgid ""
"@true@ if the table has a space for storing\n"
"the number of sub records, @false@ otherwise."
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-table.c:2329
msgid "tag|example|A normal table don't have the space"
msgstr ""

# @example A normal table don't have the space
#: ../../ext/groonga/rb-grn-table.c:2329
msgid ""
"users = Groonga[\"Users\"] # A normal table\n"
"users.have_n_sub_records_space? # => false"
msgstr ""

# @example
#: ../../ext/groonga/rb-grn-table.c:2329
msgid "tag|example|A grouped table has the space"
msgstr ""

# @example A grouped table has the space
#: ../../ext/groonga/rb-grn-table.c:2329
msgid ""
"users = Groonga[\"Users\"]                # A normal table\n"
"grouped_users = users.group(\"_key\")     # A grouped table\n"
"grouped_users.have_n_sub_records_space? # => true"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:2329
msgid "tag|overload|have_n_sub_records_space?"
msgstr ""

# Groonga::Table#exist?
#: ../../ext/groonga/rb-grn-table.c:2342
msgid ""
"_table_ に _id_ で指定したIDのレコードが存在する場合は +true+ 、\n"
"存在しない場合は +false+ を返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:2345
msgid ""
"注意: 実行には相応のコストがかかるのであまり頻繁に呼ばな\n"
"いようにして下さい。"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-table.c:2350
msgid "tag|overload|exist?"
msgstr ""

#: ../../ext/groonga/rb-grn-table.c:2364
msgid "Defrags all variable size columns in the table."
msgstr "テーブル内の全ての可変長カラムをデフラグします。"

#: ../../ext/groonga/rb-grn-type.c:26
msgid ""
"groongaのテーブルの主キーや、カラムの値の型のためのオブジェ\n"
"クト。型として使用可能なものはgroongaで予め定義済みの型、ユ\n"
"ーザが定義する型、またはユーザが定義したテーブル。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:52
msgid "名前が _name_ の型を作成する。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:243
msgid ""
"任意のテーブルに属する全てのレコード(Object型はv1.2で\n"
"      サポートされます)。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:246
#: ../../ext/groonga/rb-grn-type.c:248
msgid "bool型。trueとfalse。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:250
msgid "8bit符号付き整数。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:252
msgid "8bit符号なし整数。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:254
msgid "16bit符号付き整数。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:256
msgid "16bit符号なし整数。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:258
msgid "32bit符号付き整数。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:260
msgid "32bit符号なし整数。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:262
msgid "64bit符号付き整数。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:264
msgid "64bit符号なし整数。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:266
msgid "ieee754形式の64bit浮動小数点数。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:268
msgid ""
"1970年1月1日0時0分0秒からの経過マイクロ秒数を64bit符\n"
"      号付き整数で表現した値。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:271
msgid "4Kbyte以下の文字列。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:273
msgid "64Kbyte以下の文字列。"
msgstr ""

#: ../../ext/groonga/rb-grn-type.c:275
msgid "2Gbyte以下の文字列。"
msgstr ""

#: ../../ext/groonga/rb-grn-variable-size-column.c:26
msgid "可変長データ用のカラム。"
msgstr ""

#: ../../ext/groonga/rb-grn-variable-size-column.c:32
msgid ""
"Returns whether the column is compressed or not. If\n"
"@type@ is specified, it returns whether the column is\n"
"compressed by @type@ or not."
msgstr "カラムが圧縮されているかどうかを返します。もし @type@ が指定されているなら、カラムが @type@ によって圧縮されているかどうかを返します。"

#: ../../ext/groonga/rb-grn-variable-size-column.c:42
msgid "1.3.1"
msgstr ""

# @overload
#: ../../ext/groonga/rb-grn-variable-size-column.c:42
msgid "tag|overload|compressed?"
msgstr ""

#: ../../ext/groonga/rb-grn-variable-size-column.c:100
msgid "Defrags the column."
msgstr "カラムをデフラグします。"

#: ../../ext/groonga/rb-grn-variable.c:26
msgid "{Groonga::Expression} で使われる変数。"
msgstr ""

#: ../../ext/groonga/rb-grn-variable.c:62
msgid "変数の値を返す。"
msgstr ""

#: ../../ext/groonga/rb-grn-variable.c:87
msgid "変数の値を _value_ に設定する。"
msgstr ""

#: ../../ext/groonga/rb-groonga.c:3 ../../lib/groonga.rb:3
#: ../../lib/groonga/command.rb:3 ../../lib/groonga/context.rb:3
#: ../../lib/groonga/database.rb:3 ../../lib/groonga/dumper.rb:3
#: ../../lib/groonga/expression-builder-19.rb:3
#: ../../lib/groonga/expression-builder.rb:3
#: ../../lib/groonga/geo-point.rb:3 ../../lib/groonga/grntest-log.rb:3
#: ../../lib/groonga/index-column.rb:3 ../../lib/groonga/logger.rb:3
#: ../../lib/groonga/memory-pool.rb:3 ../../lib/groonga/pagination.rb:3
#: ../../lib/groonga/patricia-trie.rb:3 ../../lib/groonga/posting.rb:3
#: ../../lib/groonga/query-logger.rb:3 ../../lib/groonga/record.rb:3
#: ../../lib/groonga/schema.rb:3 ../../lib/groonga/sub-records.rb:3
#: ../../lib/groonga/view-record.rb:3
msgid "Copyright (C) 2011  Kouhei Sutou <kou@clear-code.com>"
msgstr ""

#: ../../ext/groonga/rb-groonga.c:5 ../../lib/groonga.rb:5
#: ../../lib/groonga/command.rb:5 ../../lib/groonga/context.rb:5
#: ../../lib/groonga/database.rb:5 ../../lib/groonga/dumper.rb:5
#: ../../lib/groonga/expression-builder-19.rb:5
#: ../../lib/groonga/expression-builder.rb:5
#: ../../lib/groonga/geo-point.rb:5 ../../lib/groonga/grntest-log.rb:5
#: ../../lib/groonga/index-column.rb:5 ../../lib/groonga/logger.rb:5
#: ../../lib/groonga/memory-pool.rb:5 ../../lib/groonga/pagination.rb:5
#: ../../lib/groonga/patricia-trie.rb:5 ../../lib/groonga/posting.rb:5
#: ../../lib/groonga/query-logger.rb:5 ../../lib/groonga/record.rb:5
#: ../../lib/groonga/schema.rb:5 ../../lib/groonga/sub-records.rb:5
#: ../../lib/groonga/view-record.rb:5
msgid ""
"This library is free software; you can redistribute it and/or\n"
"modify it under the terms of the GNU Lesser General Public\n"
"License version 2.1 as published by the Free Software Foundation."
msgstr ""

#: ../../ext/groonga/rb-groonga.c:9 ../../lib/groonga.rb:9
#: ../../lib/groonga/command.rb:9 ../../lib/groonga/context.rb:9
#: ../../lib/groonga/database.rb:9 ../../lib/groonga/dumper.rb:9
#: ../../lib/groonga/expression-builder-19.rb:9
#: ../../lib/groonga/expression-builder.rb:9
#: ../../lib/groonga/geo-point.rb:9 ../../lib/groonga/grntest-log.rb:9
#: ../../lib/groonga/index-column.rb:9 ../../lib/groonga/logger.rb:9
#: ../../lib/groonga/memory-pool.rb:9 ../../lib/groonga/pagination.rb:9
#: ../../lib/groonga/patricia-trie.rb:9 ../../lib/groonga/posting.rb:9
#: ../../lib/groonga/query-logger.rb:9 ../../lib/groonga/record.rb:9
#: ../../lib/groonga/schema.rb:9 ../../lib/groonga/sub-records.rb:9
#: ../../lib/groonga/view-record.rb:9
msgid ""
"This library is distributed in the hope that it will be useful,\n"
"but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n"
"Lesser General Public License for more details."
msgstr ""

#: ../../ext/groonga/rb-groonga.c:14 ../../lib/groonga.rb:14
#: ../../lib/groonga/command.rb:14 ../../lib/groonga/context.rb:14
#: ../../lib/groonga/database.rb:14 ../../lib/groonga/dumper.rb:14
#: ../../lib/groonga/expression-builder-19.rb:14
#: ../../lib/groonga/expression-builder.rb:14
#: ../../lib/groonga/geo-point.rb:14
#: ../../lib/groonga/grntest-log.rb:14
#: ../../lib/groonga/index-column.rb:14 ../../lib/groonga/logger.rb:14
#: ../../lib/groonga/memory-pool.rb:14
#: ../../lib/groonga/pagination.rb:14
#: ../../lib/groonga/patricia-trie.rb:14
#: ../../lib/groonga/posting.rb:14 ../../lib/groonga/query-logger.rb:14
#: ../../lib/groonga/record.rb:14 ../../lib/groonga/schema.rb:14
#: ../../lib/groonga/sub-records.rb:14
#: ../../lib/groonga/view-record.rb:14
msgid ""
"You should have received a copy of the GNU Lesser General Public\n"
"License along with this library; if not, write to the Free Software\n"
"Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA"
msgstr ""

#: ../../ext/groonga/rb-groonga.c:73
msgid ""
"利用しているgroongaのバージョン。 @[メジャーバージョ\n"
"ン, マイナーバージョン, マイクロバージョン, タグ]@ の\n"
"配列。"
msgstr ""

#: ../../ext/groonga/rb-groonga.c:93
msgid ""
"ビルドしたgroongaのバージョン。 @[メジャーバージョン,\n"
"マイナーバージョン, マイクロバージョン]@ の配列。"
msgstr ""

#: ../../ext/groonga/rb-groonga.c:104
msgid ""
"rroongaのバージョン。 @[メジャーバージョン, マ\n"
"イナーバージョン, マイクロバージョン]@ の配列。"
msgstr ""

#: ../../lib/groonga.rb:55
msgid ""
"BUILD_VERSIONを\".\"で結合して<tt>\"メジャーバージョン.マ\n"
"イナーバージョン.マイクロバージョン\"</tt>という形式の\n"
"文字列にしたもの。"
msgstr ""

#: ../../lib/groonga.rb:63
msgid "Format version."
msgstr "VERSIONを\".\"で結合して、<tt>”メジャーバージョン.マイナーバージョン.マイクロバージョン”</tt>という形式の文字列にしたもの。もしVERSIONにタグが含まれる場合、<tt>”メジャーバージョン.マイナーバージョン.マイクロバージョン-タグ”</tt>という形式の文字列になる。"

# @return [String]
#: ../../lib/groonga.rb:66
msgid ""
"If Groonga::VERSION has tag,\n"
"@MAJOR.MINOR.MICRO-TAG@. Otherwise, @MAJOR.MINOR.MICRO@."
msgstr ""

#: ../../lib/groonga.rb:74
msgid ""
"BINDINGS_VERSIONを\".\"で結合して<tt>\"メジャーバージョン.マ\n"
"イナーバージョン.マイクロバージョン\"</tt>という形式の文\n"
"字列にしたもの。"
msgstr ""

#: ../../lib/groonga.rb:82
msgid ""
"call-seq:\n"
"  Groonga[name] -> Groonga::Object or nil\n"
"  Groonga[id]   -> Groonga::Object or nil"
msgstr ""

#: ../../lib/groonga.rb:86
msgid "便利メソッド。Groonga::Context.default[name]と同じ。"
msgstr ""

#: ../../lib/groonga/command.rb:31
msgid "Returns the value of attribute arguments"
msgstr ""

#: ../../lib/groonga/command.rb:31
msgid "a new instance of Builder"
msgstr ""

#: ../../lib/groonga/command.rb:31 ../../lib/groonga/grntest-log.rb:133
msgid "Returns the value of attribute command"
msgstr "commandの値を返す"

#: ../../lib/groonga/command.rb:56
msgid "a new instance of Select"
msgstr ""

# @param
# @param [Object]
#: ../../lib/groonga/command.rb:101 ../../lib/groonga/command.rb:163
#: ../../lib/groonga/expression-builder.rb:22
#: ../../lib/groonga/expression-builder.rb:23
#: ../../lib/groonga/expression-builder.rb:24
#: ../../lib/groonga/expression-builder.rb:25
#: ../../lib/groonga/expression-builder.rb:26
#: ../../lib/groonga/expression-builder.rb:27
#: ../../lib/groonga/expression-builder.rb:28
#: ../../lib/groonga/geo-point.rb:86
#: ../../lib/groonga/grntest-log.rb:132
#: ../../lib/groonga/schema.rb:1691 ../../lib/groonga/schema.rb:1757
#: ../../lib/groonga/schema.rb:1789 ../../lib/groonga/schema.rb:1836
msgid "tag|param|value"
msgstr ""

#: ../../lib/groonga/command.rb:101 ../../lib/groonga/command.rb:163
msgid "the value to set the attribute columns to."
msgstr ""

#: ../../lib/groonga/command.rb:101 ../../lib/groonga/command.rb:163
msgid "the current value of columns"
msgstr ""

#: ../../lib/groonga/command.rb:101 ../../lib/groonga/command.rb:163
msgid "the value to set the attribute values to."
msgstr ""

#: ../../lib/groonga/command.rb:101 ../../lib/groonga/command.rb:163
msgid "the current value of values"
msgstr ""

#: ../../lib/groonga/command.rb:101
msgid "the current value of drill_down"
msgstr ""

#: ../../lib/groonga/command.rb:101 ../../lib/groonga/command.rb:163
#: ../../lib/groonga/grntest-log.rb:132
msgid "the newly set value"
msgstr ""

#: ../../lib/groonga/command.rb:101 ../../lib/groonga/command.rb:163
msgid "the current value of n_hits"
msgstr ""

#: ../../lib/groonga/command.rb:101 ../../lib/groonga/command.rb:163
msgid "the value to set the attribute n_hits to."
msgstr ""

# @param [Object] value
#: ../../lib/groonga/command.rb:101
msgid "the value to set the attribute drill_down to."
msgstr ""

#: ../../lib/groonga/command.rb:102 ../../lib/groonga/command.rb:164
msgid "Returns the value of attribute n_hits"
msgstr ""

#: ../../lib/groonga/command.rb:102 ../../lib/groonga/command.rb:164
msgid "Sets the attribute n_hits"
msgstr ""

#: ../../lib/groonga/command.rb:102 ../../lib/groonga/command.rb:164
msgid "Sets the attribute columns"
msgstr ""

#: ../../lib/groonga/command.rb:102
msgid "Returns the value of attribute drill_down"
msgstr ""

#: ../../lib/groonga/command.rb:102 ../../lib/groonga/command.rb:164
msgid "Returns the value of attribute columns"
msgstr ""

# Groonga::Command::Select::Result#drill_down=
#: ../../lib/groonga/command.rb:102
msgid "Sets the attribute drill_down"
msgstr ""

#: ../../lib/groonga/command.rb:102 ../../lib/groonga/command.rb:164
msgid "Returns the value of attribute values"
msgstr ""

#: ../../lib/groonga/command.rb:102 ../../lib/groonga/command.rb:164
msgid "Sets the attribute values"
msgstr ""

#: ../../lib/groonga/context.rb:25
msgid ""
"_path_ にある既存のデータベースを開く。ブロックを指定した場\n"
"合はブロックに開いたデータベースを渡し、ブロックを抜けると\n"
"きに閉じる。"
msgstr ""

# Groonga::Context#create_database
#: ../../lib/groonga/context.rb:34
msgid ""
"This is convenience method. It wraps {Groonga::Database.create}\n"
"for the context."
msgstr ""

# @overload
#: ../../lib/groonga/context.rb:101
msgid "tag|overload|create_database"
msgstr ""

#: ../../lib/groonga/context.rb:111
msgid ""
"groongaのプラグインディレクトリにあるプラグイン _name_\n"
"を登録する。 _path_ を指定するとプラグインディレクトリ以\n"
"外にあるプラグインを登録することができる。"
msgstr ""

#: ../../lib/groonga/context.rb:124
msgid ""
"_table_ から指定した条件にマッチするレコードの値を取得\n"
"する。 _table_ はテーブル名かテーブルオブジェクトを指定\n"
"する。"
msgstr ""

#: ../../lib/groonga/context.rb:128
msgid "_options_ に指定できるキーは以下の通り。"
msgstr ""

#: ../../lib/groonga/context.rb:135 ../../lib/groonga/pagination.rb:114
#: ../../lib/groonga/patricia-trie.rb:51
#: ../../lib/groonga/posting.rb:72 ../../lib/groonga/record.rb:291
#: ../../lib/groonga/schema.rb:167 ../../lib/groonga/schema.rb:425
#: ../../lib/groonga/schema.rb:451 ../../lib/groonga/schema.rb:505
#: ../../lib/groonga/schema.rb:517 ../../lib/groonga/schema.rb:543
#: ../../lib/groonga/schema.rb:631 ../../lib/groonga/schema.rb:729
#: ../../lib/groonga/schema.rb:791 ../../lib/groonga/schema.rb:806
#: ../../lib/groonga/schema.rb:822 ../../lib/groonga/schema.rb:852
#: ../../lib/groonga/schema.rb:869 ../../lib/groonga/schema.rb:884
#: ../../lib/groonga/schema.rb:1019
msgid ""
"The name and value\n"
"pairs. Omitted names are initialized as the default value."
msgstr "オプションを設定するハッシュ。指定されなかったオプションはデフォルト値が使われます。"

#: ../../lib/groonga/context.rb:135 ../../lib/groonga/pagination.rb:114
#: ../../lib/groonga/patricia-trie.rb:51
#: ../../lib/groonga/record.rb:291 ../../lib/groonga/schema.rb:167
#: ../../lib/groonga/schema.rb:425 ../../lib/groonga/schema.rb:451
#: ../../lib/groonga/schema.rb:505 ../../lib/groonga/schema.rb:517
#: ../../lib/groonga/schema.rb:543 ../../lib/groonga/schema.rb:631
#: ../../lib/groonga/schema.rb:729 ../../lib/groonga/schema.rb:791
#: ../../lib/groonga/schema.rb:806 ../../lib/groonga/schema.rb:822
#: ../../lib/groonga/schema.rb:852 ../../lib/groonga/schema.rb:869
#: ../../lib/groonga/schema.rb:884 ../../lib/groonga/schema.rb:1019
#: ../../lib/groonga/schema.rb:1051 ../../lib/groonga/schema.rb:1155
#: ../../lib/groonga/schema.rb:1165 ../../lib/groonga/schema.rb:1194
#: ../../lib/groonga/schema.rb:1204 ../../lib/groonga/schema.rb:1313
#: ../../lib/groonga/schema.rb:1323
msgid "tag|param|options"
msgstr ""

# Groonga::Context#restore
#: ../../lib/groonga/context.rb:141
msgid "Restore commands dumped by \"grndump\" command."
msgstr ""

# Groonga::Context#restore
#: ../../lib/groonga/context.rb:143
msgid "If block is given, a response is yielded."
msgstr ""

# @yieldparam [String]
#: ../../lib/groonga/context.rb:168
msgid "tag|yieldparam|response"
msgstr ""

# @yieldparam [String] response
#: ../../lib/groonga/context.rb:168
msgid "A response for a command."
msgstr ""

# @example
#: ../../lib/groonga/context.rb:168
msgid "tag|example|Restore dumped commands from a File object."
msgstr ""

# @example
#: ../../lib/groonga/context.rb:168
msgid ""
"dumped_commands = File.read(\"dump.grn\")\n"
"context.restore(dumped_commands)"
msgstr ""

# @param [String]
#: ../../lib/groonga/context.rb:168
msgid "tag|param|dumped_commands"
msgstr ""

# @example
#: ../../lib/groonga/context.rb:168
msgid "tag|example|Restore dumped commands as a String object."
msgstr ""

# @yieldparam [String] command
#: ../../lib/groonga/context.rb:168
msgid "A sent command."
msgstr ""

# @yieldparam [String]
#: ../../lib/groonga/context.rb:168
msgid "tag|yieldparam|command"
msgstr ""

# @example
#: ../../lib/groonga/context.rb:168
msgid "tag|example|Restore dumped commands and reports result."
msgstr ""

# @param [#each_line] dumped_commands
#: ../../lib/groonga/context.rb:168
msgid ""
"commands dumped by grndump.\n"
"It can be a String object or any objects like an IO object such\n"
"as a File object. It should have #each_line that iterates a\n"
"line."
msgstr ""

# @example Restore dumped commands from a File object.
#: ../../lib/groonga/context.rb:168
msgid ""
"File.open(\"dump.grn\") do |file|\n"
"  context.restore(file)\n"
"end"
msgstr ""

# @example Restore dumped commands and reports result.
#: ../../lib/groonga/context.rb:168
msgid ""
"dumped_commands = File.read(\"dump.grn\")\n"
"context.restore(dumped_commands) do |command, response|\n"
"  puts(\"#{command} -> #{response}\")\n"
"end"
msgstr ""

# @yield [command, response]
#: ../../lib/groonga/context.rb:168
msgid "Yields a sent command and its response if block is given."
msgstr ""

# Groonga::Context#push_memory_pool
#: ../../lib/groonga/context.rb:197
msgid ""
"Pushes a new memory pool to the context. Temporary objects that\n"
"are created between pushing a new memory pool and popping the\n"
"new memory pool are closed automatically when popping the new\n"
"memory pool."
msgstr ""

# Groonga::Context#push_memory_pool
#: ../../lib/groonga/context.rb:202
msgid ""
"It is useful for request and response style applications. These\n"
"style applications can close temporary objects between a request\n"
"and resopnse pair. There are some merits for closing temporary\n"
"objects explicilty rather than closing implicitly by GC:"
msgstr ""

# Groonga::Context#push_memory_pool
#: ../../lib/groonga/context.rb:207
msgid ""
"  * Less memory consumption\n"
"  * Faster"
msgstr ""

# Groonga::Context#push_memory_pool
#: ../../lib/groonga/context.rb:210
msgid ""
"The \"less memory consumption\" merit is caused by temporary\n"
"objects are closed each request and response pair. The max\n"
"memory consumption in these applications is the same as the max\n"
"memory consumption in a request and response pair. If temporary\n"
"objects are closed by GC, the max memory consumption in these\n"
"applications is the same as the max memory consumption between\n"
"the current GC and the next GC. These applications process many\n"
"request and response pairs during two GCs."
msgstr ""

# Groonga::Context#push_memory_pool
#: ../../lib/groonga/context.rb:219
msgid ""
"The \"faster\" merit is caused by reducing GC. You can reduce GC,\n"
"your application run faster because GC is a heavy process. You\n"
"can reduce GC because memory consumption is reduced."
msgstr ""

# Groonga::Context#push_memory_pool
#: ../../lib/groonga/context.rb:223
msgid "You can nest {#push_memory_pool} and {#pop_memory_pool} pair."
msgstr ""

# @example Nesting push and pop pair
#: ../../lib/groonga/context.rb:285
msgid ""
"adults = nil\n"
"context.push_memory_pool do\n"
"  users = context[\"Users\"]\n"
"  adults = users.select do |user|\n"
"    user.age >= 20\n"
"  end\n"
"  grouped_adults = nil\n"
"  context.push_memory_pool do\n"
"    grouped_adults = adults.group([\"hobby\"])\n"
"    p grouped_adults.temporary? # => true\n"
"    p grouped_adults.closed?    # => false\n"
"  end\n"
"  p grouped_adults.closed?      # => true\n"
"  p adults.temporary?           # => true\n"
"  p adults.closed?              # => false\n"
"end\n"
"p adults.closed?                # => true"
msgstr ""

# @overload
#: ../../lib/groonga/context.rb:285
msgid "tag|overload|push_memory_pool"
msgstr ""

# @example Pushes a new memory pool without block
#: ../../lib/groonga/context.rb:285
msgid ""
"adults = nil\n"
"context.push_memory_pool\n"
"users = context[\"Users\"]\n"
"adults = users.select do |user|\n"
"  user.age >= 20\n"
"end\n"
"p adults.temporary? # => true\n"
"p adults.closed?    # => false\n"
"context.pop_memory_pool\n"
"p adults.closed?    # => true"
msgstr ""

# @since
#: ../../lib/groonga/context.rb:285 ../../lib/groonga/context.rb:304
msgid "3.0.5"
msgstr ""

# @example Pushes a new memory pool with block
#: ../../lib/groonga/context.rb:285
msgid ""
"adults = nil\n"
"context.push_memory_pool do\n"
"  users = context[\"Users\"]\n"
"  adults = users.select do |user|\n"
"    user.age >= 20\n"
"  end\n"
"  p adults.temporary? # => true\n"
"  p adults.closed?    # => false\n"
"end\n"
"p adults.closed?      # => true"
msgstr ""

# @example
#: ../../lib/groonga/context.rb:285
msgid "tag|example|Pushes a new memory pool with block"
msgstr ""

# @example
#: ../../lib/groonga/context.rb:285
msgid "tag|example|Nesting push and pop pair"
msgstr ""

# @example
#: ../../lib/groonga/context.rb:285
msgid "tag|example|Pushes a new memory pool without block"
msgstr ""

# Groonga::Context#pop_memory_pool
#: ../../lib/groonga/context.rb:298
msgid "Pops the pushed memory pool."
msgstr ""

# @see
#: ../../lib/groonga/context.rb:304
msgid "tag|see|push_memory_pool"
msgstr ""

# @api
#: ../../lib/groonga/context.rb:310 ../../lib/groonga/memory-pool.rb:31
msgid "private"
msgstr ""

#: ../../lib/groonga/database.rb:21
msgid "tables defined in the database."
msgstr ""

#: ../../lib/groonga/dumper.rb:33
msgid "データベースの内容をgrn式形式の文字列として出力するクラス。"
msgstr ""

# Groonga::DatabaseDumper.dump
#: ../../lib/groonga/dumper.rb:36
msgid "Dump database"
msgstr ""

# Groonga::DatabaseDumper.dump
#: ../../lib/groonga/dumper.rb:38
msgid "TODO: document options paramter"
msgstr ""

#: ../../lib/groonga/dumper.rb:44
msgid "a new instance of DatabaseDumper"
msgstr ""

#: ../../lib/groonga/dumper.rb:145
msgid ""
"スキーマの内容をRubyスクリプトまたはgrn式形式の文字列と\n"
"して出力するクラス。"
msgstr ""

#: ../../lib/groonga/dumper.rb:147
msgid "a new instance of SchemaDumper"
msgstr ""

#: ../../lib/groonga/dumper.rb:218
msgid "a new instance of BaseSyntax"
msgstr ""

#: ../../lib/groonga/dumper.rb:635
msgid "a new instance of TableDumper"
msgstr ""

#: ../../lib/groonga/expression-builder-19.rb:28
msgid "a new instance of NotEqualExpressionBuilder"
msgstr ""

# @param value
#: ../../lib/groonga/expression-builder.rb:22
msgid "the value to set the attribute query to."
msgstr ""

#: ../../lib/groonga/expression-builder.rb:22
#: ../../lib/groonga/schema.rb:73 ../../lib/groonga/schema.rb:96
#: ../../lib/groonga/schema.rb:105
msgid "Returns the value of attribute table"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:23
msgid "Sets the attribute query"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:23
msgid "Returns the value of attribute query"
msgstr ""

# @param value
#: ../../lib/groonga/expression-builder.rb:23
msgid "the value to set the attribute syntax to."
msgstr ""

# @param value
#: ../../lib/groonga/expression-builder.rb:24
msgid "the value to set the attribute allow_pragma to."
msgstr ""

#: ../../lib/groonga/expression-builder.rb:24
msgid "Sets the attribute syntax"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:24
msgid "Returns the value of attribute syntax"
msgstr ""

# Groonga::ExpressionBuildable#allow_pragma=
#: ../../lib/groonga/expression-builder.rb:25
msgid "Sets the attribute allow_pragma"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:25
msgid "Returns the value of attribute allow_pragma"
msgstr ""

# @param value
#: ../../lib/groonga/expression-builder.rb:25
msgid "the value to set the attribute allow_column to."
msgstr ""

# @param value
#: ../../lib/groonga/expression-builder.rb:26
msgid "the value to set the attribute allow_update to."
msgstr ""

# Groonga::ExpressionBuildable#allow_column=
#: ../../lib/groonga/expression-builder.rb:26
msgid "Sets the attribute allow_column"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:26
msgid "Returns the value of attribute allow_column"
msgstr ""

# @param value
#: ../../lib/groonga/expression-builder.rb:27
msgid "the value to set the attribute allow_leading_not to."
msgstr ""

#: ../../lib/groonga/expression-builder.rb:27
msgid "Returns the value of attribute allow_update"
msgstr "緯度の値を返す。"

# Groonga::ExpressionBuildable#allow_update=
#: ../../lib/groonga/expression-builder.rb:27
msgid "Sets the attribute allow_update"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:28
msgid "Returns the value of attribute allow_leading_not"
msgstr ""

# @param value
#: ../../lib/groonga/expression-builder.rb:28
msgid "the value to set the attribute default_column to."
msgstr ""

# Groonga::ExpressionBuildable#allow_leading_not=
#: ../../lib/groonga/expression-builder.rb:28
msgid "Sets the attribute allow_leading_not"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:29
msgid "Returns the value of attribute default_column"
msgstr ""

# Groonga::ExpressionBuildable#default_column=
#: ../../lib/groonga/expression-builder.rb:29
msgid "Sets the attribute default_column"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:103
msgid "a new instance of ExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:118
msgid "a new instance of SetExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:135
msgid "a new instance of AndExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:142
msgid "a new instance of OrExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:149
msgid "a new instance of ColumnValueExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:288
msgid "a new instance of MatchTargetExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:309
msgid "a new instance of BinaryExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:325
msgid "a new instance of EqualExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:332
msgid "a new instance of MatchExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:339
msgid "a new instance of LessExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:346
msgid "a new instance of LessEqualExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:353
msgid "a new instance of GreaterExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:360
msgid "a new instance of GreaterEqualExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:367
msgid "a new instance of PlusExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:374
msgid "a new instance of MinusExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:381
msgid "a new instance of StarExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:388
msgid "a new instance of SlashExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:395
msgid "a new instance of ModExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:402
msgid "a new instance of SubExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:415
msgid "a new instance of PrefixSearchExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:422
msgid "a new instance of SuffixSearchExpressionBuilder"
msgstr ""

# @return [SimilarSearchExpressionBuilder]
#: ../../lib/groonga/expression-builder.rb:429
msgid "a new instance of SimilarSearchExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:436
msgid "a new instance of TermExtractExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:446
msgid "a new instance of RecordExpressionBuilder"
msgstr ""

#: ../../lib/groonga/expression-builder.rb:547
msgid "a new instance of ColumnExpressionBuilder"
msgstr ""

#: ../../lib/groonga/geo-point.rb:86
msgid "the value to set the attribute latitude to."
msgstr "緯度の値を返す。"

#: ../../lib/groonga/geo-point.rb:86
msgid "the value to set the attribute longitude to."
msgstr "経度の値を返す。"

#: ../../lib/groonga/geo-point.rb:87
msgid "Sets the attribute latitude"
msgstr "緯度の値を返す。"

#: ../../lib/groonga/geo-point.rb:87
msgid "Sets the attribute longitude"
msgstr "経度の値を返す。"

#: ../../lib/groonga/geo-point.rb:87
msgid "Returns the value of attribute longitude"
msgstr "経度の値を返す。"

#: ../../lib/groonga/geo-point.rb:87
msgid "Returns the value of attribute latitude"
msgstr "緯度の値を返す。"

# Groonga::GeoPoint#initialize
# Groonga::TokyoGeoPoint#to_wgs84
#: ../../lib/groonga/geo-point.rb:88 ../../lib/groonga/geo-point.rb:157
msgid "TODO: write document"
msgstr ""

#: ../../lib/groonga/geo-point.rb:90
msgid "a new instance of GeoPoint"
msgstr ""

# @overload
#: ../../lib/groonga/geo-point.rb:90
msgid "tag|overload|initialize"
msgstr ""

#: ../../lib/groonga/geo-point.rb:159
msgid ""
"TokyoGeoPoint <-> WGS84GeoPoint is based on\n"
"http://www.jalan.net/jw/jwp0200/jww0203.do"
msgstr ""

# Groonga::TokyoGeoPoint#to_wgs84
#: ../../lib/groonga/geo-point.rb:162
msgid ""
"  jx: longitude in degree in Tokyo Geodetic System.\n"
"  jy: latitude in degree in Tokyo Geodetic System.\n"
"  wx: longitude in degree in WGS 84.\n"
"  wy: latitude in degree in WGS 84."
msgstr ""

# Groonga::TokyoGeoPoint#to_wgs84
#: ../../lib/groonga/geo-point.rb:167
msgid ""
"  jy = wy * 1.000106961 - wx * 0.000017467 - 0.004602017\n"
"  jx = wx * 1.000083049 + wy * 0.000046047 - 0.010041046"
msgstr ""

# Groonga::TokyoGeoPoint#to_wgs84
#: ../../lib/groonga/geo-point.rb:170
msgid ""
"  wy = jy - jy * 0.00010695 + jx * 0.000017464 + 0.0046017\n"
"  wx = jx - jy * 0.000046038 - jx * 0.000083043 + 0.010040"
msgstr ""

#: ../../lib/groonga/geo-point.rb:194
msgid "tag|see|TokyoGeoPoint#to_wgs84"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:26
msgid "a new instance of EnvironmentEvent"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:127
msgid "a new instance of JobsStartEvent"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:127
msgid "Returns the value of attribute jobs"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:132
msgid "the value to set the attribute id to."
msgstr ""

# @return [Object]
#: ../../lib/groonga/grntest-log.rb:132
msgid "the current value of id"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:132
msgid "the value to set the attribute relative_end_time to."
msgstr ""

#: ../../lib/groonga/grntest-log.rb:132
msgid "the value to set the attribute command to."
msgstr ""

# @return [Object]
#: ../../lib/groonga/grntest-log.rb:132
msgid "the current value of relative_start_time"
msgstr ""

# @return [Object]
#: ../../lib/groonga/grntest-log.rb:132
msgid "the current value of relative_end_time"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:132
msgid "the value to set the attribute result to."
msgstr ""

# @return [Object]
#: ../../lib/groonga/grntest-log.rb:132
msgid "the current value of result"
msgstr ""

# @return [Object]
#: ../../lib/groonga/grntest-log.rb:132
msgid "the current value of command"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:132
msgid "the value to set the attribute relative_start_time to."
msgstr "緯度の値を返す。"

#: ../../lib/groonga/grntest-log.rb:133
msgid "Sets the attribute relative_start_time"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:133
msgid "Returns the value of attribute relative_start_time"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:133
msgid "Returns the value of attribute relative_end_time"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:133
msgid "Returns the value of attribute id"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:133
msgid "Sets the attribute result"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:133
msgid "Sets the attribute id"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:133
msgid "Returns the value of attribute result"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:133
msgid "Sets the attribute relative_end_time"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:133
msgid "Sets the attribute command"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:142
msgid "Returns the value of attribute n_queries"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:142
msgid "a new instance of JobSummaryEvent"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:142
msgid "Returns the value of attribute job"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:142
msgid "Returns the value of attribute latency"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:142
msgid "Returns the value of attribute elapsed"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:142
msgid "Returns the value of attribute qps"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:142
msgid "Returns the value of attribute min"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:142
msgid "Returns the value of attribute max"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:155
msgid "a new instance of JobsEndEvent"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:155
msgid "Returns the value of attribute summaries"
msgstr ""

#: ../../lib/groonga/grntest-log.rb:161
msgid "a new instance of Parser"
msgstr ""

#: ../../lib/groonga/index-column.rb:30
msgid "a new instance of IndexColumnDumper"
msgstr ""

# @deprecated
#: ../../lib/groonga/logger.rb:48
msgid ""
"since 3.0.1. Use {Groonga::Logger.path}\n"
"instead."
msgstr ""

# @deprecated
#: ../../lib/groonga/logger.rb:54
msgid ""
"since 3.0.1. Use {Groonga::Logger.path=}\n"
"instead."
msgstr ""

# @deprecated
#: ../../lib/groonga/logger.rb:60
msgid ""
"since 3.0.1. Use {Groonga::QueryLogger.path}\n"
"instead."
msgstr ""

# @deprecated
#: ../../lib/groonga/logger.rb:66
msgid ""
"since 3.0.1. Use {Groonga::QueryLogger.path=}\n"
"instead."
msgstr ""

# @return [FileLogger]
#: ../../lib/groonga/logger.rb:110
msgid "a new instance of FileLogger"
msgstr ""

# @return [CallbackLogger]
#: ../../lib/groonga/logger.rb:145
msgid "a new instance of CallbackLogger"
msgstr ""

# @return [MemoryPool]
#: ../../lib/groonga/memory-pool.rb:21
msgid "a new instance of MemoryPool"
msgstr ""

#: ../../lib/groonga/pagination.rb:24
#: ../../lib/groonga/pagination.rb:40
msgid "指定したページ番号。"
msgstr ""

#: ../../lib/groonga/pagination.rb:26
#: ../../lib/groonga/pagination.rb:42
msgid "有効なページ。Range。"
msgstr ""

#: ../../lib/groonga/pagination.rb:27
msgid "a new instance of TooSmallPage"
msgstr ""

#: ../../lib/groonga/pagination.rb:43
msgid "a new instance of TooLargePage"
msgstr ""

#: ../../lib/groonga/pagination.rb:56
msgid "指定したページサイズ。"
msgstr ""

#: ../../lib/groonga/pagination.rb:58
msgid "有効なページサイズ。Range。"
msgstr ""

#: ../../lib/groonga/pagination.rb:59
msgid "a new instance of TooSmallPageSize"
msgstr ""

#: ../../lib/groonga/pagination.rb:70
msgid ""
"ページネーション用便利メソッド。ページネーションをした\n"
"い場合は {#sort} よりも #paginate の方が便利。"
msgstr ""

#: ../../lib/groonga/pagination.rb:73
msgid ""
"説明文（descriptionカラム）を「Ruby」で全文検索し、\n"
"検索結果をスコアの高い順にソートして、10項目ずつ表示する\n"
"場合は以下のようになる。"
msgstr ""

# Groonga::Table#paginate
#: ../../lib/groonga/pagination.rb:77
msgid ""
"<pre>\n"
"!!!ruby\n"
"query = \"Ruby\"\n"
"entries = Groonga[\"entries\"]\n"
"selected_entries = entries.select do |record|\n"
"  entry.description =~ query\n"
"end\n"
"paged_entries = selected_entries.paginate([[\"_score\", :desc]],\n"
"                                          :page => 1,\n"
"                                          :size => 10)\n"
"</pre>"
msgstr ""

# Groonga::Table#paginate
#: ../../lib/groonga/pagination.rb:89
msgid ""
"{#sort} と違い、返される {Table} オブジェクトには\n"
"{Pagination} モジュールがextendされており、\n"
"以下のようにページネーション情報を取得できる。"
msgstr ""

# Groonga::Table#paginate
#: ../../lib/groonga/pagination.rb:93
msgid ""
"<pre>\n"
"!!!ruby\n"
"puts \"#{paged_entries.n_records}件ヒット\"\n"
"puts \"#{paged_entries.start_offset}-#{paged_entries.end_offset}件を表示\"\n"
"paged_entries.each do |entry|\n"
"  puts entry.description\n"
"end\n"
"</pre>"
msgstr ""

# Groonga::Table#paginate
#: ../../lib/groonga/pagination.rb:102
msgid ""
"_sort_keys_ には ソートに用いる情報を指定する。\n"
"指定の仕方は {#sort} と同様なので、詳細は {#sort} を参照。"
msgstr ""

#: ../../lib/groonga/pagination.rb:105 ../../lib/groonga/schema.rb:189
msgid "_options_ に指定可能な値は以下の通り。"
msgstr ""

#: ../../lib/groonga/pagination.rb:140
msgid "ページネーション機能を追加するモジュール。"
msgstr ""

#: ../../lib/groonga/pagination.rb:142
msgid ""
"ページ番号やレコードが何番目かは0ベースではなく1ベースで\n"
"あることに注意すること。"
msgstr ""

#: ../../lib/groonga/pagination.rb:145
msgid "現在のページ番号。"
msgstr ""

#: ../../lib/groonga/pagination.rb:147
msgid "1ページあたりのレコード数。"
msgstr ""

#: ../../lib/groonga/pagination.rb:149
msgid "全ページ数。"
msgstr ""

#: ../../lib/groonga/pagination.rb:151
msgid "全レコード数。"
msgstr ""

#: ../../lib/groonga/pagination.rb:154
msgid "2ページ以上ある場合は +true+ を返す。"
msgstr ""

#: ../../lib/groonga/pagination.rb:159
msgid "最初のページ番号。常に1を返す。"
msgstr ""

#: ../../lib/groonga/pagination.rb:164
msgid "現在のページが最初のページなら +true+ を返す。"
msgstr ""

#: ../../lib/groonga/pagination.rb:169
msgid "最後のページ番号。"
msgstr ""

#: ../../lib/groonga/pagination.rb:174
msgid "現在のページが最後のページなら +true+ を返す。"
msgstr ""

#: ../../lib/groonga/pagination.rb:179
msgid "次のページがあるなら +true+ を返す。"
msgstr ""

#: ../../lib/groonga/pagination.rb:184
msgid ""
"次のページ番号を返す。次のページがない場合は +nil+\n"
"を返す。"
msgstr ""

#: ../../lib/groonga/pagination.rb:190
msgid "前のページがあるなら +true+ を返す。"
msgstr ""

#: ../../lib/groonga/pagination.rb:195
msgid ""
"前のページ番号を返す。前のページがない場合は +nil+\n"
"を返す。"
msgstr ""

#: ../../lib/groonga/pagination.rb:201
msgid "1ページあたりのレコード数を返す。"
msgstr ""

#: ../../lib/groonga/pagination.rb:206
msgid ""
"現在のページに含まれているレコードのうち、先頭のレコー\n"
"ドが何番目のレコードかを返す。0ベースではなく1ベースで\n"
"あることに注意。つまり、最初のレコードは0番目のレコー\n"
"ドではなく、1番目のレコードになる。"
msgstr ""

#: ../../lib/groonga/pagination.rb:211
#: ../../lib/groonga/pagination.rb:222
msgid "レコードが1つもない場合は +nil+ を返す。"
msgstr ""

#: ../../lib/groonga/pagination.rb:217
msgid ""
"現在のページに含まれているレコードのうち、最後のレコー\n"
"ドが何番目のレコードかを返す。0ベースではなく1ベースで\n"
"あることに注意。つまり、最初のレコードは0番目のレコー\n"
"ドではなく、1番目のレコードになる。"
msgstr ""

#: ../../lib/groonga/pagination.rb:228
msgid "最初のページから最後のページまでを含んだRangeを返す。"
msgstr ""

#: ../../lib/groonga/pagination.rb:231
msgid "1..10"
msgstr ""

#: ../../lib/groonga/pagination.rb:231
msgid "tag|example|10ページある場合は以下を返す。"
msgstr ""

#: ../../lib/groonga/patricia-trie.rb:21
msgid ""
"_text_ を走査し、レコードのキーとマッチする部分文字列ごとに\n"
"そのレコードが _record_ として、その部分文字列が _word_ として、\n"
"ブロックが呼び出される。ブロックから返された文字列が元の部\n"
"分文字列と置換される。全てのヒットに対してのその置換処理が\n"
"行われた文字列が返される。"
msgstr ""

# @example
#: ../../lib/groonga/patricia-trie.rb:51
msgid ""
"include ERB::Util\n"
"Groonga::Context.default_options = {:encoding => \"utf-8\"}\n"
"words = Groonga::PatriciaTrie.create(:key_type => \"ShortText\",\n"
"                                     :key_normalize => true)\n"
"words.add('ｶﾞｯ')\n"
"words.add('ＭＵＴＥＫＩ')\n"
"\n"
"text = 'muTEki マッチしない <> ガッ'\n"
"other_text_handler = Proc.new do |string|\n"
"  h(string)\n"
"end\n"
"words.tag_keys(text) do |record, word|\n"
"  \"<span class=\\\"keyword\\\">#{h(word)}(#{h(record.key)})</span>\n"
"\"\n"
"end\n"
"# =>\n"
"# \"<span class=\\\"keyword\\\">muTEki(muteki)</span>\n"
"\" +\n"
"# \" マッチしない &lt;&gt; \" +\n"
"# \"<span class=\\\"keyword\\\">ガッ(ガッ)</span>\n"
"\""
msgstr ""

#: ../../lib/groonga/posting.rb:22
msgid "This class keeps posting information."
msgstr ""

#: ../../lib/groonga/posting.rb:26
msgid "The record ID."
msgstr ""

#: ../../lib/groonga/posting.rb:29
msgid "The section ID."
msgstr ""

#: ../../lib/groonga/posting.rb:32
msgid "The term ID."
msgstr ""

#: ../../lib/groonga/posting.rb:35
msgid "The position."
msgstr ""

#: ../../lib/groonga/posting.rb:38
msgid "The term frequency."
msgstr ""

#: ../../lib/groonga/posting.rb:41
msgid "The weight."
msgstr ""

#: ../../lib/groonga/posting.rb:44
msgid "The number of rest posting information for the term ID."
msgstr ""

#: ../../lib/groonga/posting.rb:47
msgid "The table of the record ID."
msgstr ""

#: ../../lib/groonga/posting.rb:50
msgid "The table of the term ID."
msgstr ""

#: ../../lib/groonga/posting.rb:53
msgid "Creates a new Posting."
msgstr ""

#: ../../lib/groonga/posting.rb:55
msgid "The new Posting."
msgstr ""

#: ../../lib/groonga/posting.rb:60
msgid "Updates all values."
msgstr ""

#: ../../lib/groonga/posting.rb:72
msgid "tag|option|parameters"
msgstr ""

#: ../../lib/groonga/posting.rb:72
msgid "tag|param|parameters"
msgstr ""

#: ../../lib/groonga/posting.rb:85
msgid "1.2.1"
msgstr ""

#: ../../lib/groonga/posting.rb:85
msgid "Returns Hash created from attributes."
msgstr ""

#: ../../lib/groonga/posting.rb:101 ../../lib/groonga/posting.rb:110
msgid "2.0.6"
msgstr ""

#: ../../lib/groonga/posting.rb:101
msgid ""
"The record for the record ID.\n"
"If table isn't assosiated, nil is returned."
msgstr ""

#: ../../lib/groonga/posting.rb:110
msgid ""
"The record for the term ID.\n"
"If lexicon isn't assosiated, nil is returned."
msgstr ""

#: ../../lib/groonga/query-logger.rb:71
msgid "a new instance of FileQueryLogger"
msgstr ""

#: ../../lib/groonga/query-logger.rb:106
msgid "a new instance of CallbackQueryLogger"
msgstr ""

#: ../../lib/groonga/record.rb:26
msgid "レコードが所属するテーブル"
msgstr ""

#: ../../lib/groonga/record.rb:28
msgid ""
"_table_ の _id_ に対応するレコードを作成する。 _values_ には各\n"
"カラムに設定する値を以下のような形式で指定する。"
msgstr ""

#: ../../lib/groonga/record.rb:31
msgid ""
"<pre>\n"
"!!!ruby\n"
"[\n"
" [\"カラム名\", 値],\n"
" [\"カラム名\", 値],\n"
" ...,\n"
"]\n"
"</pre>"
msgstr ""

# Groonga::Record#initialize
#: ../../lib/groonga/record.rb:40
msgid ""
"Each value is set by {#[]=}. See {#[]=} how to set weight for a\n"
"value."
msgstr ""

#: ../../lib/groonga/record.rb:41
msgid "a new instance of Record"
msgstr ""

#: ../../lib/groonga/record.rb:53
msgid ""
"_record_ と _other_ が同じテーブルに属していて、さらに、\n"
"同じレコードIDを持つなら +true+ を返し、そうでなければ\n"
"+false+ を返す。"
msgstr ""

#: ../../lib/groonga/record.rb:61
msgid "{Groonga::Record#==} と同じ。"
msgstr ""

#: ../../lib/groonga/record.rb:66
msgid ""
"同じテーブルの同じIDのレコードに対しては常に同じハッシュ\n"
"値を返す。"
msgstr ""

#: ../../lib/groonga/record.rb:72 ../../lib/groonga/view-record.rb:39
msgid "このレコードの _column_name_ で指定されたカラムの値を返す。"
msgstr ""

# Groonga::Record#[]=
#: ../../lib/groonga/record.rb:77
msgid "Sets column value of the record."
msgstr ""

# @see
#: ../../lib/groonga/record.rb:98
msgid "tag|see|Groonga::Table#set_column_value"
msgstr ""

#: ../../lib/groonga/record.rb:103
msgid ""
"このレコードの _column_name_ で指定されたカラムの値の最後に\n"
"_value_ を追加する。"
msgstr ""

#: ../../lib/groonga/record.rb:109
msgid ""
"このレコードの _column_name_ で指定されたカラムの値の最初に\n"
"_value_ を追加する。"
msgstr ""

#: ../../lib/groonga/record.rb:115
msgid ""
"_record_ が所属するテーブルで主キーを使える場合は +true+\n"
"を返し、使えない場合は +false+ を返す。"
msgstr ""

#: ../../lib/groonga/record.rb:121
msgid ""
"名前が _name_ のカラムがレコードの所属するテーブルで定義され\n"
"ているなら +true+ を返す。"
msgstr ""

# Groonga::Record#reference_column?
#: ../../lib/groonga/record.rb:127
msgid "名前が _name_ のカラムが参照カラムであるなら +true+ を返す。"
msgstr ""

# Groonga::Record#index_column?
#: ../../lib/groonga/record.rb:132
msgid ""
"名前が _name_ のカラムが索引カラム\n"
"（ {Groonga::IndexColumn} ）であるなら +true+ を返す。"
msgstr ""

#: ../../lib/groonga/record.rb:138
msgid "名前が _name_ のカラムの値がベクターであるなら +true+ を返す。"
msgstr ""

#: ../../lib/groonga/record.rb:145
msgid "名前が _name_ のカラムの値がスカラーであるなら +true+ を返す。"
msgstr ""

# Groonga::Record#search
#: ../../lib/groonga/record.rb:152
msgid ""
"名前が _name_ の {Groonga::IndexColumn} の search メソッドを呼ぶ。\n"
"_query_ と _options_ はそのメソッドにそのまま渡される。詳しく\n"
"は {Groonga::IndexColumn#search} を参照。"
msgstr ""

#: ../../lib/groonga/record.rb:159
msgid "レコードの主キーを返す。"
msgstr ""

# Groonga::Record#key
#: ../../lib/groonga/record.rb:161
msgid ""
"_record_ が所属するテーブルが {Groonga::Array} の場合は常\n"
"に +nil+ を返す。"
msgstr ""

#: ../../lib/groonga/record.rb:171
msgid "レコードを一意に識別するための情報を返す。"
msgstr ""

# Groonga::Record#record_id
#: ../../lib/groonga/record.rb:173
msgid ""
"_record_ が所属するテーブルが {Groonga::Array} の場合はID\n"
"を返し、それ以外の場合は主キーを返す。"
msgstr ""

#: ../../lib/groonga/record.rb:183 ../../lib/groonga/record.rb:187
msgid "レコードのIDを返す。"
msgstr ""

#: ../../lib/groonga/record.rb:189
msgid ""
"レコードのスコア値を返す。検索結果として生成されたテーブル\n"
"のみに定義される。"
msgstr ""

#: ../../lib/groonga/record.rb:195
msgid "Sets score. Score column exists only search result table."
msgstr ""

#: ../../lib/groonga/record.rb:197
msgid "The new score."
msgstr ""

# @param [Integer]
#: ../../lib/groonga/record.rb:197
msgid "tag|param|new_score"
msgstr ""

# Groonga::Record#support_score?
#: ../../lib/groonga/record.rb:202
msgid ""
"{Groonga::Record#score} が利用できる場合は +true+ を\n"
"返す。"
msgstr ""

#: ../../lib/groonga/record.rb:208
msgid ""
"主キーの値が同一であったレコードの件数を返す。検索結果とし\n"
"て生成されたテーブルのみに定義される。"
msgstr ""

#: ../../lib/groonga/record.rb:211
msgid ""
"{Groonga::Record#support_sub_records?} でこの値を利用でき\n"
"るかがわかる。"
msgstr "Groonga::Record#support_sub_records?を追加。"

#: ../../lib/groonga/record.rb:217
msgid ""
"{Groonga::Record#n_sub_records} が利用できる場合は +true+ を\n"
"返す。"
msgstr ""

#: ../../lib/groonga/record.rb:223
msgid "レコードの値を返す。"
msgstr ""

#: ../../lib/groonga/record.rb:228
msgid "レコードの値を設定する。既存の値は上書きされる。"
msgstr ""

# Groonga::Record#increment!
#: ../../lib/groonga/record.rb:233
msgid ""
"このレコードの _name_ で指定されたカラムの値を _delta_ だけ増\n"
"加する。 _delta_ が +nil+ の場合は1増加する。"
msgstr ""

# Groonga::Record#decrement!
#: ../../lib/groonga/record.rb:239
msgid ""
"このレコードの _name_ で指定されたカラムの値を _delta_ だけ減\n"
"少する。 _delta_ が +nil+ の場合は1減少する。"
msgstr ""

#: ../../lib/groonga/record.rb:245
msgid "レコードが所属するテーブルの全てのカラムを返す。"
msgstr ""

#: ../../lib/groonga/record.rb:250
msgid ""
"レコードが所属しているテーブルで定義されているインデックス\n"
"型のカラムでない全カラムを対象とし、カラムの名前をキーとし\n"
"たこのレコードのカラムの値のハッシュを返す。"
msgstr ""

#: ../../lib/groonga/record.rb:254
msgid "return same attributes object if duplicate records exist."
msgstr ""

# @return [String]
#: ../../lib/groonga/record.rb:271
msgid "the record formatted as JSON."
msgstr ""

#: ../../lib/groonga/record.rb:276
msgid "レコードを削除する。"
msgstr ""

#: ../../lib/groonga/record.rb:281
msgid ""
"レコードが所属するテーブルをロックする。ロックに失敗した場\n"
"合は {Groonga::ResourceDeadlockAvoided} 例外が発生する。"
msgstr ""

#: ../../lib/groonga/record.rb:286
msgid "利用可能な _option_ は以下の通り。"
msgstr ""

#: ../../lib/groonga/record.rb:296
msgid "レコードが所属するテーブルのロックを解除する。"
msgstr ""

#: ../../lib/groonga/record.rb:298 ../../lib/groonga/record.rb:305
#: ../../lib/groonga/record.rb:312
msgid "利用可能なオプションは現在は無い。"
msgstr ""

#: ../../lib/groonga/record.rb:303
msgid "レコードが所属するテーブルのロックを強制的に解除する。"
msgstr ""

#: ../../lib/groonga/record.rb:310
msgid "レコードが所属するテーブルがロックされていれば +true+ を返す。"
msgstr ""

#: ../../lib/groonga/record.rb:317
msgid "レコードが持つIDが有効なIDであれば +true+ を返す。"
msgstr ""

# @return [SubRecords]
#: ../../lib/groonga/record.rb:322
msgid "Sub records of the record."
msgstr ""

#: ../../lib/groonga/record.rb:410
msgid "Returns the value of attribute attributes"
msgstr ""

#: ../../lib/groonga/record.rb:411
msgid "a new instance of AttributeHashBuilder"
msgstr ""

#: ../../lib/groonga/schema.rb:23
msgid "groongaのスキーマ（データ構造）を管理するクラス。"
msgstr ""

# Groonga::Schema
#: ../../lib/groonga/schema.rb:25
msgid ""
"{Groonga::Schema} を使うことにより簡単にテーブルやカラムを\n"
"追加・削除することができる。"
msgstr ""

# @example 上図のようなスキーマを定義する場合は以下のようになる。
#: ../../lib/groonga/schema.rb:46
msgid ""
"Groonga::Schema.define do |schema|\n"
"  schema.create_table(\"Items\") do |table|\n"
"    table.short_text(\"title\")\n"
"  end\n"
"\n"
"  schema.create_table(\"Users\") do |table|\n"
"    table.short_text(\"name\")\n"
"  end\n"
"\n"
"  schema.create_table(\"comments\") do |table|\n"
"    table.reference(\"item\", \"Items\")\n"
"    table.reference(\"author\", \"Users\")\n"
"    table.text(\"content\")\n"
"    table.time(\"issued\")\n"
"  end\n"
"end"
msgstr ""

#: ../../lib/groonga/schema.rb:46
msgid "tag|example|上図のようなスキーマを定義する場合は以下のようになる。"
msgstr ""

#: ../../lib/groonga/schema.rb:48
msgid "スキーマ操作で発生する例外のスーパークラス。"
msgstr ""

#: ../../lib/groonga/schema.rb:52
msgid "テーブルが存在しないときに発生する。"
msgstr ""

#: ../../lib/groonga/schema.rb:54 ../../lib/groonga/schema.rb:63
#: ../../lib/groonga/schema.rb:140 ../../lib/groonga/schema.rb:1692
#: ../../lib/groonga/schema.rb:1758 ../../lib/groonga/schema.rb:1837
msgid "Returns the value of attribute name"
msgstr ""

#: ../../lib/groonga/schema.rb:54
msgid "a new instance of TableNotExists"
msgstr ""

#: ../../lib/groonga/schema.rb:61
msgid "カラムが存在しないときに発生する。"
msgstr ""

#: ../../lib/groonga/schema.rb:63
msgid "a new instance of ColumnNotExists"
msgstr ""

#: ../../lib/groonga/schema.rb:70
msgid ""
"すでに存在するテーブルと違うオプションでテーブルを作ろ\n"
"うとしたときに発生する。"
msgstr ""

#: ../../lib/groonga/schema.rb:73 ../../lib/groonga/schema.rb:85
#: ../../lib/groonga/schema.rb:115 ../../lib/groonga/schema.rb:1693
#: ../../lib/groonga/schema.rb:1759 ../../lib/groonga/schema.rb:1791
#: ../../lib/groonga/schema.rb:1838
msgid "Returns the value of attribute options"
msgstr ""

#: ../../lib/groonga/schema.rb:73
msgid "a new instance of TableCreationWithDifferentOptions"
msgstr ""

#: ../../lib/groonga/schema.rb:82
msgid ""
"すでに存在するカラムと違うオプションでテーブルを作ろ\n"
"うとしたときに発生する。"
msgstr ""

#: ../../lib/groonga/schema.rb:85
msgid "Returns the value of attribute column"
msgstr ""

#: ../../lib/groonga/schema.rb:85
msgid "a new instance of ColumnCreationWithDifferentOptions"
msgstr ""

#: ../../lib/groonga/schema.rb:94
msgid "未知のインデックス対象テーブルを指定したときに発生する。"
msgstr ""

#: ../../lib/groonga/schema.rb:96
msgid "a new instance of UnknownIndexTargetTable"
msgstr ""

#: ../../lib/groonga/schema.rb:103
msgid "未知のインデックス対象を指定したときに発生する。"
msgstr ""

#: ../../lib/groonga/schema.rb:105
msgid "a new instance of UnknownIndexTarget"
msgstr ""

#: ../../lib/groonga/schema.rb:105
msgid "Returns the value of attribute targets"
msgstr ""

#: ../../lib/groonga/schema.rb:113
msgid "未知のオプションを指定したときに発生する。"
msgstr ""

#: ../../lib/groonga/schema.rb:115
msgid "Returns the value of attribute available_keys"
msgstr ""

#: ../../lib/groonga/schema.rb:115
msgid "Returns the value of attribute unknown_keys"
msgstr ""

#: ../../lib/groonga/schema.rb:115
msgid "a new instance of UnknownOptions"
msgstr ""

#: ../../lib/groonga/schema.rb:127
msgid "未知のテーブルの種類を指定したときに発生する。"
msgstr ""

#: ../../lib/groonga/schema.rb:129
msgid "Returns the value of attribute available_types"
msgstr ""

#: ../../lib/groonga/schema.rb:129 ../../lib/groonga/schema.rb:1692
msgid "Returns the value of attribute type"
msgstr ""

#: ../../lib/groonga/schema.rb:129
msgid "a new instance of UnknownTableType"
msgstr ""

#: ../../lib/groonga/schema.rb:138
msgid "参照先のテーブルを推測できないときに発生する。"
msgstr ""

#: ../../lib/groonga/schema.rb:140
msgid "a new instance of UnguessableReferenceTable"
msgstr ""

#: ../../lib/groonga/schema.rb:140
msgid "Returns the value of attribute tried_table_names"
msgstr ""

#: ../../lib/groonga/schema.rb:152
msgid ""
"スキーマを定義する。ブロックには {Groonga::Schema} オブ\n"
"ジェクトがわたるので、そのオブジェクトを利用してスキー\n"
"マを定義する。以下の省略形。"
msgstr ""

# Groonga::Schema.define
#: ../../lib/groonga/schema.rb:156
msgid ""
"<pre>\n"
"!!!ruby\n"
"schema = Groonga::Scheme.new(options)\n"
"# ...\n"
"schema.define\n"
"</pre>"
msgstr ""

#: ../../lib/groonga/schema.rb:174
msgid "名前が _name_ のテーブルを作成する。以下の省略形。"
msgstr ""

# Groonga::Schema.create_table
#: ../../lib/groonga/schema.rb:176
msgid ""
"<pre>\n"
"!!!ruby\n"
"Groonga::Schema.define do |schema|\n"
"  schema.create_table(name, options) do |table|\n"
"    # ...\n"
"  end\n"
"end\n"
"</pre>"
msgstr ""

#: ../../lib/groonga/schema.rb:185 ../../lib/groonga/schema.rb:443
msgid ""
"ブロックには {Groonga::Schema::TableDefinition} オブジェ\n"
"クトがわたるので、そのオブジェクトを利用してテーブル\n"
"の詳細を定義する。"
msgstr ""

# @overload
#: ../../lib/groonga/schema.rb:414 ../../lib/groonga/schema.rb:775
msgid "tag|overload|create_table"
msgstr ""

#: ../../lib/groonga/schema.rb:420 ../../lib/groonga/schema.rb:512
#: ../../lib/groonga/schema.rb:782
msgid "名前が _name_ のテーブルを削除する。"
msgstr ""

#: ../../lib/groonga/schema.rb:432
msgid "名前が _name_ のテーブルを変更する。以下の省略形。"
msgstr ""

# Groonga::Schema.change_table
#: ../../lib/groonga/schema.rb:434
msgid ""
"<pre>\n"
"!!!ruby\n"
"Groonga::Schema.define do |schema|\n"
"  schema.change_table(name, options) do |table|\n"
"    # ...\n"
"  end\n"
"end\n"
"</pre>"
msgstr ""

#: ../../lib/groonga/schema.rb:458
msgid "(See Groonga::Schema#rename_table)"
msgstr ""

#: ../../lib/groonga/schema.rb:460
msgid "This is a syntax sugar of the following code:"
msgstr ""

# Groonga::Schema.rename_table
#: ../../lib/groonga/schema.rb:462
msgid ""
"<pre>\n"
"!!!ruby\n"
"Groonga::Schema.define do |schema|\n"
"  schema.rename_table(current_name, new_name, options)\n"
"end\n"
"</pre>"
msgstr ""

#: ../../lib/groonga/schema.rb:474
msgid "名前が_name_のビューを作成する。以下の省略形。"
msgstr ""

# Groonga::Schema.create_view
#: ../../lib/groonga/schema.rb:476
msgid ""
"<pre>\n"
"!!!ruby\n"
"Groonga::Schema.define do |schema|\n"
"  schema.create_view(name, options) do |view|\n"
"    # ...\n"
"  end\n"
"end\n"
"</pre>\n"
"ブロックには {Groonga::Schema::ViewDefinition} オブジェ\n"
"クトがわたるので、そのオブジェクトを利用してビュー\n"
"の詳細を定義する。"
msgstr ""

#: ../../lib/groonga/schema.rb:524
msgid "名前が _name_ のビューを変更する。以下の省略形。"
msgstr ""

# Groonga::Schema.change_view
#: ../../lib/groonga/schema.rb:526
msgid ""
"<pre>\n"
"!!!ruby\n"
"Groonga::Schema.define do |schema|\n"
"  schema.change_view(name, options) do |view|\n"
"    # ...\n"
"  end\n"
"end\n"
"</pre>"
msgstr ""

#: ../../lib/groonga/schema.rb:535
msgid ""
"ブロックには {Groonga::Schema::ViewDefinition} オブジェ\n"
"クトがわたるので、そのオブジェクトを利用してテーブル\n"
"の詳細を定義する。"
msgstr ""

#: ../../lib/groonga/schema.rb:550 ../../lib/groonga/schema.rb:892
msgid "以下と同様:"
msgstr ""

# Groonga::Schema.remove_column
#: ../../lib/groonga/schema.rb:552
msgid ""
"<pre>\n"
"!!!ruby\n"
"Groonga::Schema.change_table(table_name) do |table|\n"
"  table.remove_column(column_name)\n"
"end\n"
"</pre>"
msgstr ""

#: ../../lib/groonga/schema.rb:564
msgid "This is a syntax sugar of the following:"
msgstr ""

# Groonga::Schema.rename_column
#: ../../lib/groonga/schema.rb:566
msgid ""
"<pre>\n"
"!!!ruby\n"
"Groonga::Schema.define do |schema|\n"
"  schema.rename_column(table_name,\n"
"                       current_column_name, new_column_name)\n"
"end\n"
"</pre>"
msgstr ""

#: ../../lib/groonga/schema.rb:579
msgid ""
"スキーマの内容を文字列をRubyスクリプト形式またはgrn式\n"
"形式で返す。デフォルトはRubyスクリプト形式である。\n"
"Rubyスクリプト形式で返された値は\n"
"{Groonga::Schema.restore} することによりスキーマ内に組み\n"
"込むことができる。"
msgstr ""

#: ../../lib/groonga/schema.rb:585 ../../lib/groonga/schema.rb:606
msgid "dump.rb:"
msgstr ""

# Groonga::Schema.dump
#: ../../lib/groonga/schema.rb:587
msgid ""
"<pre>\n"
"!!!ruby\n"
"File.open(\"/tmp/groonga-schema.rb\", \"w\") do |schema|\n"
"  dumped_text = Groonga::Schema.dump\n"
"end\n"
"</pre>"
msgstr ""

#: ../../lib/groonga/schema.rb:594
msgid "restore.rb:"
msgstr ""

# Groonga::Schema.dump
#: ../../lib/groonga/schema.rb:596
msgid ""
"<pre>\n"
"!!!ruby\n"
"dumped_text = Groonga::Schema.dump\n"
"Groonga::Database.create(:path => \"/tmp/new-db.grn\")\n"
"Groonga::Schema.restore(dumped_text)\n"
"</pre>"
msgstr ""

#: ../../lib/groonga/schema.rb:603
msgid ""
"grn式形式で返された値はgroongaコマンドで読み込むこと\n"
"ができる。"
msgstr ""

# Groonga::Schema.dump
#: ../../lib/groonga/schema.rb:608
msgid ""
"<pre>\n"
"!!!ruby\n"
"File.open(\"/tmp/groonga-schema.grn\", \"w\") do |schema|\n"
"  dumped_text = Groonga::Schema.dump(:syntax => :command)\n"
"end\n"
"</pre>"
msgstr ""

#: ../../lib/groonga/schema.rb:615
msgid ""
"<pre>\n"
"!!!text\n"
"% groonga db/path < /tmp/groonga-schema.grn\n"
"</pre>"
msgstr ""

# Groonga::Schema.restore
#: ../../lib/groonga/schema.rb:638
msgid "{Groonga::Schema.dump} で文字列化したスキーマを組み込む。"
msgstr ""

#: ../../lib/groonga/schema.rb:724
msgid "スキーマ定義を開始する。"
msgstr ""

#: ../../lib/groonga/schema.rb:729
msgid "a new instance of Schema"
msgstr ""

#: ../../lib/groonga/schema.rb:736
msgid "定義されたスキーマ定義を実際に実行する。"
msgstr ""

# Groonga::Schema#load
# Groonga::Schema#restore
#: ../../lib/groonga/schema.rb:743 ../../lib/groonga/schema.rb:750
msgid "{Groonga::Schema#dump} で返されたスキーマの内容を読み込む。"
msgstr ""

# Groonga::Schema#restore
#: ../../lib/groonga/schema.rb:745
msgid ""
"読み込まれた内容は {#define} を呼び出すまでは実行されない\n"
"ことに注意すること。"
msgstr ""

# Groonga::Schema#load
#: ../../lib/groonga/schema.rb:752
msgid ""
"読み込まれた内容は {#define} を呼び出すまでは実行されない\n"
"ことに注意すること。\n"
"for backward compatibility.\n"
"TODO: remove this at the next major release."
msgstr ""

#: ../../lib/groonga/schema.rb:754
msgid ""
"スキーマの内容を文字列で返す。返された値は\n"
"{Groonga::Schema#restore} することによりスキーマ内に組み込むことができる。"
msgstr ""

#: ../../lib/groonga/schema.rb:762
msgid "名前が _name_ のテーブルを作成する。"
msgstr ""

# Groonga::Schema#create_table
#: ../../lib/groonga/schema.rb:764
msgid ""
"テーブルの作成は {#define} を呼び出すまでは実行されないこ\n"
"とに注意すること。"
msgstr ""

# Groonga::Schema#remove_table
#: ../../lib/groonga/schema.rb:784
msgid ""
"テーブルの削除は# {define} を呼び出すまでは実行されないこ\n"
"とに注意すること。"
msgstr ""

#: ../../lib/groonga/schema.rb:797
msgid "名前が _name_ のテーブルを変更する。"
msgstr ""

# Groonga::Schema#change_table
#: ../../lib/groonga/schema.rb:799
msgid ""
"テーブルの変更は {#define} を呼び出すまでは実行されないこ\n"
"とに注意すること。"
msgstr ""

#: ../../lib/groonga/schema.rb:814
msgid "Renames _current_name_ table to _new_name."
msgstr "テーブルの名前を _current_name_ から _new_name_ に変更します。 "

#: ../../lib/groonga/schema.rb:816
msgid ""
"Note that table renaming will will not be performed\n"
"until {#define} is called."
msgstr "{#define} が呼ばれるまで名前の変更は実行されないことに注意してください。"

#: ../../lib/groonga/schema.rb:829
msgid "名前が _name_ のビューを作成する。"
msgstr ""

# Groonga::Schema#create_view
#: ../../lib/groonga/schema.rb:831
msgid ""
"ビューの作成は {#define} を呼び出すまでは実行されないこ\n"
"とに注意すること。"
msgstr ""

#: ../../lib/groonga/schema.rb:859
msgid "名前が _name_ のビューを削除する。"
msgstr ""

# Groonga::Schema#remove_view
#: ../../lib/groonga/schema.rb:861
msgid ""
"ビューの削除は {#define} を呼び出すまでは実行されないことに\n"
"注意すること。"
msgstr ""

#: ../../lib/groonga/schema.rb:875
msgid "名前が _name_ のビューを変更する。"
msgstr ""

# Groonga::Schema#change_view
#: ../../lib/groonga/schema.rb:877
msgid ""
"ビューの変更は {#define} を呼び出すまでは実行されないこ\n"
"とに注意すること。"
msgstr ""

# Groonga::Schema#remove_column
#: ../../lib/groonga/schema.rb:894
msgid ""
"<pre>\n"
"!!!ruby\n"
"schema.change_table(table_name) do |table|\n"
"  table.remove_column(column_name)\n"
"end\n"
"</pre>"
msgstr ""

#: ../../lib/groonga/schema.rb:906
msgid "It is a syntax sugar of the following:"
msgstr ""

# Groonga::Schema#rename_column
#: ../../lib/groonga/schema.rb:908
msgid ""
"<pre>\n"
"!!!ruby\n"
"schema.change_table(table_name) do |table|\n"
"  table.rename_column(current_column_name, new_column_name)\n"
"end\n"
"</pre>"
msgstr ""

# Groonga::Schema::TableDefinition
#: ../../lib/groonga/schema.rb:949
msgid ""
"スキーマ定義時に {Groonga::Schema.create_table} や\n"
"{Groonga::Schema#create_table} からブロックに渡されてくる\n"
"オブジェクト"
msgstr ""

#: ../../lib/groonga/schema.rb:955
msgid "テーブルの名前"
msgstr ""

#: ../../lib/groonga/schema.rb:958
msgid "a new instance of TableDefinition"
msgstr ""

# Groonga::Schema::TableDefinition#column
#: ../../lib/groonga/schema.rb:993
msgid "名前が _name_ で型が _type_ のカラムを作成する。"
msgstr ""

#: ../../lib/groonga/schema.rb:1031
msgid "名前が _name_ のカラムを削除します。"
msgstr ""

# Groonga::Schema::TableDefinition#remove_column
#: ../../lib/groonga/schema.rb:1033
msgid "_options_ に指定可能な値はありません(TODO _options_ は不要?)。"
msgstr ""

# Groonga::Schema::TableDefinition#rename_column
#: ../../lib/groonga/schema.rb:1045
msgid "Renames _current_name_ column to _new_name_ column."
msgstr ""

#: ../../lib/groonga/schema.rb:1051
msgid ""
"The name and value\n"
"pairs. Omitted names are initialized as the default\n"
"value."
msgstr "オプションを設定するハッシュ。指定されなかったオプションはデフォルト値が使われます。"

#: ../../lib/groonga/schema.rb:1063
msgid ""
"_target_table_ の _target_column_ を対象とするインデック\n"
"スカラムを作成します。複数のカラムを指定することもで\n"
"きます。"
msgstr ""

#: ../../lib/groonga/schema.rb:1067 ../../lib/groonga/schema.rb:1121
msgid ""
"_target_column_full_name_ で指定するときはテーブル名\n"
"とカラム名を\".\"でつなげます。"
msgstr ""

#: ../../lib/groonga/schema.rb:1070
msgid ""
"例えば、「Users」テーブルの「name」カラムのインデックスカラムを\n"
"指定する場合はこうなります。"
msgstr ""

# @param [Array] args
#: ../../lib/groonga/schema.rb:1101
msgid ""
"インデックスカラム作成時に指定できるオプション。\n"
"ハッシュを使って次の要素を指定することができる。\n"
"\n"
"- :name :=\n"
"  インデックスカラムのカラム名を任意に指定する。 =:\n"
"- :force :=\n"
"  +true+ を指定すると既存の同名のカラムが\n"
"  存在していても、強制的に新しいカラムを作成する。 =:\n"
"- :path :=\n"
"  カラムを保存するパス。 =:\n"
"- :persistent :=\n"
"  +true+ を指定すると永続カラムとなる。\n"
"  +:path+ を省略した場合は自動的にパスが付加される。 =:\n"
"- :with_section :=\n"
"  +true+ を指定すると転置索引にsection(段落情報)を\n"
"  合わせて格納する。未指定または +nil+ を指定した場合、\n"
"  複数のカラムを指定すると自動的に有効になる。 =:\n"
"- :with_weight :=\n"
"  +true+ を指定すると転置索引にweight情報を合わせて\n"
"  格納する。 =:\n"
"- :with_position :=\n"
"  +true+ を指定すると転置索引に出現位置情報を合わせて\n"
"  格納する。未指定または +nil+ を指定した場合、テーブル\n"
"  がN-gram系のトークナイザーを利用している場合は\n"
"  自動的に有効になる。 =:"
msgstr ""

# @param [::Hash]
# @param [Array]
#: ../../lib/groonga/schema.rb:1101 ../../lib/groonga/schema.rb:1131
msgid "tag|param|args"
msgstr ""

# @example
#: ../../lib/groonga/schema.rb:1101
msgid "table.index(\"Users.name\")"
msgstr ""

#: ../../lib/groonga/schema.rb:1118
msgid ""
"_target_table_ の _target_column_ を対象とするインデッ\n"
"クスカラムを削除します。"
msgstr ""

#: ../../lib/groonga/schema.rb:1124
msgid ""
"例えば、「Users」テーブルの「name」カラムのインデックスカラムを\n"
"削除する場合はこうなります。"
msgstr ""

#: ../../lib/groonga/schema.rb:1131
msgid ""
"{ :name => target_column }と指定す\n"
"ることでインデックスカラムの任意のカラム名を指定することができる。"
msgstr ""

# @example
#: ../../lib/groonga/schema.rb:1131
msgid "table.remove_index(\"Users.name\")"
msgstr ""

#: ../../lib/groonga/schema.rb:1151 ../../lib/groonga/schema.rb:1159
msgid "Defines a 8 bit signed integer column named @name@."
msgstr "@name@ という名前8ビット符号付き整数のカラムを定義します。"

# @param [String or Symbol]
#: ../../lib/groonga/schema.rb:1155 ../../lib/groonga/schema.rb:1165
#: ../../lib/groonga/schema.rb:1194 ../../lib/groonga/schema.rb:1204
#: ../../lib/groonga/schema.rb:1313 ../../lib/groonga/schema.rb:1323
msgid "tag|param|name"
msgstr ""

#: ../../lib/groonga/schema.rb:1155 ../../lib/groonga/schema.rb:1165
#: ../../lib/groonga/schema.rb:1194 ../../lib/groonga/schema.rb:1204
#: ../../lib/groonga/schema.rb:1313 ../../lib/groonga/schema.rb:1323
msgid "the column name"
msgstr ""

#: ../../lib/groonga/schema.rb:1155 ../../lib/groonga/schema.rb:1165
#: ../../lib/groonga/schema.rb:1194 ../../lib/groonga/schema.rb:1204
#: ../../lib/groonga/schema.rb:1313 ../../lib/groonga/schema.rb:1323
msgid "({}) the options"
msgstr ""

#: ../../lib/groonga/schema.rb:1155 ../../lib/groonga/schema.rb:1165
#: ../../lib/groonga/schema.rb:1194 ../../lib/groonga/schema.rb:1204
#: ../../lib/groonga/schema.rb:1313 ../../lib/groonga/schema.rb:1323
msgid "#column for available options."
msgstr ""

#: ../../lib/groonga/schema.rb:1155 ../../lib/groonga/schema.rb:1165
#: ../../lib/groonga/schema.rb:1194 ../../lib/groonga/schema.rb:1204
#: ../../lib/groonga/schema.rb:1313 ../../lib/groonga/schema.rb:1323
msgid "tag|see|#column"
msgstr ""

#: ../../lib/groonga/schema.rb:1161 ../../lib/groonga/schema.rb:1169
msgid "Defines a 16 bit signed integer column named @name@."
msgstr "@name@ という名前16ビット符号付き整数のカラムを定義します。"

#: ../../lib/groonga/schema.rb:1171 ../../lib/groonga/schema.rb:1178
#: ../../lib/groonga/schema.rb:1179
msgid "名前が _name_ の32bit符号付き整数のカラムを作成する。"
msgstr ""

#: ../../lib/groonga/schema.rb:1173 ../../lib/groonga/schema.rb:1180
#: ../../lib/groonga/schema.rb:1181 ../../lib/groonga/schema.rb:1183
#: ../../lib/groonga/schema.rb:1190 ../../lib/groonga/schema.rb:1212
#: ../../lib/groonga/schema.rb:1219 ../../lib/groonga/schema.rb:1220
#: ../../lib/groonga/schema.rb:1222 ../../lib/groonga/schema.rb:1229
#: ../../lib/groonga/schema.rb:1232 ../../lib/groonga/schema.rb:1241
#: ../../lib/groonga/schema.rb:1261 ../../lib/groonga/schema.rb:1269
#: ../../lib/groonga/schema.rb:1271 ../../lib/groonga/schema.rb:1280
#: ../../lib/groonga/schema.rb:1292 ../../lib/groonga/schema.rb:1301
#: ../../lib/groonga/schema.rb:1308
msgid ""
"_options_ に指定可能な値は\n"
"{Groonga::Schema::TableDefinition#column} を参照。"
msgstr ""

#: ../../lib/groonga/schema.rb:1181 ../../lib/groonga/schema.rb:1188
msgid "名前が _name_ の64bit符号付き整数のカラムを作成する。"
msgstr ""

#: ../../lib/groonga/schema.rb:1190 ../../lib/groonga/schema.rb:1198
msgid "Defines a 8 bit unsigned integer column named @name@."
msgstr "@name@ という名前8ビット符号なし整数のカラムを定義します。"

#: ../../lib/groonga/schema.rb:1200 ../../lib/groonga/schema.rb:1208
msgid "Defines a 16 bit unsigned integer column named @name@."
msgstr "@name@ という名前16ビット符号なし整数のカラムを定義します。<"

#: ../../lib/groonga/schema.rb:1210 ../../lib/groonga/schema.rb:1217
#: ../../lib/groonga/schema.rb:1218
msgid "名前が _name_ の32bit符号なし整数のカラムを作成する。"
msgstr ""

#: ../../lib/groonga/schema.rb:1220 ../../lib/groonga/schema.rb:1227
msgid "名前が _name_ の64bit符号なし整数のカラムを作成する。"
msgstr ""

#: ../../lib/groonga/schema.rb:1229
msgid ""
"名前が _name_ のieee754形式の64bit浮動小数点数のカラム\n"
"を作成する。"
msgstr ""

#: ../../lib/groonga/schema.rb:1238
msgid ""
"名前が _name_ の64bit符号付き整数で1970年1月1日0時0分\n"
"0秒からの経過マイクロ秒数を格納するカラムを作成する。"
msgstr ""

# Groonga::Schema::TableDefinition#timestamps
#: ../../lib/groonga/schema.rb:1247
msgid ""
"以下と同様:\n"
"<pre>\n"
"!!!ruby\n"
"table.time(\"updated_at\")\n"
"table.time(\"created_at\")\n"
"</pre>"
msgstr ""

#: ../../lib/groonga/schema.rb:1258 ../../lib/groonga/schema.rb:1266
msgid ""
"名前が _name_ の4Kbyte以下の文字列を格納できるカラムを\n"
"作成する。"
msgstr ""

#: ../../lib/groonga/schema.rb:1268
msgid ""
"名前が _name_ の64Kbyte以下の文字列を格納できるカラムを\n"
"作成する。"
msgstr ""

#: ../../lib/groonga/schema.rb:1277
msgid ""
"名前が _name_ の2Gbyte以下の文字列を格納できるカラムを\n"
"作成する。"
msgstr ""

#: ../../lib/groonga/schema.rb:1286
msgid ""
"名前が _name_ で _table_ のレコードIDを格納する参照カラ\n"
"ムを作成する。"
msgstr ""

#: ../../lib/groonga/schema.rb:1289
msgid ""
"_table_ が省略された場合は _name_ の複数形が使われる。\n"
"例えば、 _name_ が\"user\"な場合は _table_ は\"users\"になる。"
msgstr ""

#: ../../lib/groonga/schema.rb:1299 ../../lib/groonga/schema.rb:1306
msgid "名前が _name_ の真偽値を格納できるカラムを作成する。"
msgstr ""

#: ../../lib/groonga/schema.rb:1308
msgid ""
"Defines a geo point in Tokyo geodetic system column\n"
"named @name@."
msgstr ""

#: ../../lib/groonga/schema.rb:1318 ../../lib/groonga/schema.rb:1327
msgid ""
"Defines a geo point in WGS 84 (World Geodetic System) column\n"
"named @name@."
msgstr ""

#: ../../lib/groonga/schema.rb:1540
msgid "a new instance of TableRemoveDefinition"
msgstr ""

#: ../../lib/groonga/schema.rb:1571
msgid "a new instance of TableRenameDefinition"
msgstr ""

# Groonga::Schema::ViewDefinition
#: ../../lib/groonga/schema.rb:1595
msgid ""
"スキーマ定義時に {Groonga::Schema.create_view} や\n"
"{Groonga::Schema#create_view} からブロックに渡されてくる\n"
"オブジェクト"
msgstr ""

#: ../../lib/groonga/schema.rb:1599
msgid "ビューの名前"
msgstr ""

#: ../../lib/groonga/schema.rb:1602
msgid "a new instance of ViewDefinition"
msgstr ""

#: ../../lib/groonga/schema.rb:1634
msgid "名前が _table_ のテーブルをビューに追加する。"
msgstr ""

#: ../../lib/groonga/schema.rb:1676
msgid "a new instance of ViewRemoveDefinition"
msgstr ""

# @param value
#: ../../lib/groonga/schema.rb:1691 ../../lib/groonga/schema.rb:1757
#: ../../lib/groonga/schema.rb:1836
msgid "the value to set the attribute name to."
msgstr ""

# @param value
#: ../../lib/groonga/schema.rb:1691
msgid "the value to set the attribute type to."
msgstr ""

#: ../../lib/groonga/schema.rb:1692
msgid "Sets the attribute type"
msgstr ""

#: ../../lib/groonga/schema.rb:1692 ../../lib/groonga/schema.rb:1758
#: ../../lib/groonga/schema.rb:1837
msgid "Sets the attribute name"
msgstr ""

#: ../../lib/groonga/schema.rb:1694
msgid "a new instance of ColumnDefinition"
msgstr ""

#: ../../lib/groonga/schema.rb:1760
msgid "a new instance of ColumnRemoveDefinition"
msgstr ""

# @param value
#: ../../lib/groonga/schema.rb:1789
msgid "the value to set the attribute current_name to."
msgstr ""

# @param value
#: ../../lib/groonga/schema.rb:1789
msgid "the value to set the attribute new_name to."
msgstr ""

#: ../../lib/groonga/schema.rb:1790
msgid "Returns the value of attribute current_name"
msgstr ""

#: ../../lib/groonga/schema.rb:1790
msgid "Returns the value of attribute new_name"
msgstr ""

#: ../../lib/groonga/schema.rb:1790
msgid "Sets the attribute new_name"
msgstr ""

#: ../../lib/groonga/schema.rb:1790
msgid "Sets the attribute current_name"
msgstr ""

#: ../../lib/groonga/schema.rb:1792
msgid "a new instance of ColumnRenameDefinition"
msgstr ""

# @param value
#: ../../lib/groonga/schema.rb:1836
msgid "the value to set the attribute target_columns to."
msgstr ""

# @param value
#: ../../lib/groonga/schema.rb:1836
msgid "the value to set the attribute target_table to."
msgstr ""

#: ../../lib/groonga/schema.rb:1837
msgid "Sets the attribute target_table"
msgstr ""

#: ../../lib/groonga/schema.rb:1837
msgid "Returns the value of attribute target_columns"
msgstr ""

#: ../../lib/groonga/schema.rb:1837
msgid "Returns the value of attribute target_table"
msgstr ""

# Groonga::Schema::IndexColumnDefinition#target_columns=
#: ../../lib/groonga/schema.rb:1837
msgid "Sets the attribute target_columns"
msgstr ""

#: ../../lib/groonga/schema.rb:1839
msgid "a new instance of IndexColumnDefinition"
msgstr ""

# Groonga::SubRecords
#: ../../lib/groonga/sub-records.rb:20
msgid ""
"Represents sub records of a {Record}. Grouped result set by\n"
"{Table#group} only has sub records."
msgstr ""

# Groonga::SubRecords
#: ../../lib/groonga/sub-records.rb:23
msgid "{SubRecords} acts like an ::Array."
msgstr ""

# @param [Record] record
# Groonga::SubRecords#record
#: ../../lib/groonga/sub-records.rb:27
#: ../../lib/groonga/sub-records.rb:36
msgid "The record that has this sub records."
msgstr ""

# Groonga::SubRecords#initialize
#: ../../lib/groonga/sub-records.rb:30
msgid "Creates a sub records container for the _record_."
msgstr ""

# Groonga::SubRecords#initialize
#: ../../lib/groonga/sub-records.rb:32
msgid ""
"Normally, users don't need to instantiate {SubRecords}\n"
"directly. {Record#sub_records} creates and returns a\n"
"{SubRecords}."
msgstr ""

# @param [Record]
#: ../../lib/groonga/sub-records.rb:36
msgid "tag|param|record"
msgstr ""

# @return [SubRecords]
#: ../../lib/groonga/sub-records.rb:36
msgid "a new instance of SubRecords"
msgstr ""

# @yield [record]
#: ../../lib/groonga/sub-records.rb:43
msgid "Gives a sub record to the block."
msgstr ""

# @yieldparam [Record]
#: ../../lib/groonga/sub-records.rb:43
msgid "tag|yieldparam|record"
msgstr ""

#: ../../lib/groonga/sub-records.rb:43
msgid "A sub record."
msgstr "サブレコード。"

# @return [Array<Record>]
#: ../../lib/groonga/sub-records.rb:48
msgid "Sub records as ::Array."
msgstr ""

# Groonga::SubRecords#to_ary
#: ../../lib/groonga/sub-records.rb:53
msgid "Acts as ::Array"
msgstr ""

# @param [Integer] index
#: ../../lib/groonga/sub-records.rb:57
msgid "A 0-origin index."
msgstr ""

# @param [Integer]
#: ../../lib/groonga/sub-records.rb:57
msgid "tag|param|index"
msgstr ""

# @return [Record]
#: ../../lib/groonga/sub-records.rb:57
msgid "A sub record at _index_."
msgstr ""

#: ../../lib/groonga/view-record.rb:21
msgid "レコードが所属するビュー"
msgstr ""

#: ../../lib/groonga/view-record.rb:23
msgid "レコードのID"
msgstr ""

#: ../../lib/groonga/view-record.rb:26
msgid "a new instance of ViewRecord"
msgstr ""

# Groonga::ViewRecord#initialize
#: ../../lib/groonga/view-record.rb:26
msgid "_table_ の _id_ に対応するレコードを作成する。"
msgstr ""

# Groonga::ViewRecord#==
#: ../../lib/groonga/view-record.rb:32
msgid ""
"_record_ と _other_ が同じgroongaのレコードなら +true+ を返し、\n"
"そうでなければ +false+ を返す。"
msgstr ""
